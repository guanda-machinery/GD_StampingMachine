<UserControl
    x:Name="StampingMainViewUserControl"
    x:Class="GD_StampingMachine.Views.StampingMainView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:GD_ViewModels="clr-namespace:GD_StampingMachine.ViewModels"
             xmlns:GD_Enum="clr-namespace:GD_StampingMachine.GD_Enum;assembly=GD_StampingMachine.GD_Enum"
             mc:Ignorable="d"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" 
             xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
             xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" 
             xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" 
             xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"                       
             xmlns:dxsch="http://schemas.devexpress.com/winfx/2008/xaml/scheduling"          
             xmlns:GD_Common="clr-namespace:GD_CommonLibrary;assembly=GD_CommonLibrary"
             xmlns:GD_Singletons="clr-namespace:GD_StampingMachine.Singletons" 
             xmlns:GD_UserControls="clr-namespace:GD_StampingMachine.UserControls"
             xmlns:GD_stampingmachine="clr-namespace:GD_StampingMachine"
             xmlns:CalcB="clr-namespace:CalcBinding;assembly=CalcBinding" 
             xmlns:GD_Extensions="clr-namespace:GD_CommonLibrary.Extensions;assembly=GD_CommonLibrary" 
             xmlns:dd="urn:gong-wpf-dragdrop" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:GD_Popup="clr-namespace:GD_CommonLibrary.GD_Popup;assembly=GD_CommonLibrary" 
    xmlns:GD_Method="clr-namespace:GD_StampingMachine.Method" 
    xmlns:GD_ValidRule="clr-namespace:GD_CommonLibrary.ValidationRules;assembly=GD_CommonLibrary" 
    xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol" 
    xmlns:p="clr-namespace:Petzold.Media2D;assembly=Arrowheads"
    xmlns:GD_SchematicDiagram="clr-namespace:GD_StampingMachine.UserControls.NumberSettingSchematicDiagram" xmlns:sys="clr-namespace:System;assembly=mscorlib"
    d:DesignHeight="800" d:DesignWidth="1000"    
             d:DataContext="{d:DesignInstance Type=GD_ViewModels:StampingMainViewModel}">

    <materialDesign:DialogHost CloseOnClickAway="True"  >
        <materialDesign:DialogHost.IsOpen>
            <MultiBinding Converter="{GD_Common:DialogHostMultiBooleanToBooleanConverter}" >
                <MultiBinding.Bindings>
                    <Binding Path="ProductSettingVM.AddProjectDarggableIsPopup"/>
                    <Binding Path="ProductSettingVM.SelectProductProjectVM.EditProjectDarggableIsPopup"/>
                    <Binding Path="ProductSettingVM.SelectProductProjectVM.AddParameterDarggableIsPopup"/>
                    <Binding Path="ProductSettingVM.SelectProductProjectVM.PartsParameterViewModelSelectItem.EditPartDarggableIsPopup"/>
                    <Binding Path="TypeSettingSettingVM.AddProjectDistributeDarggableIsPopup"/>
                    <Binding Path="TypeSettingSettingVM.ProjectDistributeVM.AddTypeSettingProjectDarggableIsPopUp"/>
                    <Binding Path="ProductSettingVM.OpenProjectFileDarggableIsPopup"/>
                    
                    <!-- <Binding ElementName="TBtn_Speed" Path="IsChecked"/>-->
                    <!--<Binding Path="rbtn_DrillingFace_Tube" ConverterParameter="{x:Static GD_STD_Enum:TubeFace.TOP}"  Converter="{STD105:ObjectEqualToBooleanConverter}"/>-->
                </MultiBinding.Bindings>
            </MultiBinding>
        </materialDesign:DialogHost.IsOpen>
    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
            <materialDesign:ColorZone 
                MouseLeftButtonDown="ColorZone_MouseLeftButtonDown" 
        Mode="PrimaryDark"  Height="80"
        Padding="8" >
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                    <StackPanel.Resources>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource Body1TextBlock}">
                            <Setter Property="FontSize" Value="18"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="FontFamily" Value="{StaticResource MaterialDesignFont}"/>
                        </Style>
                        </StackPanel.Resources>
                        <TextBlock Text="{DynamicResource Text_TypeSettingProject}" VerticalAlignment="Center" Margin="5,0,0,0"/>
                        <TextBlock Text="：" VerticalAlignment="Center" Margin="0,0"/>
                        <ToggleButton Name="OpenProjectFileToggleButton"  Width="250"  Background="Transparent" BorderThickness="0"
                                      IsChecked="{Binding ProductSettingVM.OpenProjectFileDarggableIsPopup}"
                        Style="{StaticResource MaterialDesignFlatMidBgButton}" VerticalAlignment="Center" Height="auto">
                            <!--                            Command="{Binding OpenProjectFileCommand}"-->
                            <Border BorderBrush="{DynamicResource PrimaryHueLightForegroundBrush}"  Width="{Binding ElementName=OpenProjectFileToggleButton, Path=ActualWidth}"
                                    BorderThickness="0,0,0,1.5">
                                <TextBlock Text="{Binding  Source={x:Static GD_Singletons:StampingMachineSingleton.Instance}, Path=SelectedProjectDistributeVM.ProjectDistributeName}" Margin="4,1"/>
                            </Border>
                        </ToggleButton>

                        <GD_Popup:DraggablePopup 
                            Name="OpenProjectFileDraggablePopup"
                            AllowsTransparency="True"
                            IsOpen="{Binding ProductSettingVM.OpenProjectFileDarggableIsPopup}"
                            Placement="Bottom"
                            PlacementTarget="{Binding ElementName=OpenProjectFileToggleButton}"
                            PopupAnimation="Slide">
                            <Border BorderThickness="0"  
                                                CornerRadius="10"
                                               Background="{DynamicResource PrimaryHueLightBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                                <Border.Resources >

                                </Border.Resources>

                                <Grid MinWidth="100" MinHeight="50" Margin="10">
                                    <ComboBox  
                                              ItemsSource="{Binding TypeSettingSettingVM.ProjectDistributeVMObservableCollection}"
                                              SelectedValue="{Binding Source={x:Static GD_Singletons:StampingMachineSingleton.Instance}, Path=SelectedProjectDistributeVM}">
                                        <dxmvvm:Interaction.Behaviors>
                                            <dxmvvm:EventToCommand EventName="SelectionChanged" Command="{Binding Source={x:Static GD_Singletons:StampingMachineSingleton.Instance}, Path=ProjectDistributeVMChangeCommand}" PassEventArgsToCommand="True"/>
                                        </dxmvvm:Interaction.Behaviors>
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding ProjectDistributeName}" ></TextBlock>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                </Grid>
                            </Border>
                        </GD_Popup:DraggablePopup>





                    </StackPanel>
                <StackPanel Grid.Column="1" Orientation="Horizontal">
                    <Image Source="{StaticResource Logo}" Height="50" Margin="10,0"/>
                    <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                            <TextBlock Text="GUANDA" Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}" FontWeight="UltraBold" FontFamily="{StaticResource MaterialDesignFont}"  FontSize="20" Margin="0,0,0,-5"/>
                            <TextBlock Text="Machinery" Foreground="{DynamicResource SecondaryAccentBrush}"  FontFamily="{StaticResource MaterialDesignFont}"  FontWeight="Bold" FontSize="18"/>
                    </StackPanel>
                </StackPanel>




                    <StackPanel Grid.Column="2" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="20,0,0,0">
                        <Border Padding="15,5" CornerRadius="20"
                            Background="{DynamicResource PrimaryHueMidBrush}" BorderBrush="{DynamicResource PrimaryHueMidForegroundBrush}" BorderThickness="2">
                        <StackPanel Orientation="Horizontal">
                            
                        
                        <Button Name="AlarmButton"  
                                   Visibility="{Binding Source={x:Static GD_Singletons:StampMachineDataSingleton.Instance}, 
                            Path=AlarmMessageCollection.Count,Converter={GD_Common:ItemSourceCountIsZeroToVisibility Invert=True} }"
                                Command="{x:Static GD_Popup:DraggablePopup.PopupCommand}" 
                                CommandTarget="{Binding ElementName=MachineWarningDraggablePopup}"       
                                BorderThickness="0" 
                                  Margin="2,0" Padding="0" Width="30" Height="30" 
                                Style="{StaticResource SiegCustomButton_Transparent}">
                                    <Image Width="30" Height="30" Source="{StaticResource WarningDrawingImage}"/>
                                    <Button.Triggers>
                                <EventTrigger RoutedEvent="Loaded">
                                    <BeginStoryboard >
                                        <Storyboard  RepeatBehavior="Forever">
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.0"/>
                                                <LinearDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                                                <LinearDoubleKeyFrame KeyTime="0:0:1.5" Value="0.0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Button.Triggers>
                        </Button>

                        <GD_Popup:DraggablePopup  
                            Name="MachineWarningDraggablePopup"
                                    PopupAnimation="Fade"   StaysOpen="False"
                                    Placement="Bottom"  
                                    PlacementTarget="{Binding ElementName=AlarmButton}"
                            HorizontalAlignment="Center"
                            DataContext="{Binding Source={x:Static GD_Singletons:StampMachineDataSingleton.Instance}}"
                            >
                                    <Border  MinHeight="50" MinWidth="300" Background="{DynamicResource PrimaryHueLightBrush}" CornerRadius="5"

                                             Padding="10,10">
                                        <GroupBox Header="{DynamicResource Text_MachineAlarm}" Padding="5">
                                            <Grid>
                                                <ItemsControl Name="AlarmMessageItemsControl"
                                            ItemsSource="{Binding Path=AlarmMessageCollection}">
                                                    <ItemsControl.ItemTemplate>
                                                        <DataTemplate>
                                                            <Grid Margin="2">
                                                                <TextBlock Text="{Binding }"/>
                                                            </Grid>
                                                        </DataTemplate>
                                                    </ItemsControl.ItemTemplate>

                                                </ItemsControl>
                                            </Grid>

                                        </GroupBox>
                                    </Border>
                                </GD_Popup:DraggablePopup>




                        <Button Name="StampingWarningButton"    Style="{StaticResource SiegCustomButton_Transparent}"
                                Command="{x:Static GD_Popup:DraggablePopup.PopupCommand}" 
                                CommandTarget="{Binding ElementName=StampingWarningDraggablePopup}"       
                                MinWidth="10"  BorderThickness="0"
                            Margin="2,0" Padding="0" Width="30" Height="30">
                            <Image Height="30" Width="30">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Setter Property="Source" Value="{StaticResource Character_BlackDrawingImage }"/>
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Source={x:Static GD_Singletons:StampingMachineSingleton.Instance},Path=IsBrightMode}" Value="false" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Source" Value="{StaticResource Character_WhiteDrawingImage}"/>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>



                        </Button>
                        <GD_Popup:DraggablePopup  Name="StampingWarningDraggablePopup"
                                    PopupAnimation="Fade"   FlowDirection="LeftToRight" StaysOpen="False"
                                    Placement="Bottom"  
                                    PlacementTarget="{Binding ElementName=StampingWarningButton}"
                                                          HorizontalAlignment="Center" >
                            <Grid>
                                <Border  MaxHeight="500"  Background="{DynamicResource PrimaryHueDarkBrush}" CornerRadius="5" Padding="5,10">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="300"/>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="300"/>
                                        </Grid.ColumnDefinitions>
                                        <GroupBox Grid.Column="0" Header="{DynamicResource Text_SteelPunchedFont}" Style="{StaticResource UnderLineStyleGroupBox}" Margin="5,0" >
                                            <ListBox Margin="5,0" 
                         ItemsSource="{Binding StampingFontChangedVM.StampingTypeVMObservableCollection}"      
                         ItemContainerStyle="{StaticResource StampingTypeDataStyle}"
                          >
                                                <ListBox.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <WrapPanel Margin="0,0"/>
                                                    </ItemsPanelTemplate>
                                                </ListBox.ItemsPanel>
                                            </ListBox>
                                        </GroupBox>



                                                <Grid  Grid.Column="1">
                                                <StackPanel 
                                      HorizontalAlignment="Center" VerticalAlignment="Center" >
                                                        <Button Margin="0,10"  Width="45" Height="45"
                                                    Command="{Binding StampingFontChangedVM.StampingFontCollectionData_MachineToSoftware_Command}">
                                                            <GD_UserControls:ImageBrightDarkCustomControl
                                                                DarkImageSource="{StaticResource Arrow_Right_WhiteDrawingImage}"
                                                                BrightImageSource="{StaticResource Arrow_Right_BlackDrawingImage}"/>

                                                        </Button>
                                                        <Button Margin="0,10" Width="45" Height="45"
                                         
                                                                Command="{Binding StampingFontChangedVM.StampingFontCollectionData_SoftwareToMachine_Command}">
                                                            <GD_UserControls:ImageBrightDarkCustomControl 
                                                                DarkImageSource="{StaticResource Arrow_Left_WhiteDrawingImage}"
                                                                BrightImageSource="{StaticResource Arrow_Left_BlackDrawingImage}"/>
                                                        </Button>
                                                        <Button Margin="0,10" Width="45" Height="45"
                                                                Command="{Binding StampingFontChangedVM.CompareFontsSettingBetweenMachineAndSoftwareCommand}">
                                                            <GD_UserControls:ImageBrightDarkCustomControl 
                                                                DarkImageSource="{StaticResource Replace_WhiteDrawingImage}"
                                                                BrightImageSource="{StaticResource Replace_BlackDrawingImage}"/>
                                                        </Button>
                                                    </StackPanel>
                                                </Grid>

                                                <GroupBox  
                                            Grid.Column="2" Header="{DynamicResource Text_SteelPunchedFont_Machine}" Style="{StaticResource UnderLineStyleGroupBox}" Margin="5,0" >
                                            <ListBox Visibility="{Binding StampingFontChangedVM.StampMachineData.RotatingTurntableInfoCollection.Count,
                                                Converter={GD_Common:ItemSourceCountIsZeroToVisibility Invert=True}}"
                                                Margin="10,0"  
                         ItemsSource="{Binding StampingFontChangedVM.StampMachineData.RotatingTurntableInfoCollection}"          
                         ItemContainerStyle="{StaticResource StampingTypeDataStyle}"
                          >
                                                <ListBox.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <WrapPanel Margin="5,0"/>
                                                    </ItemsPanelTemplate>
                                                </ListBox.ItemsPanel>
                                            </ListBox>
                                        </GroupBox>
                                    </Grid>
                                </Border>

                            </Grid>
                        </GD_Popup:DraggablePopup>





                        <Image Margin="2,0"
                            Width="30" Height="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Width}" >
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Setter Property="Source" Value="{StaticResource MachineStatus_Unknown_DrawingImage}"/>
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition  Binding="{Binding Source={x:Static GD_Singletons:StampMachineDataSingleton.Instance}, Path=IsConnected}" 
                                                     Value="true" />
                                                <Condition  Binding="{Binding Source={x:Static GD_Singletons:StampMachineDataSingleton.Instance}, Path=OperationMode}" 
                                                     Value="{x:Static GD_Enum:OperationModeEnum.Setup}" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Source"  Value="{StaticResource MachineStatus_Setup_DrawingImage}"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition  Binding="{Binding Source={x:Static GD_Singletons:StampMachineDataSingleton.Instance}, Path=IsConnected}" 
                                                     Value="true" />
                                                <Condition Binding="{Binding Source={x:Static GD_Singletons:StampMachineDataSingleton.Instance}, Path=OperationMode}" 
                                                     Value="{x:Static GD_Enum:OperationModeEnum.Manual}"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Source"  Value="{StaticResource MachineStatus_Manual_DrawingImage}"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition  Binding="{Binding Source={x:Static GD_Singletons:StampMachineDataSingleton.Instance}, Path=IsConnected}" 
                                                     Value="true" />
                                                <Condition Binding="{Binding Source={x:Static GD_Singletons:StampMachineDataSingleton.Instance}, Path=OperationMode}" 
                                                     Value="{x:Static GD_Enum:OperationModeEnum.HalfAutomatic}"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Source"  Value="{StaticResource MachineStatus_HalfAutomatic_DrawingImage}"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition  Binding="{Binding Source={x:Static GD_Singletons:StampMachineDataSingleton.Instance}, Path=IsConnected}" 
                                                     Value="true" />
                                                <Condition Binding="{Binding Source={x:Static GD_Singletons:StampMachineDataSingleton.Instance}, Path=OperationMode}" 
                                                     Value="{x:Static GD_Enum:OperationModeEnum.FullAutomatic}"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Source"  Value="{StaticResource MachineStatus_FullAutomatic_DrawingImage}"/>
                                        </MultiDataTrigger>
                                        <DataTrigger  Binding="{Binding Source={x:Static GD_Singletons:StampMachineDataSingleton.Instance}, Path=IsConnected}" 
                                                     Value="false" >
                                            <Setter Property="Source"  Value="{StaticResource MachineStatus_Unknown_DrawingImage}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>





                        <Border Margin="2,0"
                            Width="24" Height="{Binding RelativeSource={RelativeSource Mode=Self},Path=Width}"
                               CornerRadius="{CalcB:Binding RelativeSource={RelativeSource Mode=Self},Path=Width/2}">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="Background" Value="Black"/>
                                    <Style.Triggers>

                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition  Binding="{Binding Source={x:Static GD_Singletons:StampMachineDataSingleton.Instance}, Path=IsConnected}" 
                                                     Value="true" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background"  Value="Orange"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition  Binding="{Binding Source={x:Static GD_Singletons:StampMachineDataSingleton.Instance}, Path=IsConnected}" 
                                                     Value="true" />
                                                <Condition  Binding="{Binding Source={x:Static GD_Singletons:StampMachineDataSingleton.Instance}, Path=DI_PowerON}" 
                                                     Value="{x:Static GD_Enum:OperationModeEnum.Setup}" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background"  Value="LightGray"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition  Binding="{Binding Source={x:Static GD_Singletons:StampMachineDataSingleton.Instance}, Path=IsConnected}" 
                                                     Value="true" />
                                                <Condition Binding="{Binding Source={x:Static GD_Singletons:StampMachineDataSingleton.Instance}, Path=DI_Start}" 
                                                     Value="true"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background"  Value="Green"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition  Binding="{Binding Source={x:Static GD_Singletons:StampMachineDataSingleton.Instance}, Path=IsConnected}" 
                                                     Value="true" />
                                                <Condition Binding="{Binding Source={x:Static GD_Singletons:StampMachineDataSingleton.Instance}, Path=DI_Pause}" 
                                                     Value="true"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background"  Value="Orange"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition  Binding="{Binding Source={x:Static GD_Singletons:StampMachineDataSingleton.Instance}, Path=IsConnected}" 
                                                     Value="true" />
                                                <Condition Binding="{Binding Source={x:Static GD_Singletons:StampMachineDataSingleton.Instance}, Path=DI_EmergencyStop1}" 
                                                     Value="false"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background"  Value="Red"/>
                                        </MultiDataTrigger>
                                        <DataTrigger  Binding="{Binding Source={x:Static GD_Singletons:StampMachineDataSingleton.Instance}, Path=IsConnected}" 
                                                     Value="false" >
                                            <Setter Property="Background"  Value="Gray"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                                </Border.Style>
                        </Border>

                                <ToggleButton  Margin="2,0" 
                            Command="{Binding JumpToEngineeringModeCommand}" ToolTip="{Binding Source={x:Static GD_Singletons:StampMachineDataSingleton.Instance}, Path=ClientState}"
                            MinWidth="0" MinHeight="0" Width="30" Height="30" Style="{StaticResource SiegCustomButton_Transparent}" Padding="0" BorderThickness="0" >
                            
                        <Image Width="26" Height="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Width}" >
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Setter Property="Source" Value="{StaticResource DisconnectDrawingImage}"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Source={x:Static GD_Singletons:StampMachineDataSingleton.Instance}, Path=IsConnected}" Value="true">
                                                <Setter Property="Source"  Value="{StaticResource ConnectDrawingImage}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            
                            
                            
                </ToggleButton>


                        </StackPanel>
                        </Border>
                        <TextBlock 
                            Style="{StaticResource Body1TextBlockBold}" FontSize="25" VerticalAlignment="Center"
                            Text="{Binding DateTimeNow,UpdateSourceTrigger=PropertyChanged, StringFormat='{}{0:hh:mm tt}' }" Margin="15,0" />
                    </StackPanel>

            </Grid>

        </materialDesign:ColorZone>
       <!-- <Grid  Grid.Row="1"  Background="{StaticResource solidclr_CreamyWhite}">-->
            <materialDesign:ColorZone Mode="PrimaryLight"   Grid.Row="1"  
                                      HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Grid>
                        <!--首頁-->
                        <Grid>
                        <ScrollViewer  Background="White"
                           VerticalScrollBarVisibility="Auto"
                        Visibility="{Binding ElementName=MainTabControl,Path=SelectedIndex ,ConverterParameter={StaticResource MinusOne} ,Converter={GD_Common:ObjectIsEqualToVisibilityConverter}}">
                            <StackPanel >
                                <Grid  Width="600"  >
                                    <materialDesign:Card   materialDesign:ShadowAssist.ShadowEdges="Bottom" materialDesign:ElevationAssist.Elevation="Dp6" >
                                        <Image Source="pack://application:,,,/image/擷取1.PNG" />
                                    </materialDesign:Card>
                                </Grid>
                                <GroupBox Header="鋼印字模設定" 
                              Margin="10"
                              Style="{StaticResource ParameterBaseStyleGroupBox}" Foreground="Black" FontSize="20">
                                    <StackPanel>
                                        <ItemsControl 
                                        Grid.Row="1" ItemsSource="{Binding StampingFontChangedVM.StampingTypeVMObservableCollection, UpdateSourceTrigger=PropertyChanged}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <WrapPanel Orientation="Horizontal"/>
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid Margin="5">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="auto"/>
                                                            <ColumnDefinition Width="auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                        </Grid.RowDefinitions>
                                                        <Border BorderThickness="0.5" BorderBrush="Black" 
                                                            CornerRadius="3"
                                                            Width="45"
                                                            Height="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}">
                                                            <TextBlock Text="{Binding StampingTypeString}" FontSize="30"
                                                                   HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                        </Border>
                                                        <StackPanel Grid.Row="1" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,1">
                                                            <TextBlock Text="NO." FontSize="10"/>
                                                            <TextBlock Text="{Binding StampingTypeNumber}" FontSize="10"/>
                                                        </StackPanel>
                                                        <Border Grid.Row="2" BorderThickness="0.5" BorderBrush="Black" 
                                                            CornerRadius="3">
                                                            <TextBlock Text="{Binding StampingTypeUseCount}" HorizontalAlignment="Center" FontSize="16" VerticalAlignment="Center"/>
                                                        </Border>
                                                        <TextBlock Grid.Row="2" Grid.Column="1" Text="{DynamicResource Text_Count}" FontSize="12" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="2,0,0,0" />

                                                    </Grid>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>


                                    </StackPanel>


                                </GroupBox>
                            </StackPanel>
                        </ScrollViewer>
                            <TabControl Name="MainTabControl">
                                <TabControl.Resources>
                                <Style TargetType="TabItem" >
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </Style>
                            </TabControl.Resources>
                                <TabItem IsSelected="{Binding ElementName=TBtn_MachineInfo, Path=IsChecked}"  DataContext="{Binding MachanicalSpecificationVM}">
                                    <ScrollViewer VerticalScrollBarVisibility="auto">
                                        <Border Background="#989797" CornerRadius="20" VerticalAlignment="Top" HorizontalAlignment="Left"  Margin="200,15,0,0">
                                            <StackPanel Margin="10" Width="450">
                                                <TextBlock Text="{DynamicResource btnDescription_MachineInfo}" HorizontalAlignment="Left" Margin="5,0,0,20" Foreground="#d8d8d8"/>
                                                <Border Background="White" Margin="5">
                                                    <Grid Margin="1">
                                                        <Grid.Resources>
                                                            <Style TargetType="TextBlock" BasedOn="{StaticResource Body1TextBlock}">
                                                                <Setter Property="Padding" Value="1"/>
                                                                <Setter Property="FontWeight" Value="Bold"/>
                                                            </Style>
                                                            <Style TargetType="Border" BasedOn="{StaticResource MaterialDesignToolBarMainPanelBorderStyle}">
                                                                <Setter Property="CornerRadius" Value="0"/>
                                                                <Setter Property="Margin" Value="0"/>
                                                                <Setter Property="Padding" Value="0,2"/>
                                                            </Style>
                                                        <Style TargetType="TextBox" BasedOn="{StaticResource GD_TextBox}">
                                                            <Setter Property="Foreground" Value="{StaticResource BrightHueDarkForegroundBrush}"/>
                                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                                            <Setter Property="MinWidth" Value="5"/>
                                                                <Setter Property="Margin" Value="0"/>
                                                                <Setter Property="Padding" Value="0"/>
                                                                <Setter Property="BorderThickness" Value="0"/>
                                                                <Setter Property="FontWeight" Value="Bold"/>
                                                            </Style>
                                                        </Grid.Resources>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition/>
                                                            <ColumnDefinition/>
                                                        </Grid.ColumnDefinitions>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                        </Grid.RowDefinitions>
                                                        <Border Background="#a00010" Grid.ColumnSpan="2">
                                                            <TextBlock Text="{DynamicResource Text_MachanicalSpecification}" Foreground="White"/>
                                                        </Border>
                                                        <Border Background="#1c2c42" Grid.ColumnSpan="2" Grid.Row="1">
                                                            <TextBlock Text="{DynamicResource Text_AllowMachiningSize}" Foreground="White"/>
                                                        </Border>
                                                        <TextBlock Grid.Row="2" Text="{DynamicResource Text_WebHeight}"/>
                                                        <TextBlock Grid.Row="3" Text="{DynamicResource Text_FlangeWidth}"/>
                                                        <TextBlock Grid.Row="4" Text="{DynamicResource Text_MachiningMinLength}"/>
                                                        <TextBlock Grid.Row="5" Text="{DynamicResource Text_MachiningMaxLength}"/>

                                                        <StackPanel Grid.Row="2" Grid.Column="1" Orientation="Horizontal">
                                                            <TextBox Text="{Binding MachanicalSpecification.AllowMachiningSize.WebHeightLowerLimited}" />
                                                            <TextBlock Text="～"/>
                                                            <TextBox Text="{Binding MachanicalSpecification.AllowMachiningSize.WebHeightUpperLimited}" />
                                                            <TextBlock Text="mm" VerticalAlignment="Bottom"/>
                                                        </StackPanel>


                                                        <StackPanel Grid.Row="3" Grid.Column="1" Orientation="Horizontal">
                                                            <TextBox Text="{Binding MachanicalSpecification.AllowMachiningSize.FlangeWidthLowerLimited}"/>
                                                            <TextBlock Text="～"/>
                                                            <TextBox Text="{Binding MachanicalSpecification.AllowMachiningSize.FlangeWidthUpperLimited}"/>
                                                            <TextBlock Text="mm" VerticalAlignment="Bottom"/>
                                                        </StackPanel>

                                                        <TextBox Grid.Row="4" Grid.Column="1" Text="{Binding MachanicalSpecification.AllowMachiningSize.MachiningMaxLength,StringFormat={}{0:0}}" />
                                                        <TextBox Grid.Row="5" Grid.Column="1" Text="{Binding MachanicalSpecification.AllowMachiningSize.MachiningMinLength,StringFormat={}{0:0}}" />



                                                        <Border Background="#4b3943" Grid.ColumnSpan="2" Grid.Row="6">
                                                            <TextBlock Text="{DynamicResource Text_MachiningProperty}" Foreground="White"/>
                                                        </Border>

                                                        <TextBlock Grid.Row="7" Text="{DynamicResource Text_VerticalDrillCount}"/>
                                                        <TextBlock Grid.Row="8" Text="{DynamicResource Text_HorizontalDrillCount}"/>
                                                        <TextBlock Grid.Row="9" Text="{DynamicResource Text_Each_VerticalDrill_Spindle}"/>
                                                        <TextBlock Grid.Row="10" Text="{DynamicResource Text_Each_HorizontalDrill_Spindle}"/>
                                                        <TextBlock Grid.Row="11" Text="{DynamicResource Text_AuxiliaryAxisEffectiveTravelMax}"/>
                                                        <TextBlock Grid.Row="12" Text="{DynamicResource Text_MaxDrillDiameter}"/>
                                                        <TextBlock Grid.Row="13" Text="{DynamicResource Text_MaxDrillThickness}"/>
                                                        <TextBlock Grid.Row="14" Text="{DynamicResource Text_SpindleMaxPower}"/>
                                                        <TextBlock Grid.Row="15" Text="{DynamicResource Text_SpindleToolHolder}"/>
                                                        <TextBlock Grid.Row="16" Text="{DynamicResource Text_SpindleRotationalFrequency}"/>
                                                        <TextBlock Grid.Row="17" Text="{DynamicResource Text_SpindleFeedSpeed}"/>
                                                        <TextBlock Grid.Row="18" Text="{DynamicResource Text_SpindleMoveSpeed}"/>


                                                        <TextBox Grid.Row="7" Grid.Column="1" Text="{Binding MachanicalSpecification.MachiningProperty.HorizontalDrillCount}"/>
                                                        <TextBox Grid.Row="8" Grid.Column="1" Text="{Binding MachanicalSpecification.MachiningProperty.VerticalDrillCount}"/>
                                                        <TextBox Grid.Row="9" Grid.Column="1" Text="{Binding MachanicalSpecification.MachiningProperty.Each_HorizontalDrill_SpindleCount}"/>
                                                        <TextBox Grid.Row="10" Grid.Column="1" Text="{Binding MachanicalSpecification.MachiningProperty.Each_VerticalDrill_SpindleCount}"/>
                                                        <StackPanel Grid.Row="11" Grid.Column="1" Orientation="Horizontal">
                                                            <TextBox Text="{Binding MachanicalSpecification.MachiningProperty.AuxiliaryAxisEffectiveTravelMax}"/>
                                                            <TextBlock Text="mm"/>
                                                        </StackPanel>
                                                        <StackPanel Grid.Row="12" Grid.Column="1" Orientation="Horizontal">
                                                            <TextBlock Text="Φ"/>
                                                            <TextBox Text="{Binding MachanicalSpecification.MachiningProperty.MaxDrillDiameter}"/>
                                                        </StackPanel>

                                                        <StackPanel Grid.Row="13" Grid.Column="1" Orientation="Horizontal">
                                                            <TextBox Text="{Binding MachanicalSpecification.MachiningProperty.MaxDrillThickness}"/>
                                                            <TextBlock Text="mm"/>
                                                        </StackPanel>
                                                        <StackPanel Grid.Row="14" Grid.Column="1" Orientation="Horizontal">
                                                            <TextBox Text="{Binding MachanicalSpecification.MachiningProperty.SpindleMaxPower}"/>
                                                            <TextBlock Text="kw"/>
                                                        </StackPanel>

                                                        <dxe:ComboBoxEdit Grid.Row="15" Grid.Column="1"   FontSize="14" 
                                                              EditValue="{Binding MachanicalSpecification.MachiningProperty.SpindleToolHolder, Mode=TwoWay}" 
                                                              IsTextEditable="False"         
                                                              ShowBorder="False" ShowEditorButtons="False"
                                                              ApplyItemTemplateToSelectedItem="True" >
                                                            <dxmvvm:Interaction.Behaviors>
                                                                <dxmvvm:EnumItemsSourceBehavior EnumType="{x:Type GD_Enum:SpindleToolHolderEnum}" ImageSize="95,95" />
                                                                <!--SortMode="DisplayName"-->
                                                            </dxmvvm:Interaction.Behaviors>
                                                        </dxe:ComboBoxEdit>
                                                        <StackPanel Grid.Row="16" Grid.Column="1" Orientation="Horizontal">
                                                            <TextBox  Text="{Binding MachanicalSpecification.MachiningProperty.SpindleRotationalFrequencyMin }"/>
                                                            <TextBlock  Text="~"/>
                                                            <TextBox  Text="{Binding MachanicalSpecification.MachiningProperty.SpindleRotationalFrequencyMax }"/>
                                                            <TextBlock  Text="RPM"/>
                                                        </StackPanel>

                                                        <StackPanel Grid.Row="17" Grid.Column="1" Orientation="Horizontal">
                                                            <TextBox  Text="{Binding MachanicalSpecification.MachiningProperty.SpindleFeedSpeedMin }"/>
                                                            <TextBlock  Text="~"/>
                                                            <TextBox  Text="{Binding MachanicalSpecification.MachiningProperty.SpindleFeedSpeedMax }"/>
                                                            <TextBlock  Text="mm/min"/>
                                                        </StackPanel>
                                                        <StackPanel Grid.Row="18" Grid.Column="1" Orientation="Horizontal">
                                                            <TextBox  Text="{Binding MachanicalSpecification.MachiningProperty.SpindleMoveSpeed }"/>
                                                            <TextBlock  Text="M/min"/>
                                                        </StackPanel>


                                                        <Border Grid.Row="19"  Background="#10362b" Grid.ColumnSpan="2">
                                                            <TextBlock Text="{DynamicResource Text_MachineSize}" Foreground="White"/>
                                                        </Border>
                                                        <TextBlock Grid.Row="20" Text="{DynamicResource Text_Length}"/>
                                                        <TextBlock Grid.Row="21" Text="{DynamicResource Text_Width}"/>
                                                        <TextBlock Grid.Row="22" Text="{DynamicResource Text_Height}"/>
                                                        <TextBlock Grid.Row="23" Text="{DynamicResource Text_MachineWeight}"/>

                                                        <StackPanel Grid.Row="20" Grid.Column="1" Orientation="Horizontal">

                                                            <TextBox    Text="{Binding MachanicalSpecification.MachineSize.Length}"/>
                                                            <TextBlock Text="mm"/>
                                                            <TextBlock  Text="(" Padding="0"/>
                                                            <TextBlock  Text="{DynamicResource Text_NotInclude}" Padding="0" VerticalAlignment="Center"/>
                                                            <TextBlock  Text="{DynamicResource Text_ChipConveyor}" Padding="0" VerticalAlignment="Center"/>
                                                            <TextBlock  Text=")" Padding="0"/>
                                                        </StackPanel>
                                                        <StackPanel Grid.Row="21" Grid.Column="1" Orientation="Horizontal">

                                                            <TextBox  Text="{Binding MachanicalSpecification.MachineSize.Width}"/>
                                                            <TextBlock Text="mm"/>
                                                            <TextBlock  Text="(" Padding="0"/>
                                                            <TextBlock  Text="{DynamicResource Text_NotInclude}" Padding="0" VerticalAlignment="Center"/>
                                                            <TextBlock  Text="{DynamicResource Text_ProminentAccessories}" Padding="0" VerticalAlignment="Center"/>
                                                            <TextBlock  Text=")" Padding="0"/>
                                                        </StackPanel>
                                                        <StackPanel Grid.Row="22" Grid.Column="1" Orientation="Horizontal">

                                                            <TextBlock Text="{Binding MachanicalSpecification.MachineSize.Height}"/>
                                                            <TextBlock Text="mm"/>
                                                            <TextBlock  Text="(" Padding="0"/>
                                                            <TextBlock  Text="{DynamicResource Text_NotInclude}" Padding="0" VerticalAlignment="Center"/>
                                                            <TextBlock  Text="{DynamicResource Text_ProminentAccessories}" Padding="0" VerticalAlignment="Center"/>
                                                            <TextBlock  Text=")" Padding="0"/>
                                                        </StackPanel>
                                                        <StackPanel Grid.Row="23" Grid.Column="1" Orientation="Horizontal">
                                                            <TextBox    Text="{Binding MachanicalSpecification.MachineSize.Weight}"/>
                                                            <TextBlock Text="Ton"/>
                                                        </StackPanel>

                                                    </Grid>
                                                </Border>
                                            </StackPanel>
                                        </Border>
                                    </ScrollViewer>
                                </TabItem>
                                <TabItem IsSelected="{Binding ElementName=TBtn_PunchedFontSetting, Path=IsChecked}">

                                    <GD_UserControls:StampingFontChangedUserControl DataContext="{Binding StampingFontChangedVM}"/>

                                </TabItem>
                                <TabItem IsSelected="{Binding ElementName=TBtn_ParameterSetting, Path=IsChecked}">
                                    <GD_UserControls:ParamaterSettingUserControl DataContext="{Binding ParameterSettingVM}"/>
                                </TabItem>
                                <TabItem IsSelected="{Binding ElementName=TBtn_SoftwareUpdate, Path=IsChecked}">
                                    <TabItem.Resources>
                                        <Style TargetType="StackPanel">
                                            <Setter Property="HorizontalAlignment" Value="Left"/>
                                        </Style>
                                    </TabItem.Resources>
                                    <ScrollViewer VerticalScrollBarVisibility="auto">
                                        <GD_UserControls:SoftwareUpdateUserControl/>
                                    </ScrollViewer>
                                </TabItem>
                                <TabItem IsSelected="{Binding ElementName=TBtn_ProductSettings, Path=IsChecked}" >
                                    <GD_UserControls:ProductSettingUserControl DataContext="{Binding ProductSettingVM}"/>
                                </TabItem>
                                <TabItem IsSelected="{Binding ElementName=TBtn_TypeSettingSettings, Path=IsChecked}">
                                    <GD_UserControls:TypeSettingSettingUserControl DataContext="{Binding TypeSettingSettingVM}"/>
                                </TabItem>
                            <TabItem IsSelected="{Binding ElementName=TBtn_MachineMonitor, Path=IsChecked}">
                                <GD_UserControls:MachineMonitorUserControl DataContext="{Binding MachineMonitorVM}"/>
                                </TabItem>

                            <TabItem IsSelected="{Binding ElementName=TBtn_MachineFunction, Path=IsChecked}">
                                <GD_UserControls:MachineFunctionUserControl DataContext="{Binding MachineFunctionVM}"/>
                            </TabItem>

                            <TabItem IsSelected="{Binding ElementName=TBtn_LightUpSwitch, Path=IsChecked}">
                                <Grid DataContext="{Binding MachineFunctionTestVM}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                <StackPanel Orientation="Vertical">
                                    <StackPanel.Resources>
                                        <x:Array Type="GD_ViewModels:StampingTypeViewModel" x:Key="NewArray">
                                            <GD_ViewModels:StampingTypeViewModel StampingTypeNumber="0" StampingTypeString="A"/>
                                            <GD_ViewModels:StampingTypeViewModel StampingTypeNumber="1" StampingTypeString="B"/>
                                            <GD_ViewModels:StampingTypeViewModel StampingTypeNumber="2" StampingTypeString="C"/>
                                        </x:Array>
                                        </StackPanel.Resources>
                                        <Button Content="ClearAlarm" Command="{Binding ResetAlarmCommand}"/>
                                        <Button Content="AddAlarm" Command="{Binding AddAlarmCommand}"/>

                                        <Grid Width="100" Height="100" >
                                            <Ellipse  Fill="Red"/>
                                            <Ellipse Opacity="0.5">
                                            <Ellipse.Fill>
                                                <RadialGradientBrush 
                                                    GradientOrigin="0.75,0" Center="0.5,0.5" RadiusX="1" RadiusY="1">
                                                        <GradientStop Color="Transparent" Offset="0.0" />
                                                        <GradientStop Color="Black" Offset="0.75" />
                                                        <GradientStop Color="Black" Offset="1" />
                                                    </RadialGradientBrush>
                                            </Ellipse.Fill>
                                        </Ellipse>
                                        </Grid>
                                        <Ellipse Width="100" Height="100">
                                            <Ellipse.Fill>
                                                <RadialGradientBrush 
GradientOrigin="0.5,0.5" Center="0.5,0.5" 
RadiusX="0.5" RadiusY="0.5">
                                                    <GradientStop Color="Yellow" Offset="0" />
                                                    <GradientStop Color="Red" Offset="0.25" />
                                                    <GradientStop Color="Blue" Offset="0.75" />
                                                    <GradientStop Color="LimeGreen" Offset="1.0" />
                                                </RadialGradientBrush>
                                            </Ellipse.Fill>
                                        </Ellipse>
                                    
                                        <Rectangle Width="100" Height="100">
                                            <Rectangle.Fill>
                                                <RadialGradientBrush 
      GradientOrigin="0.5,0.5" Center="0.5,0.5" 
      RadiusX="0.5" RadiusY="0.5">
                                                    <GradientStop Color="Yellow" Offset="0" />
                                                    <GradientStop Color="Red" Offset="0.25" />
                                                    <GradientStop Color="Blue" Offset="0.75" />
                                                    <GradientStop Color="LimeGreen" Offset="1" />
                                                </RadialGradientBrush>
                                            </Rectangle.Fill>
                                        </Rectangle>

                                        <TextBlock Text="各種功能測試區 - test"/>
                                        <GD_UserControls:SimpleCircularProgressBar Value="50"/>

                                        <GD_Common:CircularRangeSlider Name="CRangeSlider" Width="200" Height="200"
                                                                       Minimum="0"
                                                                       Maximum="24"
                                                                       Radius="130"
                                                                       Tick="0.5"
                                                                       LargeCalibration="24"
                                                                       SmallCalibration="96"
                                            >
                                            <GD_Common:CircularRangeSlider.Style>
                                                <Style TargetType="{x:Type GD_Common:CircularRangeSlider}" >
                                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                <Setter Property="Background" Value="Transparent"/>
                                                <Setter Property="Template" >
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type GD_Common:CircularRangeSlider}">
                                                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                    Background="{TemplateBinding Background}" 
                                                                    Width="{TemplateBinding Width}"
                                                                    Height="{TemplateBinding Height}"
                                                                    Padding="{TemplateBinding Padding}"
                                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                                <Grid>
                                                                    <Viewbox Margin="5">
                                                                            <Grid Width="300" Height="300">
                                                                                <Grid Width="200" Height="200">
                                                                                    <Border Background="DimGray"  CornerRadius="100">
                                                                                    </Border>

                                                                                    <ListBox Margin="-12"
                                                                                        ItemsSource="{Binding RelativeSource={RelativeSource  Mode=TemplatedParent},Path=LargeCalibration, Converter={GD_Common:IntToCollectionConverter}}">
                                                                                        <ListBox.ItemContainerStyle>
                                                                                            <Style TargetType="ListBoxItem">
                                                                                                <Setter Property="Height" Value="12"/>
                                                                                                <Setter Property="Width" Value="3"/>
                                                                                                <Setter Property="BorderBrush" Value="#f0f0f0"/>
                                                                                                <Setter Property="Background" Value="#f0f0f0"/>
                                                                                                <Setter Property="Template">
                                                                                                    <Setter.Value>
                                                                                                        <ControlTemplate TargetType="ListBoxItem" >
                                                                                                            <Border x:Name="RadiaListBoxItemBorder" RenderTransformOrigin="0.5,0.5">
                                                                                                                <Grid>
                                                                                                                    <Border BorderThickness="0" BorderBrush="{TemplateBinding BorderBrush }" Width="auto" Height="auto"
                                                        Background="{TemplateBinding Background }"  >
                                                                                                                    </Border>
                                                                                                                </Grid>
                                                                                                            </Border>
                                                                                                        </ControlTemplate>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </ListBox.ItemContainerStyle>
                                                                                        <ListBox.ItemsPanel>
                                                                                            <ItemsPanelTemplate>
                                                                                                <GD_Common:RadialPanel
                                                                                                    RotationDirection="Clockwise"
                                        StartAngle="0"  RoundAngle="360"
                                        ItemRotateAngle="90"  />
                                                                                            </ItemsPanelTemplate>
                                                                                        </ListBox.ItemsPanel>
                                                                                    </ListBox>

                                                                                    <ListBox Margin="-16"
                                                                                        ItemsSource="{Binding RelativeSource={RelativeSource  Mode=TemplatedParent},Path=SmallCalibration, Converter={GD_Common:IntToCollectionConverter}}">
                                                                                        <ListBox.ItemContainerStyle>
                                                                                            <Style TargetType="ListBoxItem">
                                                                                                <Setter Property="Height" Value="6"/>
                                                                                                <Setter Property="Width" Value="1.5"/>
                                                                                                <Setter Property="BorderBrush" Value="#f0f0f0"/>
                                                                                                <Setter Property="Background" Value="#f0f0f0"/>
                                                                                                <Setter Property="Template">
                                                                                                    <Setter.Value>
                                                                                                        <ControlTemplate TargetType="ListBoxItem" >
                                                                                                            <Border x:Name="RadiaListBoxItemBorder" RenderTransformOrigin="0.5,0.5">
                                                                                                                <Grid>
                                                                                                                    <Border BorderThickness="0" BorderBrush="{TemplateBinding BorderBrush }" Width="auto" Height="auto"
                                                                                                                            Background="{TemplateBinding Background }"  >
                                                                                                                    </Border>
                                                                                                                </Grid>
                                                                                                            </Border>
                                                                                                        </ControlTemplate>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </ListBox.ItemContainerStyle>
                                                                                        <ListBox.ItemsPanel>
                                                                                            <ItemsPanelTemplate>
                                                                                                <GD_Common:RadialPanel
                                                                                                    RotationDirection="Clockwise"
                                        StartAngle="0"  RoundAngle="360"
                                        ItemRotateAngle="90"  />
                                                                                            </ItemsPanelTemplate>
                                                                                        </ListBox.ItemsPanel>
                                                                                    </ListBox>
                                                                                    <ListBox    Margin="12"
                                                                                                   >
                                                                                        <ListBox.ItemsSource>
                                                                                            <x:Array Type="{x:Type sys:Double}">
                                                                                                <sys:Double>0</sys:Double>
                                                                                                <sys:Double>2</sys:Double>
                                                                                                <sys:Double>4</sys:Double>
                                                                                                <sys:Double>6</sys:Double>
                                                                                                <sys:Double>8</sys:Double>
                                                                                                <sys:Double>10</sys:Double>
                                                                                                <sys:Double>12</sys:Double>
                                                                                                <sys:Double>14</sys:Double>
                                                                                                <sys:Double>16</sys:Double>
                                                                                                <sys:Double>18</sys:Double>
                                                                                                <sys:Double>20</sys:Double>
                                                                                                <sys:Double>22</sys:Double>
                                                                                                <!-- 添加更多的项目 -->
                                                                                            </x:Array>
                                                                                        </ListBox.ItemsSource>

                                                                                        <ListBox.ItemContainerStyle>
                                                                                            <Style TargetType="ListBoxItem">

                                                                                                <Setter Property="Height" Value="auto"/>
                                                                                                <Setter Property="BorderBrush" Value="#f0f0f0"/>
                                                                                                <Setter Property="Background" Value="#f0f0f0"/>
                                                                                                <Setter Property="Template">
                                                                                                    <Setter.Value>
                                                                                                        <ControlTemplate TargetType="ListBoxItem" >
                                                                                                            <Border x:Name="RadiaListBoxItemBorder" RenderTransformOrigin="0.5,0.5" >
                                                                                                                <Grid>
                                                                                                                    <TextBlock Text="{Binding}" Foreground="White" FontSize="20" Margin="0,0"/>
                                                                                                                </Grid>
                                                                                                            </Border>
                                                                                                        </ControlTemplate>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </ListBox.ItemContainerStyle>
                                                                                        <ListBox.ItemsPanel>
                                                                                            <ItemsPanelTemplate>
                                                                                                <GD_Common:RadialPanel
                                                                                                    RotationDirection="Clockwise"
                                                                                                    StartAngle="-90"  RoundAngle="360"
                                        ItemRotateAngle="0"  />
                                                                                            </ItemsPanelTemplate>
                                                                                        </ListBox.ItemsPanel>
                                                                                    </ListBox>
                                                                                </Grid>



                                                                                <Canvas   Name="PART_SliderContainer">
                                                                                <Ellipse Fill="Transparent"  Width="300" Height="300" Canvas.Left="0" Canvas.Top="0"  Opacity="1"
                                                                                         Stroke="Black" StrokeThickness="40"/>
                                                                                    <Canvas Name="PART_Arc"  Cursor="Hand"
                                                                                        Canvas.Top="150" Canvas.Left="150">
                                                                                <Path Stroke="DimGray" StrokeThickness="30" Margin="0"  StrokeStartLineCap="Round" StrokeEndLineCap="Round">
                                                                                    <Path.Data>
                                                                                        <PathGeometry>
                                                                                            <PathFigure StartPoint="{Binding RelativeSource={RelativeSource  Mode=TemplatedParent},Path=ArcStart}">
                                                                                                <ArcSegment Point="{Binding RelativeSource={RelativeSource  Mode=TemplatedParent},Path=ArcEnd}" 
                                                                                                            Size="130,130" 
                                                                                                            RotationAngle="0" IsLargeArc="{Binding RelativeSource={RelativeSource  Mode=TemplatedParent},Path=IsLargeArc}" SweepDirection="Clockwise"/>
                                                                                            </PathFigure>
                                                                                        </PathGeometry>
                                                                                    </Path.Data>
                                                                                </Path>
                                                                                        <Path Stroke="Black" StrokeThickness="0,15" Margin="0" StrokeDashArray="0.3" >
                                                                                    <Path.Data>
                                                                                        <PathGeometry>
                                                                                            <PathFigure StartPoint="{Binding RelativeSource={RelativeSource  Mode=TemplatedParent},Path=ArcStart}">
                                                                                                <ArcSegment Point="{Binding RelativeSource={RelativeSource  Mode=TemplatedParent},Path=ArcEnd}" 
                                                                    Size="130,130" 
                                                                    RotationAngle="0" IsLargeArc="{Binding RelativeSource={RelativeSource  Mode=TemplatedParent},Path=IsLargeArc}" SweepDirection="Clockwise"/>
                                                                                            </PathFigure>
                                                                                        </PathGeometry>
                                                                                    </Path.Data>
                                                                                </Path>

                                                                            </Canvas>
                                                                            <ContentControl Width="150" Height="150" Cursor="Hand"
                                        Name="PART_StartCanvas" Canvas.Left="150"  >
                                                                                <ContentControl.Content>
                                                                                        <Canvas>
                                                                                            <Grid Width="30" Height="30" Canvas.Left="-15" Canvas.Top="5"   >
                                                                                                <Border Background="DimGray" CornerRadius="15" >
                                                                                                        <Border.LayoutTransform>
                                                                                                            <RotateTransform Angle="{CalcB:Binding RelativeSource={RelativeSource  Mode=TemplatedParent},Path=-ArcAngleStart}"/>
                                                                                                        </Border.LayoutTransform>

                                                                                                        <materialDesign:PackIcon HorizontalAlignment="Center" VerticalAlignment="Center"
                                                                                                        Kind="TimerStart" Width="25" Height="25" Foreground="LightGray">
                                                                                                        

                                                                                                    </materialDesign:PackIcon>
                                                                                                    <Border.Triggers>
                                                                                                        <EventTrigger RoutedEvent="MouseDown">
                                                                                                            <EventTrigger.Actions>
                                                                                                                <BeginStoryboard>
                                                                                                                    <Storyboard Duration="00:00:01">
                                                                                                                        <ColorAnimation Storyboard.TargetProperty="Background.Color" 
                                                        Duration="0:0:0.100" To="DarkGray" />
                                                                                                                    </Storyboard>
                                                                                                                </BeginStoryboard>
                                                                                                            </EventTrigger.Actions>
                                                                                                        </EventTrigger>
                                                                                                        <EventTrigger RoutedEvent="MouseUp">
                                                                                                            <EventTrigger.Actions>
                                                                                                                <BeginStoryboard>
                                                                                                                    <Storyboard Duration="00:00:01">
                                                                                                                        <ColorAnimation Storyboard.TargetProperty="Background.Color" 
                                                        Duration="0:0:0.100" To="DimGray" />
                                                                                                                    </Storyboard>
                                                                                                                </BeginStoryboard>
                                                                                                            </EventTrigger.Actions>
                                                                                                        </EventTrigger>
                                                                                                        <EventTrigger RoutedEvent="MouseLeave">
                                                                                                            <EventTrigger.Actions>
                                                                                                                <BeginStoryboard>
                                                                                                                    <Storyboard Duration="00:00:01">
                                                                                                                        <ColorAnimation Storyboard.TargetProperty="Background.Color" 
                                                        Duration="0:0:0.100" To="DimGray" />
                                                                                                                    </Storyboard>
                                                                                                                </BeginStoryboard>
                                                                                                            </EventTrigger.Actions>
                                                                                                        </EventTrigger>
                                                                                                    </Border.Triggers>
                                                                                                </Border>
                                                                                                
                                                                                            </Grid>
                                                                                        </Canvas>
                                                                                </ContentControl.Content>
                                                                                <ContentControl.RenderTransform>
                                                                                    <RotateTransform CenterX="0" CenterY="150" >
                                                                                        <RotateTransform.Angle>
                                                                                            <MultiBinding Converter="{GD_Common:ValueAngleConverter}">
                                                                                                <Binding RelativeSource="{RelativeSource  Mode=TemplatedParent}" Path="Start"/>
                                                                                                <Binding RelativeSource="{RelativeSource  Mode=TemplatedParent}" Path="Minimum"/>
                                                                                                <Binding RelativeSource="{RelativeSource  Mode=TemplatedParent}" Path="Maximum"/>
                                                                                            </MultiBinding>
                                                                                        </RotateTransform.Angle>
                                                                                    </RotateTransform>
                                                                                </ContentControl.RenderTransform>

                                                                            </ContentControl>
                                                                                    <ContentControl Width="150" Height="150"  Cursor="Hand"
                                        Name="PART_EndCanvas" Canvas.Left="150"  >
                                                                                    <ContentControl.Content>
                                                                                        <Canvas>
                                                                                            <Grid Width="30" Height="30" Canvas.Left="-15" Canvas.Top="5"   >
                                                                                                <Border Background="DimGray" CornerRadius="15" >
                                                                                                        <Border.LayoutTransform>
                                                                                                            <RotateTransform Angle="{CalcB:Binding RelativeSource={RelativeSource  Mode=TemplatedParent},Path=-ArcAngleEnd}"/>
                                                                                                        </Border.LayoutTransform>
                                                                                                        <materialDesign:PackIcon HorizontalAlignment="Center" VerticalAlignment="Center"
                                                                                                        Kind="TimerStop" Width="25" Height="25" Foreground="LightGray">

                                                                                                    </materialDesign:PackIcon>
                                                                                                    <Border.Triggers>
                                                                                                        <EventTrigger RoutedEvent="MouseDown">
                                                                                                            <EventTrigger.Actions>
                                                                                                                <BeginStoryboard>
                                                                                                                    <Storyboard Duration="00:00:01">
                                                                                                                        <ColorAnimation Storyboard.TargetProperty="Background.Color" 
                                                        Duration="0:0:0.100" To="DarkGray" />
                                                                                                                    </Storyboard>
                                                                                                                </BeginStoryboard>
                                                                                                            </EventTrigger.Actions>
                                                                                                        </EventTrigger>
                                                                                                        <EventTrigger RoutedEvent="MouseUp">
                                                                                                            <EventTrigger.Actions>
                                                                                                                <BeginStoryboard>
                                                                                                                    <Storyboard Duration="00:00:01">
                                                                                                                        <ColorAnimation Storyboard.TargetProperty="Background.Color" 
                                                        Duration="0:0:0.100" To="DimGray" />
                                                                                                                    </Storyboard>
                                                                                                                </BeginStoryboard>
                                                                                                            </EventTrigger.Actions>
                                                                                                        </EventTrigger>
                                                                                                        <EventTrigger RoutedEvent="MouseLeave">
                                                                                                            <EventTrigger.Actions>
                                                                                                                <BeginStoryboard>
                                                                                                                    <Storyboard Duration="00:00:01">
                                                                                                                        <ColorAnimation Storyboard.TargetProperty="Background.Color" 
                                                        Duration="0:0:0.100" To="DimGray" />
                                                                                                                    </Storyboard>
                                                                                                                </BeginStoryboard>
                                                                                                            </EventTrigger.Actions>
                                                                                                        </EventTrigger>
                                                                                                    </Border.Triggers>
                                                                                                </Border>

                                                                                            </Grid>
                                                                                        </Canvas>
                                                                                    </ContentControl.Content>

                                                                                <ContentControl.RenderTransform>
                                                                                    <RotateTransform CenterX="0" CenterY="150" >
                                                                                        <RotateTransform.Angle>
                                                                                            <MultiBinding Converter="{GD_Common:ValueAngleConverter}">
                                                                                                <Binding RelativeSource="{RelativeSource  Mode=TemplatedParent}" Path="End"/>
                                                                                                <Binding RelativeSource="{RelativeSource  Mode=TemplatedParent}" Path="Minimum"/>
                                                                                                <Binding RelativeSource="{RelativeSource  Mode=TemplatedParent}" Path="Maximum"/>
                                                                                            </MultiBinding>
                                                                                        </RotateTransform.Angle>
                                                                                    </RotateTransform>
                                                                                </ContentControl.RenderTransform>

                                                                            </ContentControl>     
                                                                        </Canvas>
                                                               

                                                                                
                                                                                
                                                                                
                                                                                
                                                                    </Grid>
                                                                    </Viewbox>
                                                                </Grid>
                                                            </Border>

                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                </Style>
                                            </GD_Common:CircularRangeSlider.Style>
                                        </GD_Common:CircularRangeSlider>

                                    
                                        <TextBox Text="{Binding ElementName=CRangeSlider, Path=Start}"/>
                                        <TextBox Text="{Binding ElementName=CRangeSlider, Path=End}"/>
                                        <Grid>
                                            


                                        </Grid>

                                        <Slider/>




                                        <materialDesign:PopupBox  Padding="50"
                                                                  
                                                Style="{StaticResource GD_PopUpBox}"
                                                IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" 
                                                              PopupMode="Click"
                                                              StaysOpen ="True"  MinHeight="1"
                                                                  ToggleContent="45678912312312" Foreground="Red"
                                                              ToolTip="PopupBox"
                                                              ToolTipService.Placement="Right">
                                            <StackPanel>
                                                    <Button      Content="1"      Opacity="0.5"      ToolTip="One with custom opacity" Style="{StaticResource SiegCustomButton}"/>
                                                    <Button      Content="2"      ToolTip="Two" Style="{StaticResource SiegCustomButton_Dark}" />
                                                    <ToggleButton      Content="3"      ToolTip="Two" Style="{StaticResource GD_MainToggleButton}" />
                                                    <Button      Content="4"      ToolTip="Three" />
                                                </StackPanel>
                                            </materialDesign:PopupBox>
                                            <Grid>
                                                <Grid.Triggers>
                                                    <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ButtonOpenMenu">
                                                        <BeginStoryboard >
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="GridMenu">
                                                                    <EasingDoubleKeyFrame KeyTime="0" Value="60"/>
                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="200"/>
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </EventTrigger>

                                                </Grid.Triggers>
                                                <Grid x:Name="GridMenu" Width="60" HorizontalAlignment="Left" Background="#FF1B3861">
                                                    <StackPanel>
                                                        <StackPanel Height="150" Background="White" Orientation="Horizontal">

                                                            <Button x:Name="ButtonOpenMenu" Content="彈出"
                                                                    Width="60" Height="60" Background="{x:Null}" BorderBrush="{x:Null}" VerticalAlignment="Top" HorizontalAlignment="Right">
                                                                <Button.Triggers>
                                                                    <EventTrigger RoutedEvent="ButtonBase.Click" >
                                                                        <BeginStoryboard >
                                                                            <Storyboard>
                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="GridMenu">
                                                                                    <EasingDoubleKeyFrame KeyTime="0" Value="60"/>
                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="200"/>
                                                                                </DoubleAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </EventTrigger>
                                                                </Button.Triggers>
                                                                
                                                            </Button>
                                                            <Button Content="收納"
                                                                x:Name="ButtonCloseMenu" Width="60" Height="60" Background="{x:Null}" BorderBrush="{x:Null}" VerticalAlignment="Top" HorizontalAlignment="Right" >
                                                                <Button.Triggers>
                                                                    <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ButtonCloseMenu">
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="GridMenu">
                                                                                    <EasingDoubleKeyFrame KeyTime="0" Value="200"/>
                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="60"/>
                                                                                </DoubleAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </EventTrigger>
                                                                </Button.Triggers>
                                                           
                                                            </Button>
                                                        </StackPanel>
                                                        <ListView ScrollViewer.HorizontalScrollBarVisibility="Disabled" Foreground="#FF1368BD">
                                                            <ListViewItem Height="60">
                                                                <StackPanel Orientation="Horizontal">
                                                                    <materialDesign:PackIcon Kind="ViewDashboard" Width="25" Height="25" Margin="10" VerticalAlignment="Center"/>
                                                                    <TextBlock Text="烘培雞" VerticalAlignment="Center" Margin="20 10"/>
                                                                </StackPanel>
                                                            </ListViewItem>
                                                            <Border Height="2" Background="Red" Width="{Binding RelativeSource={RelativeSource AncestorType=ListView},Path=ActualWidth}"/>
                                                            <ListViewItem Height="60">
                                                                <StackPanel Orientation="Horizontal">
                                                                    <materialDesign:PackIcon Kind="ViewDashboard" Width="25" Height="25" Margin="10" VerticalAlignment="Center"/>
                                                                    <TextBlock Text="烘培雞" VerticalAlignment="Center" Margin="20 10"/>
                                                                </StackPanel>
                                                            </ListViewItem>
                                                        </ListView>
                                                    </StackPanel>
                                                </Grid>


                                            </Grid>
                                    <dxe:ComboBoxEdit  Background="Transparent"  IsPopupOpen="True"  
                                        ApplyItemTemplateToSelectedItem="True"   
                                        ItemsSource="{StaticResource NewArray}" Width="500"  >
                                        <dxe:ComboBoxEdit.Resources>
                                            <Style TargetType="dx:DXBorder" x:Key="PART_Border">
                                                <Setter Property="Background" Value="Red"/>
                                            </Style>
                                        </dxe:ComboBoxEdit.Resources>
                                        <dxe:ComboBoxEdit.EditTemplate>
                                            <ControlTemplate>
                                                <StackPanel Orientation="Vertical">
                                                    <TextBlock Foreground="White"
                                                        Text="{Binding Path=(dxe:BaseEdit.OwnerEdit).EditValue.StampingTypeString, RelativeSource={RelativeSource Self}, Mode=OneWay}" />
                                                    <TextBlock Text=" - "  Foreground="Black"/>
                                                    <TextBlock Foreground="Black"
                                                        Text="{Binding Path=(dxe:BaseEdit.OwnerEdit).SelectedItem.StampingTypeNumber, RelativeSource={RelativeSource Self}, Mode=OneWay}" />
                                                </StackPanel>
                                            </ControlTemplate>
                                        </dxe:ComboBoxEdit.EditTemplate>


                                        <dxe:ComboBoxEdit.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel>
                                                    <TextBlock Text="{Binding StampingTypeString}" FontSize="18"/>
                                                    <TextBlock Text="{Binding StampingTypeNumber}"  FontSize="12"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </dxe:ComboBoxEdit.ItemTemplate>
                                    </dxe:ComboBoxEdit>
                                        <TabControl 
              materialDesign:ShadowAssist.ShadowEdges="Bottom" materialDesign:ElevationAssist.Elevation="Dp5"
                    materialDesign:ColorZoneAssist.Background="{DynamicResource PrimaryHueDarkBrush}"
                    materialDesign:ColorZoneAssist.Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"
                    materialDesign:ColorZoneAssist.Mode="Custom" TabStripPlacement="Top" 
                    Style="{StaticResource MaterialDesignFilledTabControl}" Background="Transparent" HorizontalContentAlignment="Left">
                                        <TabItem Style="{StaticResource MaterialDesignTabItem}" 
                         Header="{DynamicResource TabItem_MachiningStatus}" >
                                        </TabItem>
                                    </TabControl>
                                        <materialDesign:ColorPicker Color="{Binding Source={x:Static GD_Singletons:StampingMachineSingleton.Instance},Path=NoneIsFinishSolidColor}">
                                            
                                        </materialDesign:ColorPicker>
                                    
                                    
                                    
                                </StackPanel>
                                    <GD_UserControls:MachineFunctionTestUserControl Grid.Column="1" DataContext="{Binding MachineFunctionTestVM}"/>

                                </Grid>
                                </TabItem>


                                <TabItem  IsSelected="{Binding ElementName=TBtn_Calendar, Path=IsChecked}">
                                    <dxsch:SchedulerControl  />
                                </TabItem>
                            </TabControl>
                        </Grid>
                        <!--彈出式按鈕-->
                        <materialDesign:DrawerHost  Opacity="0.95" 
                                                    IsLeftDrawerOpen="{Binding ElementName=TBtn_MainSysyem, Path=IsChecked}" LeftDrawerBackground="Transparent"
                                            IsRightDrawerOpen="{Binding ElementName=TBtn_Alarm, Path=IsChecked}" RightDrawerBackground="Transparent"
                                            >
                            <materialDesign:DrawerHost.LeftDrawerContent>
                            <materialDesign:ColorZone Padding="0,5,5,0"
                                Mode="PrimaryLight"  HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" Margin="0" >
                                    <materialDesign:ColorZone.Effect>
                                        <DropShadowEffect       ShadowDepth="2"
                                                        Direction="0"
                                                        Color="Black"
                                                        Opacity="0.5"
                                                        BlurRadius="10"/>
                                    </materialDesign:ColorZone.Effect>

                                <ItemsControl Style="{StaticResource StampingToolbarItemsControl}"
                                        dd:DragDrop.IsDragSource ="True"
                                        dd:DragDrop.IsDropTarget ="True"
                                        VerticalAlignment="Top"  HorizontalAlignment="Left" >

                                    <GD_UserControls:FunctionToggleUserControl 
                                        x:Name="TBtn_MachineInfo" >
                                        <GD_UserControls:FunctionToggleUserControl.Style>
                                            <Style TargetType="GD_UserControls:FunctionToggleUserControl" BasedOn="{StaticResource FunctionToggleUserControl_LeftDrawer}" >
                                                <Setter Property="ControlTitleText" Value="{DynamicResource btnDescription_MachineInfo}"/>
                                                <Setter Property="ImageSource" Value="{StaticResource MainIcon_12_About_DrawingImage_Mono}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="ImageSource" Value="{StaticResource MainIcon_12_About_DrawingImage_Blue}"/>
                                                    </Trigger>


                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Source={x:Static GD_Singletons:StampingMachineSingleton.Instance},Path=IsBrightMode}" Value="false" />
                                                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self} ,Path=IsChecked}" Value="False" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="ImageSource" Value="{StaticResource MainIcon_12_About_DrawingImage_Mono_Dark}"/>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Source={x:Static GD_Singletons:StampingMachineSingleton.Instance},Path=IsBrightMode}" Value="false" />
                                                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self} ,Path=IsChecked}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="ImageSource" Value="{StaticResource MainIcon_12_About_DrawingImage_Blue_Dark}"/>
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </GD_UserControls:FunctionToggleUserControl.Style>
                                    </GD_UserControls:FunctionToggleUserControl>

                                    <GD_UserControls:FunctionToggleUserControl 
                                        x:Name="TBtn_PunchedFontSetting" >
                                        <GD_UserControls:FunctionToggleUserControl.Style>
                                            <Style TargetType="GD_UserControls:FunctionToggleUserControl" BasedOn="{StaticResource FunctionToggleUserControl_LeftDrawer}" >
                                                <Setter Property="ControlTitleText" Value="{DynamicResource btnDescription_PunchedFontSetting}"/>
                                                <Setter Property="ImageSource" Value="{StaticResource MainIcon_13_MoldFont_DrawingImage_Mono}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="ImageSource" Value="{StaticResource MainIcon_13_MoldFont_DrawingImage_Blue}"/>
                                                    </Trigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Source={x:Static GD_Singletons:StampingMachineSingleton.Instance},Path=IsBrightMode}" Value="false" />
                                                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self} ,Path=IsChecked}" Value="False" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="ImageSource" Value="{StaticResource MainIcon_13_MoldFont_DrawingImage_Mono_Dark}"/>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Source={x:Static GD_Singletons:StampingMachineSingleton.Instance},Path=IsBrightMode}" Value="false" />
                                                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self} ,Path=IsChecked}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="ImageSource" Value="{StaticResource MainIcon_13_MoldFont_DrawingImage_Blue_Dark}"/>
                                                    </MultiDataTrigger>


                                                </Style.Triggers>
                                            </Style>
                                        </GD_UserControls:FunctionToggleUserControl.Style>
                                    </GD_UserControls:FunctionToggleUserControl>

                                    <GD_UserControls:FunctionToggleUserControl 
                                        x:Name="TBtn_ParameterSetting" >
                                            <GD_UserControls:FunctionToggleUserControl.IsChecked>
                                                <MultiBinding Converter="{GD_Common:ToggleButtonMultiBooleanToBooleanConverter}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                                                    <MultiBinding.Bindings>
                                                        <Binding Path="ParameterSettingVM.TbtnNumberSettingIsChecked" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                                        <Binding Path="ParameterSettingVM.TbtnQRSettingIsChecked" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                                        <Binding Path="ParameterSettingVM.TbtnAxisSettingSettingIsChecked" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                                        <Binding Path="ParameterSettingVM.TbtnTimimgSettingIsChecked" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                                        <Binding Path="ParameterSettingVM.TbtnSegregationSettingIsChecked" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                                        <Binding Path="ParameterSettingVM.TbtnInputOutputIsChecked" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                                        <Binding Path="ParameterSettingVM.TbtnSeEngineeringModeIsChecked" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                                    </MultiBinding.Bindings>
                                                </MultiBinding>
                                            </GD_UserControls:FunctionToggleUserControl.IsChecked>

                                        <GD_UserControls:FunctionToggleUserControl.Style>
                                            <Style TargetType="GD_UserControls:FunctionToggleUserControl" BasedOn="{StaticResource FunctionToggleUserControl_LeftDrawer}" >
                                                <Setter Property="ControlTitleText" Value="{DynamicResource btnDescription_ParameterSetting}"/>
                                                <Setter Property="ImageSource" Value="{StaticResource MainIcon_14_Parameter_DrawingImage_Mono}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="ImageSource" Value="{StaticResource MainIcon_14_Parameter_DrawingImage_Blue}"/>
                                                    </Trigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Source={x:Static GD_Singletons:StampingMachineSingleton.Instance},Path=IsBrightMode}" Value="false" />
                                                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self} ,Path=IsChecked}" Value="False" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="ImageSource" Value="{StaticResource MainIcon_14_Parameter_DrawingImage_Mono_Dark}"/>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Source={x:Static GD_Singletons:StampingMachineSingleton.Instance},Path=IsBrightMode}" Value="false" />
                                                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self} ,Path=IsChecked}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="ImageSource" Value="{StaticResource MainIcon_14_Parameter_DrawingImage_Blue_Dark}"/>
                                                    </MultiDataTrigger>


                                                </Style.Triggers>

                                            </Style>
                                        </GD_UserControls:FunctionToggleUserControl.Style>
                                    </GD_UserControls:FunctionToggleUserControl>

                                    <GD_UserControls:FunctionToggleUserControl  
                                        x:Name="TBtn_SoftwareUpdate" >
                                        <GD_UserControls:FunctionToggleUserControl.Style>
                                            <Style TargetType="GD_UserControls:FunctionToggleUserControl" BasedOn="{StaticResource FunctionToggleUserControl_LeftDrawer}" >
                                                <Setter Property="ControlTitleText" Value="{DynamicResource btnDescription_SoftwareUpdate}"/>
                                                <Setter Property="ImageSource" Value="{StaticResource MainIcon_15_Update_DrawingImage_Mono}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="ImageSource" Value="{StaticResource MainIcon_15_Update_DrawingImage_Blue}"/>
                                                    </Trigger>

                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Source={x:Static GD_Singletons:StampingMachineSingleton.Instance},Path=IsBrightMode}" Value="false" />
                                                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self} ,Path=IsChecked}" Value="False" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="ImageSource" Value="{StaticResource MainIcon_15_Update_DrawingImage_Mono_Dark}"/>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Source={x:Static GD_Singletons:StampingMachineSingleton.Instance},Path=IsBrightMode}" Value="false" />
                                                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self} ,Path=IsChecked}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="ImageSource" Value="{StaticResource MainIcon_15_Update_DrawingImage_Blue_Dark}"/>
                                                    </MultiDataTrigger>

                                                </Style.Triggers>
                                            </Style>
                                        </GD_UserControls:FunctionToggleUserControl.Style>
                                    </GD_UserControls:FunctionToggleUserControl>
                                </ItemsControl>
                                </materialDesign:ColorZone>
                            </materialDesign:DrawerHost.LeftDrawerContent>

                            <materialDesign:DrawerHost.RightDrawerContent>
                                <materialDesign:ColorZone Mode="PrimaryDark" Width="auto"  HorizontalAlignment="Right"  VerticalAlignment="Stretch" Margin="0" >

                                    <ScrollViewer GD_Extensions:ScrollViewerExtension.AlwaysScrollToEnd="True">
                                        <dxg:GridControl
                                    Style="{StaticResource AlarmGridControl}"
                                    Background="Transparent"
                                                  AutoGenerateColumns="None"
                                                  SelectionMode="Row"
                                                  ItemsSource="{Binding Source={x:Static GD_Singletons:LogDataSingleton.Instance}, Path=DataObservableCollection , UpdateSourceTrigger=PropertyChanged}"
                             MaxHeight="{x:Static SystemParameters.PrimaryScreenHeight}"  >

                                            <dxg:GridControl.View >
                                                <dxg:TableView  
                                IsColumnMenuEnabled ="False"
                                AllowSorting="false"
                                AllowColumnFiltering="False"
                                AllowColumnMoving="False"
                                Name="MachineMessage_TableView"
                                AllowEditing="False"
                                ShowColumnHeaders="False"
                                HeaderHorizontalAlignment="Center"
                                VerticalScrollbarVisibility="Disabled"
                                HorizontalScrollbarVisibility="Disabled"
                                ShowHorizontalLines="False"
                                ShowVerticalLines="False"
                                ShowGroupPanel="False"
                                ShowSearchPanelMode="Never"
                                SearchPanelNullText="Search Tasks(Ctrl + F)" 
                                SearchPanelFindMode="Always"
                                ShowIndicator="False"
                                SearchDelay="0"/>
                                            </dxg:GridControl.View>

                                            <dxg:GridColumn FieldName="LogDatetime" Header="時間" Width="45" AllowMoving="false"  IsSmart="True">
                                                <dxg:GridColumn.EditSettings>
                                                    <dxe:DateEditSettings Mask="HH:mm"  MaskUseAsDisplayFormat="True"/>
                                                </dxg:GridColumn.EditSettings>
                                            </dxg:GridColumn>
                                            <dxg:GridColumn FieldName="LogSource"  Header="來源" Width="auto" AllowMoving="false"  IsSmart="True">
                                                <dxg:GridColumn.EditSettings>
                                                    <dxe:TextEditSettings HorizontalContentAlignment="Center"/>
                                                </dxg:GridColumn.EditSettings>
                                            </dxg:GridColumn>
                                            <dxg:GridColumn FieldName="LogString" Header="系統訊息" Width="auto" AllowMoving="false"  IsSmart="True">
                                                <dxg:GridColumn.EditSettings>
                                                    <dxe:TextEditSettings HorizontalContentAlignment="Left"/>
                                                </dxg:GridColumn.EditSettings>
                                            </dxg:GridColumn>

                                        </dxg:GridControl>
                                    </ScrollViewer>






                                </materialDesign:ColorZone>
                            </materialDesign:DrawerHost.RightDrawerContent>
                            
                        </materialDesign:DrawerHost>


                    </Grid>
            </materialDesign:ColorZone>

            <materialDesign:ColorZone Grid.Row="2" Padding="5"  Mode="Custom" Background="{StaticResource DarkHueDarkBrush}" VerticalAlignment="Bottom" Grid.ColumnSpan="2"  >
                <materialDesign:ColorZone.Effect>
                    <DropShadowEffect  ShadowDepth="4"
      Direction="90"
      Color="Black"
      Opacity="0.5"
     BlurRadius="6"/>
                </materialDesign:ColorZone.Effect>
                
            <Border BorderThickness="0,2,0,0" BorderBrush="{StaticResource ToggleButtonBackgroundLightGrayBrush}" >
                    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Padding="0,0,0,0">
                        <StackPanel Margin="0,5,0,2"
                            Orientation="Horizontal">
                            <StackPanel.Resources>
                                <Style TargetType="ItemsControl" BasedOn="{StaticResource StampingToolbarItemsControl_Dark}">
                                    <Setter Property="dd:DragDrop.IsDragSource" Value="True"/>
                                    <Setter Property="dd:DragDrop.IsDropTarget" Value ="False"/> 
                                    <Setter Property="ItemsPanel">
                                        <Setter.Value>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Horizontal"/>
                                            </ItemsPanelTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>

                                
                            </StackPanel.Resources>





                            <ItemsControl dd:DragDrop.IsDragSource="True" dd:DragDrop.IsDropTarget="False">

                                <GD_UserControls:FunctionToggleUserControl 
                                x:Name="TBtn_MainSysyem"
                                >
                                    <GD_UserControls:FunctionToggleUserControl.Style>
                                        <Style TargetType="GD_UserControls:FunctionToggleUserControl" BasedOn="{StaticResource FunctionToggleUserControl_Bottom}">
                                            <Setter Property="ControlTitleText" Value="{DynamicResource btnDescription_MainSystem}"      />
                                            <Setter Property="ImageSource" Value="{StaticResource MainIcon_01_MainSystem_DrawingImage_Mono}"      />
                                            <Style.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="ImageSource" Value="{StaticResource MainIcon_01_MainSystem_DrawingImage_Blue}"/>
                                                </Trigger>
                                            </Style.Triggers>                                   
                                        </Style>
                                   
                                    </GD_UserControls:FunctionToggleUserControl.Style>

                                </GD_UserControls:FunctionToggleUserControl>

                                <Border BorderThickness="1" Margin="5,10" BorderBrush="{StaticResource ToggleButtonBackgroundLightGrayBrush}"/>

                                <GD_UserControls:FunctionToggleUserControl x:Name="TBtn_ProductSettings">
                                    <GD_UserControls:FunctionToggleUserControl.Style>
                                        <Style TargetType="GD_UserControls:FunctionToggleUserControl" BasedOn="{StaticResource FunctionToggleUserControl_Bottom}">
                                            <Setter Property="ControlTitleText" Value="{DynamicResource btnDescription_ProductSettings}"      />
                                            <Setter Property="ImageSource" Value="{StaticResource MainIcon_02_Production_DrawingImage_Mono}"      />
                                            <Style.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="ImageSource" Value="{StaticResource MainIcon_02_Production_DrawingImage_Blue}"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </GD_UserControls:FunctionToggleUserControl.Style>
                                </GD_UserControls:FunctionToggleUserControl>


                                <GD_UserControls:FunctionToggleUserControl
                                x:Name="TBtn_TypeSettingSettings"                                 >
                                    <GD_UserControls:FunctionToggleUserControl.Style>
                                        <Style TargetType="GD_UserControls:FunctionToggleUserControl" BasedOn="{StaticResource FunctionToggleUserControl_Bottom}">
                                            <Setter Property="ControlTitleText" Value="{DynamicResource btnDescription_LayoutSettings}"/>
                                            <Setter Property="ImageSource" Value="{StaticResource MainIcon_03_TypeSetting_DrawingImage_Mono}"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="ImageSource" Value="{StaticResource MainIcon_03_TypeSetting_DrawingImage_Blue}"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </GD_UserControls:FunctionToggleUserControl.Style>
                                </GD_UserControls:FunctionToggleUserControl>


                                <GD_UserControls:FunctionToggleUserControl IsChecked="{Binding TBtn_MachineMonitorIsChecked}"
                                    IsEnabled="{Binding  
                                    Source={x:Static GD_Singletons:StampingMachineSingleton.Instance}, 
                                    Path=SelectedProjectDistributeVM,            
                                    Converter={GD_Common:ObjectIsNullToBooleanConverter Invert=True}}"
                                x:Name="TBtn_MachineMonitor" >
                                    <GD_UserControls:FunctionToggleUserControl.Style>
                                    <Style TargetType="GD_UserControls:FunctionToggleUserControl" BasedOn="{StaticResource FunctionToggleUserControl_Bottom}">
                                    <Setter Property="ControlTitleText" Value="{DynamicResource btnDescription_MachineMonitoring}"/>
                                    <Setter Property="ImageSource" Value="{StaticResource MainIcon_04_Machining_DrawingImage_Mono}"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="ImageSource" Value="{StaticResource MainIcon_04_Machining_DrawingImage_Blue}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                    </GD_UserControls:FunctionToggleUserControl.Style>
                                </GD_UserControls:FunctionToggleUserControl>

                                <Border BorderThickness="1" Margin="5,10" BorderBrush="{StaticResource ToggleButtonBackgroundLightGrayBrush}"/>

                                <GD_UserControls:FunctionToggleUserControl x:Name="TBtn_MachineFunction" IsChecked="{Binding TBtn_MachineFunctionIsChecked}">
                                    <GD_UserControls:FunctionToggleUserControl.Style>
                                        <Style TargetType="GD_UserControls:FunctionToggleUserControl" BasedOn="{StaticResource FunctionToggleUserControl_Bottom}">
                                            <Setter Property="ControlTitleText" Value="{DynamicResource btnDescription_MachineFunction}"      />
                                            <Setter Property="ImageSource" Value="{StaticResource MainIcon_05_Machine_DrawingImage_Mono}"      />
                                            <Style.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="ImageSource" Value="{StaticResource MainIcon_05_Machine_DrawingImage_Blue}"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </GD_UserControls:FunctionToggleUserControl.Style>
                                </GD_UserControls:FunctionToggleUserControl>
                                
                                <GD_UserControls:FunctionToggleUserControl x:Name="TBtn_ReturningToOriginPoint"
                                                                             IsThreeState="False"
                                                                             IsEnabled="{Binding Source={x:Static GD_Singletons:StampMachineDataSingleton.Instance} ,Path=IsConnected}" 
                                                                             IsChecked="{Binding Source={x:Static GD_Singletons:StampMachineDataSingleton.Instance} ,Path=IsReturningToOrigin}"     
                                                                             Command="{Binding Source={x:Static GD_Singletons:StampMachineDataSingleton.Instance} ,Path=ReturnToOriginCommand}" Cursor="Hand"                        
                                                                             >
                                    <GD_UserControls:FunctionToggleUserControl.Style>
                                        <Style TargetType="GD_UserControls:FunctionToggleUserControl" BasedOn="{StaticResource FunctionToggleUserControl_Bottom}">
                                            <Setter Property="ControlTitleText" Value="{DynamicResource btnDescription_ReturningToOriginPoint}"      />
                                            <Setter Property="ImageSource" Value="{StaticResource MainIcon_06_ReturningToOriginPoint_DrawingImage_Mono}"      />
                                            <Style.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="ImageSource" Value="{StaticResource MainIcon_06_ReturningToOriginPoint_DrawingImage_Blue}"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </GD_UserControls:FunctionToggleUserControl.Style>
                                </GD_UserControls:FunctionToggleUserControl>

                                <GD_UserControls:FunctionToggleUserControl  x:Name="TBtn_LightUpSwitch" >
                                    <GD_UserControls:FunctionToggleUserControl.Style>
                                        <Style TargetType="GD_UserControls:FunctionToggleUserControl" BasedOn="{StaticResource FunctionToggleUserControl_Bottom}">
                                            <Setter Property="ControlTitleText" Value="{DynamicResource btnDescription_LightUpSwitch}"      />
                                            <Setter Property="ImageSource" Value="{StaticResource MainIcon_07_Lamp_DrawingImage_Mono}"      />
                                            <Style.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="ImageSource" Value="{StaticResource MainIcon_07_Lamp_DrawingImage_Blue}"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </GD_UserControls:FunctionToggleUserControl.Style>
                                </GD_UserControls:FunctionToggleUserControl>





                            </ItemsControl>
                            <Border BorderThickness="1" Margin="5,10" BorderBrush="{StaticResource ToggleButtonBackgroundLightGrayBrush}"/>
                            <ItemsControl 
                                dd:DragDrop.IsDragSource="False"
                                dd:DragDrop.IsDropTarget="True">
                                <GD_UserControls:FunctionToggleUserControl>
                                    <GD_UserControls:FunctionToggleUserControl.Style>
                                        <Style TargetType="GD_UserControls:FunctionToggleUserControl" BasedOn="{StaticResource FunctionToggleUserControl_Bottom}">
                                            <Setter Property="ControlTitleText" Value="{DynamicResource btnDescription_UsualKey2}"      />
                                            <Setter Property="ImageSource" Value="{StaticResource MainIcon_08_Usual_DrawingImage_Mono}"      />
                                            <Style.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="ImageSource" Value="{StaticResource MainIcon_08_Usual_DrawingImage_Blue}"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </GD_UserControls:FunctionToggleUserControl.Style>
                                </GD_UserControls:FunctionToggleUserControl>
                                <GD_UserControls:FunctionToggleUserControl
                                IsDragable="False"
                                IsDropable ="True"
                                >
                                    <GD_UserControls:FunctionToggleUserControl.Style>
                                        <Style TargetType="GD_UserControls:FunctionToggleUserControl" BasedOn="{StaticResource FunctionToggleUserControl_Bottom}">
                                            <Setter Property="ControlTitleText" Value="{DynamicResource btnDescription_UsualKey2}"      />
                                            <Setter Property="ImageSource" Value="{StaticResource MainIcon_08_Usual_DrawingImage_Mono}"      />
                                            <Style.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="ImageSource" Value="{StaticResource MainIcon_08_Usual_DrawingImage_Blue}"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </GD_UserControls:FunctionToggleUserControl.Style>
                                </GD_UserControls:FunctionToggleUserControl>


                            </ItemsControl>
                            <Border BorderThickness="1" Margin="5,10" BorderBrush="{StaticResource ToggleButtonBackgroundLightGrayBrush}"/>
                            <ItemsControl dd:DragDrop.IsDragSource="True" dd:DragDrop.IsDropTarget="False">
                                <GD_UserControls:FunctionToggleUserControl x:Name="TBtn_Calendar">
                                    <GD_UserControls:FunctionToggleUserControl.Style>
                                        <Style TargetType="GD_UserControls:FunctionToggleUserControl" BasedOn="{StaticResource FunctionToggleUserControl_Bottom}">
                                            <Setter Property="ControlTitleText" Value="{DynamicResource btnDescription_Calendar}"      />
                                            <Setter Property="ImageSource" Value="{StaticResource MainIcon_09_Calendar_DrawingImage_Mono}"      />
                                            <Style.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="ImageSource" Value="{StaticResource MainIcon_09_Calendar_DrawingImage_Blue}"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </GD_UserControls:FunctionToggleUserControl.Style>
                                    
                                </GD_UserControls:FunctionToggleUserControl>
                                <GD_Popup:DraggablePopup 
                                IsOpen="{Binding ElementName=TBtn_Speed, Path=IsChecked}" AllowsTransparency="True"  
                                                   Placement="Top"  PlacementTarget="{Binding ElementName=TBtn_Speed}" PopupAnimation="Slide" PlacementRectangle="-110,-10,0,0" >
                                    <Border Opacity="0.95"
                                    CornerRadius="10"   Background="{DynamicResource PrimaryHueLightBrush}" BorderBrush="{DynamicResource PrimaryHueLightBrush}" BorderThickness="1">
                                        <StackPanel Margin="5" Orientation="Vertical">
                                            <TextBlock  HorizontalAlignment="Center"
                                            Text="{StaticResource btnDescription_Speed}" Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"
                                                   FontSize="20" />

                                            <!--
                                        <GD_UserControls:TriggerSliderUserControl Grid.Column="1" MainSilderValue="{Binding}" Width="300" Margin="10"
                                                                                  Foreground="{Binding Path=MainSilderValue, RelativeSource={RelativeSource Self},  
                                            Converter={GD_Common:HundredDoubleToSolidBrushConverter SliderMin=0 ,SliderMax=100}}"/>-->

                                            <GD_UserControls:TriggerSliderUserControl Grid.Column="1" 
                                                                                      DataContext="{Binding Source={x:Static GD_Singletons:StampMachineDataSingleton.Instance}}"
                                                                                  RepeatButtonForeground="{DynamicResource PrimaryHueDarkForegroundBrush}"
                                                                                  MainSilderValue="{Binding Path=FeedingVelocity}" Width="300" Margin="10"
                                                                                      MainSilderValueChanged="{Binding GlobalSpeedChangedCommand}"
                                                                                      >
                                                <GD_UserControls:TriggerSliderUserControl.Foreground>
                                                    <Binding Path="MainSilderValue" RelativeSource="{RelativeSource Mode=Self}" Converter="{GD_Common:MultiBrushes_DoubleToSolidBrushConverter SliderMin=0 ,SliderMax=100}">
                                                        <Binding.ConverterParameter>
                                                            <x:Array Type="SolidColorBrush">
                                                                <SolidColorBrush Color="Red"/>
                                                                <SolidColorBrush Color="OrangeRed"/>
                                                                <SolidColorBrush Color="Orange"/>
                                                                <SolidColorBrush Color="Green"/>
                                                                <SolidColorBrush Color="Green"/>
                                                            </x:Array>
                                                        </Binding.ConverterParameter>
                                                    </Binding>
                                                </GD_UserControls:TriggerSliderUserControl.Foreground>
                                            </GD_UserControls:TriggerSliderUserControl>

                                        </StackPanel>

                                    </Border>
                                </GD_Popup:DraggablePopup>
                                <GD_UserControls:FunctionToggleUserControl
                                     x:Name="TBtn_Speed">
                                    <GD_UserControls:FunctionToggleUserControl.Style>
                                        <Style TargetType="GD_UserControls:FunctionToggleUserControl" BasedOn="{StaticResource FunctionToggleUserControl_Bottom}">
                                            <Setter Property="ControlTitleText" Value="{DynamicResource btnDescription_Speed}"      />
                                            <Setter Property="ImageSource" Value="{StaticResource MainIcon_10_SpeedMeter_DrawingImage_Mono}"      />
                                            <Style.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="ImageSource" Value="{StaticResource MainIcon_10_SpeedMeter_DrawingImage_Blue}"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </GD_UserControls:FunctionToggleUserControl.Style>

                                </GD_UserControls:FunctionToggleUserControl>
                                <GD_UserControls:FunctionToggleUserControl IsChecked="{Binding ParameterSettingVM}"
                                     x:Name="TBtn_Alarm">
                                    <GD_UserControls:FunctionToggleUserControl.Style>
                                        <Style TargetType="GD_UserControls:FunctionToggleUserControl" BasedOn="{StaticResource FunctionToggleUserControl_Bottom}">
                                            <Setter Property="ControlTitleText" Value="{DynamicResource btnDescription_Alarm}"      />
                                            <Setter Property="ImageSource" Value="{StaticResource MainIcon_11_Alarm_DrawingImage_Mono}"      />
                                            <Style.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="ImageSource" Value="{StaticResource MainIcon_11_Alarm_DrawingImage_Blue}"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </GD_UserControls:FunctionToggleUserControl.Style>

                                </GD_UserControls:FunctionToggleUserControl>

                                <GD_UserControls:FunctionToggleUserControl  IsChecked="{Binding Source={x:Static GD_Singletons:StampingMachineSingleton.Instance},Path=IsBrightMode}">
                                    <GD_UserControls:FunctionToggleUserControl.Style>
                                        <Style TargetType="GD_UserControls:FunctionToggleUserControl" BasedOn="{StaticResource FunctionToggleUserControl_Bottom}">
                                            <Setter Property="ImageSource" Value="{StaticResource Dark_Mode_DrawingImage_Mono}"/>
                                            <Setter Property="ControlTitleText" Value="{DynamicResource btnDescription_DarkMode}"      />
                                            <Setter Property="IsCheckedBackground" Value="Transparent"/>
                                            <Setter Property="IsCheckedBorderThickness" Value="0"/>
                                            <Setter Property="IsCheckedOpacity" Value="1"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="ControlTitleText" Value="{DynamicResource btnDescription_BrightMode}"      />
                                                    <Setter Property="ImageSource" Value="{StaticResource Light_Mode_DrawingImage_Mono}"/>
                                                    
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </GD_UserControls:FunctionToggleUserControl.Style>

                                </GD_UserControls:FunctionToggleUserControl>


                                <GD_UserControls:FunctionToggleUserControl 
                                    IsChecked="{Binding Source={x:Static GD_Singletons:StampingMachineSingleton.Instance},Path=FalseValue}"
                                    Command="{Binding Source={x:Static GD_Singletons:CultureViewModel.Instance},Path=ChangeToNextCultureCommand}"
                                    >
                                    <GD_UserControls:FunctionToggleUserControl.Style>
                                        <Style TargetType="GD_UserControls:FunctionToggleUserControl" BasedOn="{StaticResource FunctionToggleUserControl_Bottom}">
                                            <Setter Property="ControlTitleText" Value="{DynamicResource textCultureSetting}"      />
                                            <Setter Property="ImageSource" Value="{StaticResource Language_DrawingImage_Mono}"      />
                                            <Style.Triggers>
                                                <Trigger Property="ToggleButton.IsPressed" Value="True">
                                                    <Setter Property="ImageSource" Value="{StaticResource Language_DrawingImage_Blue}"/>
                                                </Trigger>

                                            </Style.Triggers>
                                        </Style>
                                    </GD_UserControls:FunctionToggleUserControl.Style>
                                </GD_UserControls:FunctionToggleUserControl>

                                


                                <Expander  Foreground="White" Visibility="Collapsed"
                                      materialDesign:ExpanderAssist.VerticalHeaderPadding="0" 
                                      Background="Transparent"  
                                Padding="0" Margin="0"  Style="{StaticResource MaterialDesignExpander}"  ExpandDirection="Right">
                                    <StackPanel Orientation="Horizontal">
                                        <StackPanel VerticalAlignment="Center">
                                            <TextBlock Foreground="{DynamicResource DarkHueDarkForegroundBrush}"
                                                Text="{DynamicResource textCultureSetting}" HorizontalAlignment="Center" FontSize="16" />
                                            <ComboBox  Width="auto" Margin="0" 
                                                       DataContext="{Binding Source={x:Static GD_Singletons:CultureViewModel.Instance}}"
                                                       Style="{StaticResource GD_BlackComboBox}"
                                                   
                                    ItemsSource="{Binding SupportedCultures}" 
                                          SelectedValue="{Binding SelectedCulture}">
                                            </ComboBox>
                                        </StackPanel>
                                    </StackPanel>
                                </Expander>
                            </ItemsControl>
                        </StackPanel>
                    </ScrollViewer>
            </Border>
                </materialDesign:ColorZone>

        </Grid>
    </materialDesign:DialogHost>
</UserControl>
