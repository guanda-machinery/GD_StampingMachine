<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                                 xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" 
                    xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol"
                       xmlns:CalcB="clr-namespace:CalcBinding;assembly=CalcBinding" 
                                            xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    >

        <Style TargetType="{x:Type ToggleButton}" x:Key="GD_ToggleButton">
        <Setter Property="Background" Value="{StaticResource ToggleButtonBackgroundLightGrayBrush}"/>

        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor"  Value="Hand"/>
        <Setter Property="Width" Value="{Binding}"/>
        <Setter Property="Height" Value="{Binding}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource solidclr_SilverGray}"/>
                </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Background" Value="{StaticResource ToggleButtonBackgroundSkyBlueBrush}"/>
            </Trigger>
        </Style.Triggers>
        </Style>

    <Style TargetType="ToggleButton" BasedOn="{StaticResource GD_ToggleButton}">
        <Setter Property="Width" Value="45"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Padding" Value="0"/>
    </Style>
    <Style TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignButtonTextBlock}" x:Key="ToggleButtonTitleWhite">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    <Style TargetType="materialDesign:TimePicker" BasedOn="{StaticResource MaterialDesignTimePicker}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Is24Hours" Value="True"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="10,0"/>
        <Setter Property="materialDesign:HintAssist.Hint" Value="{DynamicResource Text_PSelectTime}"     />
        <Setter Property="FontSize" Value="16"     />
        <Setter Property="materialDesign:TextFieldAssist.TextBoxViewMargin" Value="10,0" />
        <Setter Property="BorderBrush" Value="White"/>
        <Style.Resources>
            <SolidColorBrush x:Key="PrimaryHueMidBrush" Color="#c4c4c4" />
        </Style.Resources>
    </Style>


    <BorderGapMaskConverter x:Key="BorderGapMaskConverter" />
    <Style TargetType="{x:Type GroupBox}" x:Key="ParameterBaseStyleGroupBox">
        <Setter Property="Padding" Value="5,15,5,5"/>
        <Setter Property="BorderBrush" Value="#666666"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border
                            Grid.Row="1"
                            Grid.RowSpan="2"
                            Grid.ColumnSpan="2"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="0">
                            <Border.OpacityMask>
                                <MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="6">
                                    <Binding ElementName="Header" Path="ActualWidth" />
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
                                </MultiBinding>
                            </Border.OpacityMask>
                        </Border>
                        <Border
                            Name="Header"
                            Grid.RowSpan="2"  
                            Padding="10,0,0,0">
                            <ContentPresenter
                                ContentSource="Header"
                                RecognizesAccessKey="true"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ContentPresenter
                            Grid.Row="1" Grid.RowSpan="2"          
                            Grid.ColumnSpan="2"
                            Margin="{TemplateBinding Padding}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            TextBlock.FontSize="{TemplateBinding FontSize}" />

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <Style TargetType="{x:Type GroupBox}" x:Key="UnderLineStyleGroupBox">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="5,15,5,5"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="BorderThickness" Value="0,2,0,0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border
                            Grid.Row="1"
                            Grid.ColumnSpan="2"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="0">
                        </Border>
                        <Border
                            Name="Header"
                            Padding="10,0,0,5">
                            <ContentPresenter
                                ContentSource="Header"
                                RecognizesAccessKey="true"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ContentPresenter 
                            Grid.Row="1" Grid.ColumnSpan="2"
                            Margin="{TemplateBinding Padding}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            TextBlock.FontSize="{TemplateBinding FontSize}" />

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <Style TargetType="GroupBox" BasedOn="{StaticResource UnderLineStyleGroupBox}">
        <Setter Property="Padding" Value="50,20"/>
    </Style>
    
    
    <Style x:Key="VerticalScrollBar_STD" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0,3,0,3" />
        <Setter Property="Width" Value="10" />
        <Setter Property="MinWidth" Value="5" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Opacity" Value="0.1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="True">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <RepeatButton
                            Grid.Row="0"
                            Command="{x:Static ScrollBar.PageUpCommand}"
                            Style="{StaticResource VerticalScrollBarPageButtonUp}"
                            Visibility="Collapsed" />
                        <Track
                            x:Name="PART_Track"
                            Grid.Row="1"
                            IsDirectionReversed="True"
                            IsEnabled="{TemplateBinding IsMouseOver}"
                            Visibility="Collapsed">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton_Office}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton_Office}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb_STD}" />
                            </Track.Thumb>
                        </Track>
                        <RepeatButton
                            Grid.Row="2"
                            Command="{x:Static ScrollBar.PageDownCommand}"
                            Style="{StaticResource VerticalScrollBarPageButtonDown}"
                            Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalScrollBar_STD" TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Height" Value="10" />
        <Setter Property="MinHeight" Value="5" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Margin" Value="3,0,16,0" />
        <Setter Property="Opacity" Value="0.1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                        <RepeatButton
                            Grid.Column="0"
                            Command="{x:Static ScrollBar.PageLeftCommand}"
                            Style="{StaticResource HorizontalScrollBarPageButtonLeft}"
                            Visibility="Collapsed" />
                        <Track
                            x:Name="PART_Track"
                            Grid.Column="1"
                            IsDirectionReversed="False"
                            IsEnabled="{TemplateBinding IsMouseOver}"
                            Visibility="Collapsed">
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HorizontalScrollBarPageButton_Office}" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HorizontalScrollBarPageButton_Office}" />
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb_STD}" />
                            </Track.Thumb>
                        </Track>
                        <RepeatButton
                            Grid.Column="2"
                            Command="{x:Static ScrollBar.PageRightCommand}"
                            Style="{StaticResource HorizontalScrollBarPageButtonRight}"
                            Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="WhiteComboBoxToggleButtonNoBorder" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border
                x:Name="Border"
                Grid.ColumnSpan="2"
                Background="Transparent"
                BorderBrush="{StaticResource solidclr_White}"
                BorderThickness="0,0,0,1" />
            <Path
                x:Name="Arrow"
                Grid.Column="1"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                Fill="{StaticResource solidclr_CreamyWhite}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="Arrow" Property="Data" Value="M0,4 L0,6 L4,2 L8,6 L8,4 L4,0 z" />
                <Setter TargetName="Border" Property="Visibility" Value="Collapsed" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style
        x:Key="GD_White_ComboBox"
        BasedOn="{StaticResource MaterialDesignFloatingHintComboBox}"
        TargetType="ComboBox">
        <Setter Property="Foreground" Value="{StaticResource solidclr_DimGray}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="30" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter
                            Name="ContentSite"
                            Margin="0,6"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            IsHitTestVisible="False" />
                        <ToggleButton
                            HorizontalAlignment="Stretch"
                            Name="ToggleButton"
                            Grid.ColumnSpan="2"
                            ClickMode="Press"
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Template="{StaticResource WhiteComboBoxToggleButtonNoBorder}" />
                        <Popup
                            Name="Popup"
                            AllowsTransparency="True"
                            Focusable="False"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            Placement="Bottom"
                            PopupAnimation="Slide">
                            <Grid
                                Name="DropDown"
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                SnapsToDevicePixels="True">
                                <Border
                                    x:Name="DropDownBorder"
                                    Background="{StaticResource solidclr_CreamyGray}"
                                    BorderBrush="{StaticResource solidclr_SilverGray}"
                                    BorderThickness="1" />
                                <dxlc:ScrollBox SnapsToDevicePixels="True">
                                    <dxlc:ScrollBox.VerticalScrollBarStyle>
                                        <Style BasedOn="{StaticResource VerticalScrollBar_STD}" TargetType="ScrollBar" />
                                    </dxlc:ScrollBox.VerticalScrollBarStyle>
                                    <dxlc:ScrollBox.HorizontalScrollBarStyle>
                                        <Style BasedOn="{StaticResource HorizontalScrollBar_STD}" TargetType="ScrollBar" />
                                    </dxlc:ScrollBox.HorizontalScrollBarStyle>
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </dxlc:ScrollBox>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="SiegCustomButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatButton}">
        <Setter Property="Opacity"
                            Value="0.9" />
        <Setter Property="BorderThickness"
                            Value="0" />
        <Setter Property="Cursor"
                            Value="Hand" />
        <Setter Property="Margin"
                            Value="0" />
        <Setter Property="Padding"
                            Value="5" />
        <Setter Property="Background"
                            Value="WhiteSmoke" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"        
                            Margin="0"
                            CornerRadius="5"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">

                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="LightSkyBlue"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Orange"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="SiegCustomRepeatButton" TargetType="RepeatButton" BasedOn="{StaticResource MaterialDesignFlatButton}">
    
        <Setter Property="Opacity"
                            Value="0.9" />
        <Setter Property="BorderThickness"
                            Value="2" />
        <Setter Property="BorderBrush" 
                Value="White"/>
        <Setter Property="Cursor"
                            Value="Hand" />
        <Setter Property="Margin"
                            Value="0" />
        <Setter Property="Padding"
                            Value="0" />
        <Setter Property="Background"
                            Value="Transparent" />
        <Setter Property="Foreground" 
                Value="White"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Background="{TemplateBinding Background}"     
                            Height="{TemplateBinding Width}"
                            Width="{TemplateBinding Width}"
                            Margin="0"
                            CornerRadius="2"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter  HorizontalAlignment="Center" VerticalAlignment="Center">

                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Orange"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="OrangeRed"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



















    <Style x:Key="SliderButtonStyle"
       TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels"
          Value="true" />
        <Setter Property="OverridesDefaultStyle"
          Value="true" />
        <Setter Property="IsTabStop"
          Value="false" />
        <Setter Property="Focusable"
          Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="{TemplateBinding Background}"  CornerRadius="{CalcB:Binding RelativeSource={RelativeSource Self}, Path=ActualHeight /2}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderThumbStyle"
       TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels"
          Value="true" />
        <Setter Property="OverridesDefaultStyle"
          Value="true" />
        <Setter Property="Height"
          Value="20" />
        <Setter Property="Width"
          Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Ellipse x:Name="Ellipse"
                 StrokeThickness="1">
                        <Ellipse.Stroke>
                            <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{DynamicResource BorderLightColor}"
                                Offset="0.0" />
                                        <GradientStop Color="{DynamicResource BorderDarkColor}"
                                Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Ellipse.Stroke>
                        <Ellipse.Fill>
                            <LinearGradientBrush EndPoint="0.5,1"
                                 StartPoint="0.5,0">
                                <GradientStop Color="{DynamicResource ControlMediumColor}"
                            Offset="1" />
                                <GradientStop Color="{DynamicResource ControlLightColor}" />
                            </LinearGradientBrush>
                        </Ellipse.Fill>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).
                    (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                Storyboard.TargetName="Ellipse">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="#FF3843C4" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).
                    (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                Storyboard.TargetName="Ellipse">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="#FF211AA9" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).
                    (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                Storyboard.TargetName="Ellipse">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="#FFC5CBF9" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Ellipse>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Template when the orientation of the Slider is Horizontal.-->
    <ControlTemplate x:Key="HorizontalSlider"
                 TargetType="{x:Type Slider}">
        <Border Background="{TemplateBinding Background}" CornerRadius="{CalcB:Binding RelativeSource={RelativeSource Self}, Path=ActualHeight/2}" Padding="0">
        <Grid  Margin="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto"
                     MinHeight="{TemplateBinding MinHeight}" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            
            <TickBar x:Name="TopTick"
             SnapsToDevicePixels="True"
             Placement="Top"
             Height="4"
             Visibility="Collapsed">
                <TickBar.Fill>
                    <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                </TickBar.Fill>
            </TickBar>
            <Border x:Name="TrackBackground"
            Margin="0"
            CornerRadius="2"
            Height="4"
            Grid.Row="1"
            BorderThickness="1">
                <Border.BorderBrush>
                    <LinearGradientBrush StartPoint="0,0"
                             EndPoint="0,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Color="{DynamicResource BorderLightColor}"
                            Offset="0.0" />
                                <GradientStop Color="{DynamicResource BorderDarkColor}"
                            Offset="1.0" />
                            </GradientStopCollection>
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Border.BorderBrush>
                <Border.Background>
                    <LinearGradientBrush StartPoint="0,0"
                             EndPoint="0,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Color="{DynamicResource ControlLightColor}"
                            Offset="0.0" />
                                <GradientStop Color="{DynamicResource SliderTrackDarkColor}"
                            Offset="1.0" />
                            </GradientStopCollection>
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
                <Track Grid.Row="1"
           x:Name="PART_Track">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderButtonStyle}" Background="{TemplateBinding Foreground}"
                      Command="Slider.DecreaseLarge" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderButtonStyle}" Background="Transparent"
                      Command="Slider.IncreaseLarge" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb  Margin="-10,0"  />
                    </Track.Thumb>
                </Track>

                <TickBar x:Name="BottomTick"
             SnapsToDevicePixels="True"
             Grid.Row="2"
             Fill="{TemplateBinding Foreground}"
             Placement="Bottom"
             Height="4"
             Visibility="Collapsed" />
        </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement"
             Value="TopLeft">
                <Setter TargetName="TopTick"
              Property="Visibility"
              Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement"
             Value="BottomRight">
                <Setter TargetName="BottomTick"
              Property="Visibility"
              Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement"
             Value="Both">
                <Setter TargetName="TopTick"
              Property="Visibility"
              Value="Visible" />
                <Setter TargetName="BottomTick"
              Property="Visibility"
              Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Template when the orientation of the Slider is Vertical.-->
    <ControlTemplate x:Key="VerticalSlider"
                 TargetType="{x:Type Slider}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto"
                        MinWidth="{TemplateBinding MinWidth}" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TickBar x:Name="TopTick"
             SnapsToDevicePixels="True"
             Placement="Left"
             Width="4"
             Visibility="Collapsed">
                <TickBar.Fill>
                    <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                </TickBar.Fill>
            </TickBar>

            <Border x:Name="TrackBackground"
            Margin="0"
            CornerRadius="2"
            Width="4"
            Grid.Column="1"
            BorderThickness="1">
                <Border.BorderBrush>
                    <LinearGradientBrush StartPoint="0,0"
                             EndPoint="1,0">
                        <LinearGradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Color="{DynamicResource BorderLightColor}"
                            Offset="0.0" />
                                <GradientStop Color="{DynamicResource BorderDarkColor}"
                            Offset="1.0" />
                            </GradientStopCollection>
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>

                </Border.BorderBrush>
                <Border.Background>
                    <LinearGradientBrush EndPoint="1,0"
                             StartPoint="0.25,0">
                        <GradientStop Color="{DynamicResource ControlLightColor}"
                        Offset="0" />
                        <GradientStop Color="{DynamicResource SliderTrackDarkColor}"
                        Offset="1" />
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <Track Grid.Column="1"
           x:Name="PART_Track">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyle}"
                      Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderThumbStyle}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyle}"
                      Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
            </Track>
            <TickBar x:Name="BottomTick"
             SnapsToDevicePixels="True"
             Grid.Column="2"
             Fill="{TemplateBinding Foreground}"
             Placement="Right"
             Width="4"
             Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement"
             Value="TopLeft">
                <Setter TargetName="TopTick"
              Property="Visibility"
              Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement"
             Value="BottomRight">
                <Setter TargetName="BottomTick"
              Property="Visibility"
              Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement"
             Value="Both">
                <Setter TargetName="TopTick"
              Property="Visibility"
              Value="Visible" />
                <Setter TargetName="BottomTick"
              Property="Visibility"
              Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type Slider}" BasedOn="{StaticResource MaterialDesignDiscreteSlider}" x:Key="CustomSlider">
        <Setter Property="SnapsToDevicePixels"
          Value="true" />
        <Setter Property="OverridesDefaultStyle"
          Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation"
             Value="Horizontal">
                <Setter Property="MinWidth"
              Value="100" />
                <Setter Property="MinHeight"
              Value="10" />
                <Setter Property="Template"
              Value="{StaticResource HorizontalSlider}" />
            </Trigger>
            <Trigger Property="Orientation"
             Value="Vertical">
                <Setter Property="MinWidth"
              Value="10" />
                <Setter Property="MinHeight"
              Value="104" />
                <Setter Property="Template"
              Value="{StaticResource VerticalSlider}" />
            </Trigger>
        </Style.Triggers>
    </Style>



</ResourceDictionary>