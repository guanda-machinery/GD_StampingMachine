<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    mc:Ignorable="d" >



    <Style TargetType="Border" x:Key="DragDropBorderBackgroundChangeStyle">
        <Setter Property="Background" Value="Transparent"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
            <EventTrigger RoutedEvent="MouseEnter">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Background.Color" 
                                                        Duration="0:0:0.200" To="Orange" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Background.Color" 
                                                        Duration="0:0:0.200" To="Transparent" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
            <EventTrigger RoutedEvent="DragEnter">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Background.Color" 
                                                        Duration="0:0:0.200" To="DarkCyan" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
            <EventTrigger RoutedEvent="DragLeave">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <!--離開-->
                            <ColorAnimation Storyboard.TargetProperty="Background.Color" 
                                                        Duration="0:0:0.200" To="Transparent" />

                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
            <EventTrigger RoutedEvent="Drop">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard Duration="00:00:01">
                            <ColorAnimation Storyboard.TargetProperty="Background.Color" 
                                                        Duration="0:0:0.500" To="Transparent" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>

        </Style.Triggers>
    </Style>

    <Style TargetType="Border" x:Key="DragDropBorderStyle" BasedOn="{StaticResource DragDropBorderBackgroundChangeStyle}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}"/>

    </Style> 
    <Style TargetType="Border" x:Key="SelectedBorder">
        <Setter Property="Background" Value="Transparent"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                            AncestorType={x:Type ListBoxItem}},
                                                            Path=IsSelected}" Value="True">
                <Setter Property="Background" Value="DeepSkyBlue"/>
            </DataTrigger>
        </Style.Triggers>


    </Style>

    <Style TargetType="Border" x:Key="SelectedListBoxItemBackground" BasedOn="{StaticResource MaterialDesignToolBarMainPanelBorderStyle}">
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <TransformGroup>
                    <TranslateTransform X="0" Y="0" x:Name="AnimatedTranslateTransform"/>
                    <RotateTransform Angle="0" x:Name="AnimatedRotateTransform"/>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                </TransformGroup>
            </Setter.Value>
        </Setter>

        <Setter Property="Background" Value="Transparent"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                            AncestorType={x:Type ListBoxItem}},
                                                            Path=IsSelected}" Value="True">
                <Setter Property="Background" Value="Gray"/>
            </DataTrigger>

            <EventTrigger RoutedEvent="DragEnter">
            <EventTrigger.Actions>
                <BeginStoryboard>
                    <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Background.Color" 
                                                        Duration="0:0:0.200" To="DarkCyan" />
                        <!--
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.Children[0].X" RepeatBehavior="5x">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="2"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.20" Value="-2"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>

                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.Children[0].Y" RepeatBehavior="5x">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="2"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.20" Value="-2"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>-->
                            <!--RepeatBehavior="Forever"-->
                        <!--
                            <DoubleAnimationUsingKeyFrames  Storyboard.TargetProperty="RenderTransform.Children[1].Angle"  RepeatBehavior="2x">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.20" Value="-4"/>
                            </DoubleAnimationUsingKeyFrames>-->

                            <DoubleAnimation   Storyboard.TargetProperty="LayoutTransform.Children[2].ScaleX"  RepeatBehavior="1x"
                                               To="1.2" Duration="0:0:0.1"
                                               />
                            <DoubleAnimation   Storyboard.TargetProperty="LayoutTransform.Children[2].ScaleY"  RepeatBehavior="1x"
                                                 To="1.2" Duration="0:0:0.1"
                                               />


                        </Storyboard>
                </BeginStoryboard>
            </EventTrigger.Actions>
            </EventTrigger>
            <EventTrigger RoutedEvent="DragLeave">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <!--離開-->
                            <ColorAnimation Storyboard.TargetProperty="Background.Color" 
                                                        Duration="0:0:0.500" To="Transparent" />
                            <DoubleAnimationUsingKeyFrames  Storyboard.TargetProperty="LayoutTransform.Children[1].Angle"  RepeatBehavior="1x">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>

                            <DoubleAnimation   Storyboard.TargetProperty="LayoutTransform.Children[2].ScaleX"  RepeatBehavior="1x"
                                               To="1" Duration="0:0:0.1"
                                               />
                            <DoubleAnimation   Storyboard.TargetProperty="LayoutTransform.Children[2].ScaleY"  RepeatBehavior="1x"
                                                 To="1" Duration="0:0:0.1"
                                               />

                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <!--離開-->
                            <ColorAnimation Storyboard.TargetProperty="Background.Color" 
                                                        Duration="0:0:0.500" To="Transparent" />
                            <DoubleAnimationUsingKeyFrames  Storyboard.TargetProperty="LayoutTransform.Children[1].Angle"  RepeatBehavior="1x">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>

                            <DoubleAnimation   Storyboard.TargetProperty="LayoutTransform.Children[2].ScaleX"  RepeatBehavior="1x"
                                               To="1" Duration="0:0:0.1"
                                               />
                            <DoubleAnimation   Storyboard.TargetProperty="LayoutTransform.Children[2].ScaleY"  RepeatBehavior="1x"
                                                 To="1" Duration="0:0:0.1"
                                               />

                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>

            <EventTrigger RoutedEvent="Drop">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard Duration="00:00:01">
                            <ColorAnimation Storyboard.TargetProperty="Background.Color" 
                                                        Duration="0:0:0.500" To="Transparent" />
                            <DoubleAnimationUsingKeyFrames  Storyboard.TargetProperty="LayoutTransform.Children[1].Angle"  RepeatBehavior="1x">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimation   Storyboard.TargetProperty="LayoutTransform.Children[2].ScaleX"  RepeatBehavior="1x"
                                               To="1" Duration="0:0:0.1"
                                               />
                            <DoubleAnimation   Storyboard.TargetProperty="LayoutTransform.Children[2].ScaleY"  RepeatBehavior="1x"
                                                 To="1" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
        </Style.Triggers>


    </Style>



    <Style TargetType="ListBoxItem" x:Key="StampingTypeDataStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Padding="5,5,5,0" Style="{StaticResource SelectedListBoxItemBackground }">
                        <Grid  >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Border Style="{StaticResource DragDropBorderStyle}" Name="MainBorder">
                            <Border Style="{StaticResource SelectedBorder}"  CornerRadius="{Binding ElementName=MainBorder, Path=CornerRadius}">
                    <TextBlock Text="{Binding StampingTypeString}" FontSize="30" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White"/>
                </Border>
            </Border>
            <StackPanel Grid.Row="1" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,1">
                <TextBlock Text="NO." FontSize="10" Foreground="White"/>
                <TextBlock Text="{Binding StampingTypeNumber}" FontSize="10" Foreground="White"/>

                <!-- <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContentPresenter}, Converter={gd_valueconverters:ContainerToIndexConverter}, UpdateSourceTrigger=PropertyChanged}" FontSize="10" Foreground="White"/>-->
            </StackPanel>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListBoxItem" x:Key="UnusedStampingTypeDataStyle" x:Name="MainListBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem" >
                    <Border Style="{StaticResource SelectedListBoxItemBackground }" Padding="5" Margin="10,0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <Border Style="{StaticResource DragDropBorderStyle}" Name="MainBorder">
                                <Border  Style="{StaticResource SelectedBorder}" CornerRadius="{Binding ElementName=MainBorder, Path=CornerRadius}">
                                    <TextBlock Text="{Binding StampingTypeString}" FontSize="30" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White"/>
                                </Border>
                            </Border>
                            <StackPanel Grid.Column="1" Orientation="Horizontal" Margin="10,0" Width="100">
                                <TextBlock  Text="{Binding StampingTypeUseCount}" VerticalAlignment="Center" FontSize="14" Width="50" TextAlignment="Right"  Foreground="White"/>
                                <TextBlock  Text="{DynamicResource Text_Count2}" VerticalAlignment="Center" FontSize="16"  Foreground="White"/>
                            </StackPanel>
                        </Grid>
                    </Border>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
   </Style>



</ResourceDictionary>