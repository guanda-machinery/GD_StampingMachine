<UserControl x:Class="GD_StampingMachine.UserControls.MachineFunctionUserControl"    
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                       xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
             xmlns:local="clr-namespace:GD_StampingMachine.UserControls"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             
            xmlns:GD_ParameterSettingViewModels="clr-namespace:GD_StampingMachine.ViewModels.ParameterSetting" 
             xmlns:GD_Enum="clr-namespace:GD_StampingMachine.GD_Enum;assembly=GD_StampingMachine.GD_Enum"
             xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" 
             xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" 
             xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" 
             
             xmlns:GD_ViewModels="clr-namespace:GD_StampingMachine.ViewModels"                
             xmlns:GD_Common="clr-namespace:GD_CommonLibrary;assembly=GD_CommonLibrary"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors" 
             xmlns:GD_StampingMachine_UserControls="clr-namespace:GD_StampingMachine.UserControls"
             xmlns:Diagram="http://schemas.devexpress.com/winfx/2008/xaml/diagram" xmlns:p="clr-namespace:Petzold.Media2D;assembly=Arrowheads" 

             xmlns:GD_Extensions="clr-namespace:GD_CommonLibrary.Extensions;assembly=GD_CommonLibrary" 
             
             xmlns:GD_Singletons="clr-namespace:GD_StampingMachine.Singletons" 
             
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:GD_Popup="clr-namespace:GD_CommonLibrary.GD_Popup;assembly=GD_CommonLibrary" 
             xmlns:GD_Views="clr-namespace:GD_StampingMachine.Views" xmlns:GD_SchematicDiagram="clr-namespace:GD_StampingMachine.UserControls.NumberSettingSchematicDiagram" xmlns:c="clr-namespace:CalcBinding;assembly=CalcBinding" xmlns:GD_StampingMachine="clr-namespace:GD_StampingMachine"
             d:DataContext="{d:DesignInstance Type=GD_ViewModels:MachineFunctionViewModel}"
             xmlns:GD_ProductSettingViewModels="clr-namespace:GD_StampingMachine.ViewModels.ProductSetting"             
             >

    <Grid >
        <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
        <StackPanel >
            <materialDesign:Card Background="Transparent" Padding="10"
                            materialDesign:ShadowAssist.ShadowEdges="Bottom" materialDesign:ElevationAssist.Elevation="Dp6" >
                <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" >
                    <StackPanel Orientation="Horizontal">
                        <StackPanel Margin="5">
                                <local:FunctionToggleUserControl IsChecked="{Binding Feeding_Component_Button_IsChecked}"
                                                                     PackIconKind="Import"
                                                                             ControlTitleText="{DynamicResource Text_Feeding_Component}" />
                                <local:FunctionToggleUserControl IsChecked="{Binding QRCode_Component_Button_IsChecked}"
                                   PackIconKind="QrcodeEdit"
                                ControlTitleText="{DynamicResource Text_QRCode_Component}" />
                                <local:FunctionToggleUserControl IsChecked="{Binding Stamping_Component_Button_IsChecked}"
                                   PackIconKind="Stamper"
                                ControlTitleText="{DynamicResource Text_Stamping_Component}" />
                                <local:FunctionToggleUserControl IsChecked="{Binding ShearCut_Component_Button_IsChecked}"
                                   PackIconKind="ScissorsCutting"
                                ControlTitleText="{DynamicResource Text_ShearCut_Component_Hydraulic}" />
                                <local:FunctionToggleUserControl IsChecked="{Binding Separator_Component_Button_IsChecked}"
                                   PackIconKind="PackageVariantClosed"
                                ControlTitleText="{DynamicResource Text_Separator_Component}" />

                                <local:FunctionToggleUserControl x:Name="Custom_Component_TButton"
                                   PackIconKind="Download"
                                ControlTitleText="{DynamicResource Text_Custom_Component}" />

                                <GD_Popup:NonTopmostPopup
                                    PopupAnimation="Fade"   FlowDirection="LeftToRight" StaysOpen="False"
                                    Placement="Right"  
                                    PlacementTarget="{Binding ElementName=Custom_Component_TButton}"
                                                          HorizontalAlignment="Center" 
                                    IsOpen="{Binding ElementName=Custom_Component_TButton, Path=IsChecked, Mode=TwoWay}">

                                    <Grid>
                                        <Border  Background="{DynamicResource PrimaryHueMidBrush}" Padding="5,0" CornerRadius="10">
                                            <StackPanel>
                                                <local:FunctionToggleUserControl 
                                                                             PackIconKind="BoxCutter"
                                                                             ControlTitleText="{DynamicResource btnDescription_ManualCutting}" >
                                                    <local:FunctionToggleUserControl.IsChecked>
                                                        <MultiBinding Converter="{GD_Common:MultiBooleanArrayAndParameterArrayToBooleanConverter ConvertBackForceToFalse=True}">
                                                            <MultiBinding.ConverterParameter>
                                                                <x:Array Type="{x:Type sys:Boolean}">
                                                                    <sys:Boolean>true</sys:Boolean>
                                                                    <sys:Boolean>true</sys:Boolean>
                                                                    <sys:Boolean>true</sys:Boolean>
                                                                    <sys:Boolean>true</sys:Boolean>
                                                                    <sys:Boolean>false</sys:Boolean>
                                                                </x:Array>
                                                            </MultiBinding.ConverterParameter>
                                                            <Binding Path="Feeding_Component_Button_IsChecked"/>
                                                            <Binding Path="QRCode_Component_Button_IsChecked"/>
                                                            <Binding Path="Stamping_Component_Button_IsChecked"/>
                                                            <Binding Path="ShearCut_Component_Button_IsChecked"/>
                                                            <Binding Path="Separator_Component_Button_IsChecked"/>
                                                        </MultiBinding>
                                                    </local:FunctionToggleUserControl.IsChecked>

                                                </local:FunctionToggleUserControl>
                                            </StackPanel>
                                        </Border>
                                    </Grid>
                                </GD_Popup:NonTopmostPopup>



                            </StackPanel>
                            <Grid RenderTransformOrigin="0.5,0.5" Name="MachineOverviewGrid">
                                <Grid.LayoutTransform >
                                    <ScaleTransform ScaleX="1.0" ScaleY="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ScaleX}"/>
                                </Grid.LayoutTransform>
                                <Grid HorizontalAlignment="Left">
                                    <Image Name="SnpImage" Source="pack://application:,,,/image/SNP-0001.BMP" Height="400"/>
                                    <Canvas Height="{Binding ElementName=SnpImage, Path=ActualHeight}" 
                                        Width="{Binding ElementName=SnpImage, Path=ActualWidth}"
                                        >
                                        <Canvas.Resources>
                                            <Style TargetType="p:ArrowLine">
                                                <Setter Property="Stroke" Value="Red"/>
                                                <Setter Property="StrokeThickness" Value="2"/>
                                                <Setter Property="ArrowLength" Value="5"/>
                                            </Style>
                                            <Style TargetType="ToggleButton" BasedOn="{StaticResource GD_MainToggleButton}">
                                                <Setter Property="Background" Value="Transparent"/>
                                                <Setter Property="BorderBrush" Value="Black"/>
                                                <Setter Property="BorderThickness" Value="0.5"/>
                                                <Setter Property="Opacity" Value="0.5"/>
                                                <Setter Property="Margin" Value="0"/>
                                                <Setter Property="Padding" Value="5"/>
                                                <Setter Property="TextBlock.FontSize" Value="14"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="BorderThickness" Value="0.5"/>
                                                        <Setter Property="Background" Value="DeepSkyBlue"/>
                                                        <Setter Property="Opacity" Value="0.3"/>
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="BorderThickness" Value="0"/>
                                                        <Setter Property="Background" Value="DeepSkyBlue"/>
                                                        <Setter Property="Opacity" Value="0.5"/>
                                                    </Trigger>

                                                </Style.Triggers>
                                            </Style>

                                        </Canvas.Resources>

                                        <StackPanel Canvas.Left="60" Canvas.Top="120">
                                            <ToggleButton MinWidth="190" Height="130" 
                                                      IsChecked="{Binding Feeding_Component_Button_IsChecked}"/>
                                        </StackPanel>

                                        <StackPanel Canvas.Left="250" Canvas.Top="120">
                                            <ToggleButton MinWidth="70" Height="130" 
                                                      IsChecked="{Binding QRCode_Component_Button_IsChecked}"/>
                                        </StackPanel>
                                        <StackPanel Canvas.Left="320" Canvas.Top="0">
                                            <ToggleButton MinWidth="110" Height="250" 
                                                          IsChecked="{Binding Stamping_Component_Button_IsChecked}"/>
                                        </StackPanel>


                                        <StackPanel Canvas.Left="430" Canvas.Top="75">
                                            <ToggleButton MinWidth="70" Height="175"  IsChecked="{Binding ShearCut_Component_Button_IsChecked}"/>
                                        </StackPanel>
                                        <StackPanel Canvas.Left="470" Canvas.Top="280">
                                            <ToggleButton MinWidth="125" Height="110"  IsChecked="{Binding Separator_Component_Button_IsChecked}" />
                                        </StackPanel>

                                        <!--
                                <StackPanel Canvas.Left="130" Canvas.Top="35">
                                    <ToggleButton 
                                        Content="{DynamicResource Text_Feeding_Component}"/>
                                </StackPanel>
                                <StackPanel Canvas.Left="230" Canvas.Top="35">
                                    <ToggleButton Content="{DynamicResource Text_QRCode_Component}"/>
                                </StackPanel>



                                <StackPanel Canvas.Left="45" Canvas.Top="145">


                                    <materialDesign:PopupBox Background="White"  
                                                                         BorderThickness="1" BorderBrush="Black"
                                                                         Style="{StaticResource GD_PopUpBox}" 
                                                                         ToggleContent="{DynamicResource Text_XAxis_Motor}"
                                                                         >
                                        <Border Background="White">
                                            <StackPanel Margin="10">
                                                <TextBlock Text="123" Foreground="Black"/>
                                                <TextBlock Text="123" Foreground="Black"/>
                                                <TextBlock Text="123" Foreground="Black"/>
                                                <TextBlock Text="123" Foreground="Black"/>
                                                <TextBlock Text="123" Foreground="Black"/>
                                                <TextBlock Text="123" Foreground="Black"/>
                                            </StackPanel>
                                        </Border>
                                    </materialDesign:PopupBox>

                                    <p:ArrowLine HorizontalAlignment="Center" 
                                        X1="0" Y1="0"  X2="0" Y2="20" />

                                </StackPanel>

                                <StackPanel Canvas.Left="80" Canvas.Top="90">

                                    <materialDesign:PopupBox Background="White"  
                                                                         BorderThickness="1"  
                                                                         Style="{StaticResource GD_PopUpBox}" 
                                                                         >
                                        <materialDesign:PopupBox.ToggleContent>
                                            <TextBlock DataContext="{DynamicResource Text_DoubleGuideRodPneumaticCylinder}" Margin="0" Padding="0"
                                                         Foreground="Red">
                                                <TextBlock.Text>
                                                    <MultiBinding StringFormat="{}{0}-1">
                                                        <Binding/>
                                                    </MultiBinding>
                                                </TextBlock.Text>

                                            </TextBlock>
                                        </materialDesign:PopupBox.ToggleContent>
                                        <Border Background="White">
                                            <StackPanel Margin="15">
                                                <TextBlock  
                                                                Text="．四個滑動軸承或線性滾珠軸承可擁有較高的負載或精密度。&#x000A;．可節省許多機構設計之思考，繪圖及安裝的時間，且結構簡單。&#x000A;．與MCG*系列相比，本系列有較長行程及較大缸徑可選用。&#x000A;．ø32~ø63缸管四面均設計埋入式傳感器固定溝槽，可依實際使用需要變更傳感器安裝位置。&#x000A;．一律附有端點可調式緩衝。&#x000A;．須定期於注油孔處填充潤滑脂，以增加潤滑度及使用壽命。&#x000A;．全系列均附磁。"
                                                                        Foreground="Black" TextWrapping="Wrap">

                                                </TextBlock>
                                            </StackPanel>
                                        </Border>
                                    </materialDesign:PopupBox>






                                    <p:ArrowLine HorizontalAlignment="Center" 
                                        X1="0" Y1="0"  X2="0" Y2="35" >
                                    </p:ArrowLine>
                                </StackPanel>

                                <StackPanel Canvas.Left="166" Canvas.Top="90">
                                    <ToggleButton                          
                                                     Foreground="Red"
                                                    Content="{DynamicResource Text_DoubleGuideRodPneumaticCylinder}" 
                                                    ContentStringFormat="{}{0}-2"/>
                                    <p:ArrowLine HorizontalAlignment="Center" 
                                        X1="0" Y1="0"  X2="0" Y2="35" >
                                    </p:ArrowLine>
                                </StackPanel>

                                <StackPanel Canvas.Left="285" Canvas.Top="90">
                                    <ToggleButton Content="{DynamicResource Text_BlockCylinder}"/>
                                    <p:ArrowLine HorizontalAlignment="Center" 
                                        X1="0" Y1="0"  X2="0" Y2="75" >
                                    </p:ArrowLine>
                                </StackPanel>

                                <StackPanel Canvas.Left="433" Canvas.Top="40">
                                    <ToggleButton Content="{DynamicResource Text_ShearCut_Component_Hydraulic}"/>
                                    <p:ArrowLine 
                                        X1="30" Y1="0"  X2="30" Y2="95" >
                                    </p:ArrowLine>
                                </StackPanel>


                                <StackPanel Canvas.Left="255" Canvas.Top="200">
                                    <p:ArrowLine
                                        X1="32" Y1="20"  X2="32" Y2="0" >
                                    </p:ArrowLine>
                                    <ToggleButton 
                                                    Content="{DynamicResource Text_DownCylinder_Component}" 
                                                      ContentStringFormat="{}{0}-2"
                                                    />
                                </StackPanel>

                                <StackPanel Canvas.Left="365" Canvas.Top="200">
                                    <p:ArrowLine HorizontalAlignment="Center" 
                                        X1="0" Y1="20"  X2="0" Y2="0" >
                                    </p:ArrowLine>
                                    <ToggleButton />
                                </StackPanel>

                                <StackPanel Canvas.Left="505" Canvas.Top="220">
                                    <ToggleButton />
                                    <p:ArrowLine HorizontalAlignment="Center" 
                                        X1="0" Y1="0"  X2="0" Y2="30" >
                                    </p:ArrowLine>
                                </StackPanel>
-->


                                    </Canvas>
                                </Grid>
                            </Grid>

                            <!--       CustomRowFilterCommand="{Binding BoxPartsParameterVMRowFilterCommand }"-->
                            <dxg:GridControl 
                                Name="WorkGridControl"
                               Height="420"
                                Margin="10,0"
                                Grid.Column="1"

                                Background="Transparent"  MinHeight="420" 
                                Style="{StaticResource ProjectGridControl}" 
                                ItemsSource="{Binding IsAsync=True,
                                Source={x:Static GD_Singletons:StampingMachineSingleton.Instance}
                                ,Path=SelectedProjectDistributeVM.StampingBoxPartsVM.BoxPartsParameterVMObservableCollection}"
                                  >
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Loaded">
                                        <i:InvokeCommandAction Command="{Binding GridControlLoadedCommand}" 
                                                   PassEventArgsToCommand="True" />
                                    </i:EventTrigger>



                                    <i:EventTrigger EventName="SizeChanged">
                                        <i:InvokeCommandAction Command="{Binding GridControlSizeChangedCommand}" 
                                                   PassEventArgsToCommand="True" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>

                                <dxg:GridControl.View >
                                    <dxg:TableView   
                                                        SearchString="{Binding ElementName=ParameterSearchTextBox, Path=Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                        IsColumnMenuEnabled ="False"
                                                                    
                                        PageSize="{c:Binding  Path=ActualHeight/40 ,ElementName=WorkGridControl}"
                                        AllowPaging="True"
                                                        AllowSorting="false"
                                                        AllowColumnFiltering="False"
                                                        AllowColumnMoving="False"
                                                        AllowEditing="False"
                                                        ShowColumnHeaders="True"
                                                        HeaderHorizontalAlignment="Center"
                                                        VerticalScrollbarVisibility="Auto"
                                                        HorizontalScrollbarVisibility="Auto"
                                                        ShowHorizontalLines="False"     
                                                        ShowVerticalLines="False"
                                                        ShowGroupPanel="False"
                                                        ShowSearchPanelMode="Never"
                                                        SearchPanelNullText="Search Tasks(Ctrl + F)" 
                                                        SearchPanelFindMode="Always"
                                                        ShowIndicator="False"
                                                        SearchDelay="0"                            
                                                        AllowDragDrop="False"
                                                        AllowDrop="False"
                                                        ShowDragDropHint="False" 
                                                    >

                                    </dxg:TableView>
                                </dxg:GridControl.View>

                                <dxg:GridColumn  HorizontalHeaderContentAlignment="Left"  Header="{DynamicResource Text_ProjectName}" FieldName="ProjectID" Width="auto" AllowMoving="false"  IsSmart="True">
                                    <dxg:GridColumn.EditSettings>
                                        <dxe:TextEditSettings HorizontalContentAlignment="Left"/>
                                    </dxg:GridColumn.EditSettings>
                                </dxg:GridColumn>

                                <dxg:GridColumn  HorizontalHeaderContentAlignment="Left" Visible="False" Header="{DynamicResource Text_Box}" FieldName="BoxIndex" Width="auto" AllowMoving="false"  IsSmart="True">
                                    <dxg:GridColumn.EditSettings>
                                        <dxe:TextEditSettings HorizontalContentAlignment="Left"/>
                                    </dxg:GridColumn.EditSettings>
                                </dxg:GridColumn>


                                <dxg:GridColumn  
                            HorizontalHeaderContentAlignment="Left"  Header="{DynamicResource Text_MachiningForm}" FieldName="SettingBaseVM.NumberSettingMode"  Width="auto" AllowMoving="false"  IsSmart="True">
                                    <dxg:GridColumn.EditSettings>
                                        <dxe:TextEditSettings HorizontalContentAlignment="Left"/>
                                    </dxg:GridColumn.EditSettings>
                                </dxg:GridColumn>

                                <dxg:GridColumn  HorizontalHeaderContentAlignment="Left"  Header="{DynamicResource Text_Parameter_A}" FieldName="ParameterA" Width="auto" AllowMoving="false"  IsSmart="True">
                                    <dxg:GridColumn.EditSettings>
                                        <dxe:TextEditSettings HorizontalContentAlignment="Left"/>
                                    </dxg:GridColumn.EditSettings>
                                </dxg:GridColumn>
                                <dxg:GridColumn  HorizontalHeaderContentAlignment="Left"  Header="{DynamicResource Text_Parameter_B}" FieldName="ParameterB" Width="auto" AllowMoving="false"  IsSmart="True">
                                    <dxg:GridColumn.EditSettings>
                                        <dxe:TextEditSettings HorizontalContentAlignment="Left"/>
                                    </dxg:GridColumn.EditSettings>
                                </dxg:GridColumn>
                                <dxg:GridColumn  HorizontalHeaderContentAlignment="Left"  Header="{DynamicResource Text_Parameter_C_DataMartix}" FieldName="ParameterC" Width="auto" AllowMoving="false"  IsSmart="True">
                                    <dxg:GridColumn.EditSettings>
                                        <dxe:TextEditSettings HorizontalContentAlignment="Left"/>
                                    </dxg:GridColumn.EditSettings>
                                </dxg:GridColumn>




                                <dxg:GridColumn  
                            HorizontalHeaderContentAlignment="Left"  Width="auto" AllowMoving="false"  IsSmart="True">
                                    <dxg:GridColumn.EditSettings>
                                        <dxe:TextEditSettings HorizontalContentAlignment="Left"/>
                                    </dxg:GridColumn.EditSettings>
                                    <dxg:GridColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <ToggleButton Padding="0" Margin="1" x:Name="MachiningFormTButton">
                                                    <ToggleButton.Style>
                                                        <Style TargetType="ToggleButton" BasedOn="{StaticResource GD_MainToggleButton}">
                                                            <Setter Property="Width" Value="auto"/>
                                                            <Setter Property="Height" Value="auto"/>
                                                            <Setter Property="BorderThickness" Value="0"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="ToggleButton">
                                                                        <Grid>
                                                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                        </Grid>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Style.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="IsChecked" Value="True"/>
                                                                </Trigger>
                                                                <Trigger Property="IsChecked" Value="True">
                                                                    <Setter Property="Foreground" Value="Black"/>
                                                                    <Setter Property="Background" Value="{StaticResource ToggleButtonBackgroundSkyBlueBrush}"/>
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ToggleButton.Style>
                                                    <Grid  RenderTransformOrigin="0.5,0.5">
                                                        <Grid.LayoutTransform>
                                                            <ScaleTransform ScaleX="0.12" ScaleY="0.12"/>
                                                        </Grid.LayoutTransform>
                                                        <GD_SchematicDiagram:PlateRowDiagramViewUserControl
                            DataContext="{Binding Row.SettingBaseVM}" 
                           Visibility="{Binding Converter={GD_Common:ObjectIsEqualToVisibilityConverter IsTypeJudge=True} , ConverterParameter={x:Type GD_ParameterSettingViewModels:NumberSettingViewModel}}"
                            RedMeasurementLineVisibility="Collapsed"/>
                                                        <GD_SchematicDiagram:PlateRowDiagramWithQRViewUserControl
                            DataContext="{Binding Row.SettingBaseVM}" 
                                Visibility="{Binding Converter={GD_Common:ObjectIsEqualToVisibilityConverter IsTypeJudge=True} , ConverterParameter={x:Type GD_ParameterSettingViewModels:QRSettingViewModel}}"
                            RedMeasurementLineVisibility="Collapsed"/>
                                                    </Grid>
                                                </ToggleButton>

                                            </Grid>

                                        </DataTemplate>
                                    </dxg:GridColumn.CellTemplate>
                                </dxg:GridColumn>

                                <dxg:GridColumn  Header="{DynamicResource Text_FinishProgress}" FieldName="ProductProject.FinishProgress"
                                 Width="100" AllowMoving="false"  IsSmart="True" HorizontalHeaderContentAlignment="Center">
                                    <dxg:GridColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid Height="auto" Margin="2,5">
                                                <ProgressBar Value="{Binding Row.FinishProgress,UpdateSourceTrigger=PropertyChanged}"  
                                             BorderThickness="0" 
                                             Height="auto" Minimum="0" Maximum="100" Background="White" >
                                                    <ProgressBar.Foreground>
                                                        <Binding Path="Row.FinishProgress" Converter="{GD_Common:HundredDoubleToSolidBrushConverter}" FallbackValue="{StaticResource clr_DarkRed}"/>
                                                    </ProgressBar.Foreground>
                                                </ProgressBar>

                                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal" >
                                                    <TextBlock Foreground="Black"
                                        Text="{c:Binding Row.FinishProgress/100 ,UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:P1}}"  />
                                                </StackPanel>
                                            </Grid>
                                        </DataTemplate>
                                    </dxg:GridColumn.CellTemplate>
                                </dxg:GridColumn>
                                <dxg:GridColumn Visible="{Binding MachiningStatusIsVisible}"
                HorizontalHeaderContentAlignment="Left"  Header="{DynamicResource Text_MachiningStatus}" FieldName="ProjectName" Width="auto" AllowMoving="false"  IsSmart="True">
                                    <dxg:GridColumn.CellTemplate>
                                        <DataTemplate>
                                            <Border Background="{Binding Row.MachiningStatus, Converter={GD_StampingMachine:EnumToBrushesConverter}}"  
                                Width="20" 
                                Height="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}" 
                                CornerRadius="{c:Binding RelativeSource={RelativeSource Self}, Path=ActualWidth/2}"/>
                                        </DataTemplate>
                                    </dxg:GridColumn.CellTemplate>
                                </dxg:GridColumn>

                            </dxg:GridControl>




                        </StackPanel>
                </ScrollViewer>
            </materialDesign:Card>
                <!-- IsEnabled="{Binding StampMachineData.IsConnected}"-->
                <WrapPanel Orientation="Horizontal" IsEnabled="{Binding Source={x:Static GD_Singletons:StampMachineDataSingleton.Instance}, Path=IsConnected}">
                    <WrapPanel.Resources>
                    <Style TargetType="GroupBox" BasedOn="{StaticResource ParameterBaseStyleGroupBox}">
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
                            <Style.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.4"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                </WrapPanel.Resources>
                    <StackPanel>
                    <GroupBox Header="{DynamicResource Text_OilPressure_Motor}">
                        <StackPanel>
                            <Button  Command="{Binding StampMachineData.ActiveHydraulicPumpMotor}">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource SiegCustomButton}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding StampMachineData.HydraulicPumpIsActive}" Value="true">
                                                <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundSkyBlueBrush}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </StackPanel>
                    </GroupBox>

                        <GroupBox  Header="{DynamicResource btnDescription_ReturningToOriginPoint}">
                            <StackPanel>
                                <Button  Command="{Binding StampMachineData.ReturnToOriginCommand}">
                                </Button>
                            </StackPanel>

                        </GroupBox>
                        <GroupBox  Header="{DynamicResource Reset}">
                            <StackPanel>
                                <Button  Command="{Binding StampMachineData.ResetCommand}">
                                </Button>
                            </StackPanel>

                        </GroupBox>

                        <GroupBox  Header="{DynamicResource btn_CycleStart}">
                            <StackPanel>
                                <Button  Command="{Binding StampMachineData.CycleStartCommand}">
                                </Button>
                            </StackPanel>

                        </GroupBox>



                    </StackPanel>
                    <GroupBox Header="{DynamicResource textCurrentMode}">
                        <StackPanel>
                            <Button Command="{Binding StampMachineData.SetOperationModeCommand}" CommandParameter="{x:Static GD_Enum:OperationModeEnum.Setup}"
                                Content="{materialDesign:PackIcon Kind=Manufacturing}">
                          <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource SiegCustomButton}">
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition  Binding="{Binding Source={x:Static GD_Singletons:StampMachineDataSingleton.Instance}, Path=IsConnected}" 
                                                     Value="true" />
                                                    <Condition  Binding="{Binding Source={x:Static GD_Singletons:StampMachineDataSingleton.Instance}, Path=OperationMode}" 
                                                     Value="{x:Static GD_Enum:OperationModeEnum.Setup}" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background"  Value="{DynamicResource ToggleButtonBackgroundSkyBlueBrush}"/>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button Command="{Binding StampMachineData.SetOperationModeCommand}" CommandParameter="{x:Static GD_Enum:OperationModeEnum.Manual}"
                                Content="{materialDesign:PackIcon Kind=Braille}">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource SiegCustomButton}">
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition  Binding="{Binding Source={x:Static GD_Singletons:StampMachineDataSingleton.Instance}, Path=IsConnected}" 
                                                     Value="true" />
                                                    <Condition Binding="{Binding Source={x:Static GD_Singletons:StampMachineDataSingleton.Instance}, Path=OperationMode}" 
                                                     Value="{x:Static GD_Enum:OperationModeEnum.Manual}"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background"  Value="{DynamicResource ToggleButtonBackgroundSkyBlueBrush}"/>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button Command="{Binding StampMachineData.SetOperationModeCommand}" CommandParameter="{x:Static GD_Enum:OperationModeEnum.HalfAutomatic}"
                                Content="{materialDesign:PackIcon Kind=ProgressStarFourPoints}">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource SiegCustomButton}">
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition  Binding="{Binding Source={x:Static GD_Singletons:StampMachineDataSingleton.Instance}, Path=IsConnected}" 
                                                     Value="true" />
                                                    <Condition Binding="{Binding Source={x:Static GD_Singletons:StampMachineDataSingleton.Instance}, Path=OperationMode}" 
                                                     Value="{x:Static GD_Enum:OperationModeEnum.HalfAutomatic}"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background"  Value="{DynamicResource ToggleButtonBackgroundSkyBlueBrush}"/>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button  Command="{Binding StampMachineData.SetOperationModeCommand}" CommandParameter="{x:Static GD_Enum:OperationModeEnum.FullAutomatic}"
                                Content="{materialDesign:PackIcon Kind=RefreshAuto}">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource SiegCustomButton}">
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition  Binding="{Binding Source={x:Static GD_Singletons:StampMachineDataSingleton.Instance}, Path=IsConnected}" 
                                                     Value="true" />
                                                    <Condition Binding="{Binding Source={x:Static GD_Singletons:StampMachineDataSingleton.Instance}, Path=OperationMode}" 
                                                     Value="{x:Static GD_Enum:OperationModeEnum.FullAutomatic}"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background"  Value="{DynamicResource ToggleButtonBackgroundSkyBlueBrush}"/>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>






                        </StackPanel>
                    </GroupBox>
                    
                    
                    
                    
                    <GroupBox Header="{DynamicResource Text_Feeding_Component}" Visibility="{Binding Feeding_Component_Button_IsChecked, Converter={dx:BooleanToVisibilityConverter}}">
                    <WrapPanel Orientation="Horizontal">


                            <GroupBox Header="{DynamicResource Text_XAxis_Motor}">
                                <StackPanel>
                            <materialDesign:ColorZone CornerRadius="2" Padding="1">
                                <StackPanel Orientation="Horizontal">
                                            <Button Style="{StaticResource GD_RepeatButton}"  
                                             Content="{materialDesign:PackIcon Kind=ArrowLeftBoldBoxOutline, Size=30}">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="PreviewMouseDown">
                                                        <i:InvokeCommandAction Command="{Binding StampMachineData.FeedingXAxisBwdCommand}" CommandParameter="{StaticResource TrueValue}"/>
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="PreviewMouseUp">
                                                        <i:InvokeCommandAction Command="{Binding StampMachineData.FeedingXAxisBwdCommand}" CommandParameter="{StaticResource FalseValue}"/>
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="MouseLeave">
                                                        <i:InvokeCommandAction Command="{Binding StampMachineData.FeedingXAxisBwdCommand}" CommandParameter="{StaticResource FalseValue}"/>
                                                    </i:EventTrigger>

                                                </i:Interaction.Triggers>
                                            </Button>
                                            <Border Margin="5,0"/>
                                            <Button Style="{StaticResource GD_RepeatButton}"    
                                              Content="{materialDesign:PackIcon Kind=ArrowRightBoldBoxOutline, Size=30}">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="PreviewMouseDown">
                                                        <i:InvokeCommandAction Command="{Binding StampMachineData.FeedingXAxisFwdCommand}" CommandParameter="{StaticResource TrueValue}"/>
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="PreviewMouseUp">
                                                        <i:InvokeCommandAction Command="{Binding StampMachineData.FeedingXAxisFwdCommand}" CommandParameter="{StaticResource FalseValue}"/>
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="MouseLeave">
                                                        <i:InvokeCommandAction Command="{Binding StampMachineData.FeedingXAxisFwdCommand}" CommandParameter="{StaticResource FalseValue}"/>
                                                    </i:EventTrigger>

                                                </i:Interaction.Triggers>
                                            </Button>
                            </StackPanel>
                                    </materialDesign:ColorZone>

                                    <TextBlock Text="{Binding Path=StampMachineData.FeedingPosition , StringFormat={}{0:F3} }" Margin="0,2"/>
                                    <TextBox Text="123" Margin="0,2"/>
                                    <ToggleButton Style="{StaticResource GD_ToggleButton_White}">
                                        <materialDesign:PackIcon Kind="AxisYArrow" Height="30" Width="30"/>
                                    </ToggleButton>
                                    <ToggleButton Style="{StaticResource GD_ToggleButton_White}">
                                        <Image Source="{StaticResource MainIcon_06_ReturningToOriginPoint_DrawingImage_Mono}" Width="30" Height="30"/>
                                    </ToggleButton>
                                    
                                </StackPanel>
                            </GroupBox>

                        <GroupBox Header="{DynamicResource Text_DoubleGuideRodPneumaticCylinder}" HeaderStringFormat="{}{0}-1" >
                            <GD_StampingMachine_UserControls:CylinderUserControl  HorizontalAlignment="left"
                                CylinderUpIsActived="False"
                                                            
                                 MiddlePreviewMouseLeftButtonDownCommand="{Binding StampMachineData.GuideRod_Move_Up_Command}"           
                                 MiddleMiddlePreviewMouseLeftButtonUpCommand="{Binding StampMachineData.GuideRod_Move_Up_Command}"                        
                                 MiddlePreviewMouseLeftButtonDownCommandParameter="{StaticResource TrueValue}"           
                                 MiddleMiddlePreviewMouseLeftButtonUpCommandParameter="{StaticResource  FalseValue}"                         
                                                                                  
                                CylinderIsMiddleSingal_IsTriggered="{Binding StampMachineData.Cylinder_GuideRod_Move_IsUp}" 
                                CylinderMiddleIsActived="True"
                                CylinderMiddle_IsEnabled="{Binding Cylinder_1_Middle_IsEnabled}"
                                
                                
                             DownPreviewMouseLeftButtonDownCommand="{Binding StampMachineData.GuideRod_Move_Down_Command}"           
                                 DownPreviewMouseLeftButtonUpCommand="{Binding StampMachineData.GuideRod_Move_Down_Command}"                        
                                 DownPreviewMouseLeftButtonDownCommandParameter="{StaticResource TrueValue}"           
                                 DownPreviewMouseLeftButtonUpCommandParameter="{StaticResource  FalseValue}"                                 
                                                                                  
                                                                                  
                                CylinderIsDownSingal_IsTriggered="{Binding StampMachineData.Cylinder_GuideRod_Move_IsDown}" 
                                CylinderDownIsActived="True" 
                                CylinderDown_IsEnabled="{Binding Cylinder_1_Down_IsEnabled}"
                                CylinderIsSingalPackIconForeground="Green" CylinderIsSingalPackIcon="AccessPoint"
                                />
                            </GroupBox>
                            <GroupBox Header="{DynamicResource Text_DoubleGuideRodPneumaticCylinder}" HeaderStringFormat="{}{0}-2">
                                <GD_StampingMachine_UserControls:CylinderUserControl 
                                 CylinderUpIsActived="False"
                                    
                                 CylinderMiddleCommand="{Binding StampMachineData.GuideRod_Fixed_Up_Command}"   
                                    
                               CylinderIsMiddleSingal_IsTriggered ="{Binding StampMachineData.Cylinder_GuideRod_Fixed_IsUp}"
                                
                                 CylinderDownCommand="{Binding StampMachineData.GuideRod_Fixed_Down_Command}"   

                               CylinderIsDownSingal_IsTriggered="{Binding StampMachineData.Cylinder_GuideRod_Fixed_IsDown}"

                                
                                CylinderIsSingalPackIconForeground="Green" CylinderIsSingalPackIcon="AccessPoint" HorizontalAlignment="Left"
                                />
                            </GroupBox>

                            <GroupBox Header="{DynamicResource Text_DownCylinder_Component}" HeaderStringFormat="{}{0}-2">
                                <GD_StampingMachine_UserControls:CylinderUserControl 
                           
                                    
                                    
                                CylinderMiddleCommand="{Binding StampMachineData.QRStamping_Up_Command}"   
                                    CylinderUpIsActived="False"
                               CylinderIsMiddleSingal_IsTriggered ="{Binding StampMachineData.Cylinder_QRStamping_IsUp}"
                             CylinderMiddle_IsEnabled ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderIsMiddleSingal_IsTriggered, Converter={dx:BoolInverseConverter}}"
                                
                                 CylinderDownCommand="{Binding StampMachineData.QRStamping_Down_Command}"   
                                  
                               CylinderIsDownSingal_IsTriggered ="{Binding StampMachineData.Cylinder_QRStamping_IsDown}"
                             CylinderDown_IsEnabled ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderIsDownSingal_IsTriggered, Converter={dx:BoolInverseConverter}}"

                                
                                CylinderIsSingalPackIconForeground="Green" CylinderIsSingalPackIcon="AccessPoint" HorizontalAlignment="Left"
                                />
                            </GroupBox>


                            <GroupBox Header="{DynamicResource Text_BlockCylinder}" HeaderStringFormat="{}{0}">
                                <GD_StampingMachine_UserControls:CylinderUserControl 
                                 CylinderUpIsActived="False"
                               
                               CylinderMiddleCommand="{Binding StampMachineData.BlockingCylinder_Up_Command}"   
                                    
                               CylinderIsMiddleSingal_IsTriggered ="{Binding StampMachineData.Cylinder_BlockingCylinder_IsUp}"
                               CylinderMiddle_IsEnabled ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderIsMiddleSingal_IsTriggered, Converter={dx:BoolInverseConverter}}"
                                
                               CylinderDownCommand="{Binding StampMachineData.BlockingCylinder_Down_Command}"   
                                    
                               CylinderIsDownSingal_IsTriggered ="{Binding StampMachineData.Cylinder_BlockingCylindere_IsDown}"
                               CylinderDown_IsEnabled ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderIsDownSingal_IsTriggered, Converter={dx:BoolInverseConverter}}"

                               CylinderIsSingalPackIconForeground="Green" CylinderIsSingalPackIcon="AccessPoint" HorizontalAlignment="Left"
                                />
                            </GroupBox>


                        </WrapPanel>
                    </GroupBox>
                    <GroupBox Header="{DynamicResource Text_QRCode_Component}" Visibility="{Binding QRCode_Component_Button_IsChecked, Converter={dx:BooleanToVisibilityConverter}}">
                        <Grid Margin="0,10">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>

                            <ComboBox Grid.Row="0"
                                        Margin="10,0,10,10" Padding="0" Width="auto"   MaxDropDownHeight="275"
                                      
                                        ItemsSource="{Binding Path=ParameterSettingVM.QRSettingPageVM.QRSettingModelCollection}"
                                      >
                                
                                <ComboBox.Style>
                                    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource GD_ComboBox}">
                                        <Setter Property="ItemTemplate">
                                            <Setter.Value>
                                                <DataTemplate >
                                                    <Grid>
                                                        <Grid Margin="5,0,5,5">
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="auto"/>
                                                                <RowDefinition/>
                                                            </Grid.RowDefinitions>
                                                            <TextBlock Text="{Binding NumberSettingMode}" Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
                                                            <StackPanel Grid.Row="1" Orientation="Horizontal" >
                                                                <Grid 
                                                            RenderTransformOrigin="0.0,0.0" >
                                                                    <Grid.LayoutTransform>
                                                                        <ScaleTransform ScaleX="0.20" ScaleY="0.20" />
                                                                    </Grid.LayoutTransform>
                                                                    <StackPanel>
                                                                        <GD_SchematicDiagram:PlateRowDiagramViewUserControl DataContext="{Binding }"
                                                                                                                                 Visibility="{Binding Converter={GD_Common:ObjectIsEqualToVisibilityConverter IsTypeJudge=True} , ConverterParameter={x:Type GD_ParameterSettingViewModels:NumberSettingViewModel}}"
                                                                                                                                RedMeasurementLineVisibility="Collapsed" />
                                                                        <GD_SchematicDiagram:PlateRowDiagramWithQRViewUserControl DataContext="{Binding }" 
                                                                                                                                          Visibility="{Binding Converter={GD_Common:ObjectIsEqualToVisibilityConverter IsTypeJudge=True} , ConverterParameter={x:Type GD_ParameterSettingViewModels:QRSettingViewModel}}"
                                                                                                                                      RedMeasurementLineVisibility="Collapsed" />

                                                                    </StackPanel>

                                                                </Grid>
                                                            </StackPanel>
                                                        </Grid>
                                                    </Grid>
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ComboBox.Style>
                            </ComboBox>

                            <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="5,0">
                                <RadioButton Name="PlayButton"  IsEnabled="{Binding ElementName=StopButton ,Path=IsChecked}"
                                        Style="{StaticResource Sieg_CylinderToggleButton}" Grid.Column="0" Grid.Row="1"  Width="40" Height="40" >
                                    <materialDesign:PackIcon Kind="Play" Width="auto" Height="auto"/>
                                </RadioButton>
                                <RadioButton Name="StopButton" IsEnabled="{Binding ElementName=PlayButton ,Path=IsChecked}"
                                        Style="{StaticResource Sieg_CylinderToggleButton}" Grid.Column="1" Grid.Row="1"  Width="40" Height="40">
                                    <materialDesign:PackIcon Kind="Pause" Width="auto" Height="auto"/>
                                </RadioButton>
                            </StackPanel>

                        </Grid>
                    </GroupBox>

                    <GroupBox
                        Header="{DynamicResource Text_Stamping_Component}" Visibility="{Binding Stamping_Component_Button_IsChecked, Converter={dx:BooleanToVisibilityConverter}}">
                    <StackPanel>
                        
                    <ComboBox  DisplayMemberPath="StampingTypeString"  Width="150" 
                Style="{StaticResource GD_ComboBox}" 
                               SelectedValue="{Binding Path=StampingFontChangedVM.StampingTypeModel_ReadyStamping}"
                               ItemsSource="{Binding Path=StampingFontChangedVM.StampingTypeVMObservableCollection}"    
 
                               />
                     
                        <StackPanel Orientation="Horizontal">
                                <GroupBox Header="{DynamicResource Text_YAxis_Motor}" >
                                    <StackPanel>
                                        <materialDesign:ColorZone CornerRadius="2" Padding="1" HorizontalAlignment="Center">

                                        <StackPanel Orientation="Horizontal">

                                                <Button Style="{StaticResource GD_RepeatButton}" 
                                              Content="{materialDesign:PackIcon Kind=ArrowBottomLeftBoldBoxOutline, Size=30}">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="PreviewMouseDown">
                                                            <i:InvokeCommandAction Command="{Binding StampMachineData.EngravingYAxisFwdCommand}" CommandParameter="{StaticResource TrueValue}"/>
                                                        </i:EventTrigger>
                                                        <i:EventTrigger EventName="PreviewMouseUp">
                                                            <i:InvokeCommandAction Command="{Binding StampMachineData.EngravingYAxisFwdCommand}" CommandParameter="{StaticResource FalseValue}"/>
                                                        </i:EventTrigger>

                                                        <i:EventTrigger EventName="MouseLeave">
                                                            <i:InvokeCommandAction Command="{Binding StampMachineData.EngravingYAxisFwdCommand}" CommandParameter="{StaticResource FalseValue}"/>
                                                        </i:EventTrigger>


                                                    </i:Interaction.Triggers>
                                                </Button>
                                                <Button Style="{StaticResource GD_RepeatButton}"   Command="{Binding StampMachineData.EngravingYAxisToStandbyPosCommand}" CommandParameter="{StaticResource TrueValue}"
                                             Content="{materialDesign:PackIcon Kind=CheckboxBlankOutline, Size=30}"/>
                                            
                                                <Button Style="{StaticResource GD_RepeatButton}" 
                                             Content="{materialDesign:PackIcon Kind=ArrowTopRightBoldBoxOutline, Size=30}">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="PreviewMouseDown">
                                                            <i:InvokeCommandAction Command="{Binding StampMachineData.EngravingYAxisBwdCommand}" CommandParameter="{StaticResource TrueValue}"/>
                                                        </i:EventTrigger>
                                                        <i:EventTrigger EventName="PreviewMouseUp">
                                                            <i:InvokeCommandAction Command="{Binding StampMachineData.EngravingYAxisBwdCommand}" CommandParameter="{StaticResource FalseValue}"/>
                                                        </i:EventTrigger>

                                                        <i:EventTrigger EventName="MouseLeave">
                                                            <i:InvokeCommandAction Command="{Binding StampMachineData.EngravingYAxisBwdCommand}" CommandParameter="{StaticResource FalseValue}"/>
                                                        </i:EventTrigger>




                                                    </i:Interaction.Triggers>

                                                </Button>

                                            </StackPanel>
                                        </materialDesign:ColorZone>
                                        <TextBlock Text="{Binding Path=StampMachineData.EngravingYAxisPosition}" Margin="0,2" HorizontalAlignment="Center"/>

                                    </StackPanel>
                                </GroupBox>

                            <GroupBox Header="{DynamicResource Text_Stamping_ZAxis_Component}">
                                    <StackPanel Orientation="Horizontal">
                                <GD_StampingMachine_UserControls:CylinderUserControl 
   
                                          UpPreviewMouseLeftButtonDownCommand="{Binding StampMachineData.HydraulicEngraving_Up_Command}"
                                          UpPreviewMouseLeftButtonDownCommandParameter="{StaticResource TrueValue}"
                                          UpPreviewMouseLeftButtonUpCommand="{Binding StampMachineData.HydraulicEngraving_Up_Command}"
                                          UpPreviewMouseLeftButtonUpCommandParameter="{StaticResource FalseValue}"

                                    
                                    CylinderIsUpSingal_IsTriggered ="{Binding StampMachineData.Cylinder_HydraulicEngraving_IsOrigin}"
                             CylinderUp_IsEnabled ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderIsUpSingal_IsTriggered, Converter={dx:BoolInverseConverter}}"                      
                                    
                 
                             CylinderIsMiddleSingal_IsTriggered ="{Binding StampMachineData.Cylinder_HydraulicEngraving_IsStandbyPoint}"
                             CylinderMiddle_IsEnabled ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderIsMiddleSingal_IsTriggered, Converter={dx:BoolInverseConverter}}"
                    
                                           DownPreviewMouseLeftButtonDownCommand="{Binding StampMachineData.HydraulicEngraving_Down_Command}"
                                          DownPreviewMouseLeftButtonDownCommandParameter="{StaticResource TrueValue}"
                                          DownPreviewMouseLeftButtonUpCommand="{Binding StampMachineData.HydraulicEngraving_Down_Command}"
                                          DownPreviewMouseLeftButtonUpCommandParameter="{StaticResource FalseValue}"
                                    
                               CylinderIsDownSingal_IsTriggered ="{Binding StampMachineData.Cylinder_HydraulicEngraving_IsStopDown}"
                             CylinderDown_IsEnabled ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderIsDownSingal_IsTriggered, Converter={dx:BoolInverseConverter}}"

                                CylinderIsSingalPackIconForeground="Green" CylinderIsSingalPackIcon="AccessPoint" HorizontalAlignment="Left"
                                />
                                        <TextBlock Text="{Binding StampMachineData.EngravingZAxisPosition}"/>
                                    </StackPanel>
                            </GroupBox>

                                <GroupBox Header="{DynamicResource Text_DownCylinder_Component}" HeaderStringFormat="{}{0}">
                                    <GD_StampingMachine_UserControls:CylinderUserControl 

                                        
                                        UpPreviewMouseLeftButtonDownCommand="{Binding StampMachineData.StampingSeat_Up_Command}"
                                         UpPreviewMouseLeftButtonDownCommandParameter="{StaticResource TrueValue}"
                                          UpPreviewMouseLeftButtonUpCommand="{Binding StampMachineData.StampingSeat_Up_Command}"
                                               UpPreviewMouseLeftButtonUpCommandParameter="{StaticResource FalseValue}"
                                        
                                        
                                        
                               CylinderIsUpSingal_IsTriggered ="{Binding StampMachineData.Cylinder_StampingSeat_IsUp}"
                             CylinderUp_IsEnabled ="{Binding StampMachineData.Cylinder_StampingSeat_IsUp, Converter={dx:BoolInverseConverter}}"
                                                               
                                        CylinderMiddleIsActived="False"
                                        
                                        
                                        
                               CylinderIsDownSingal_IsTriggered="{Binding StampMachineData.Cylinder_StampingSeat_IsDown}"
                             CylinderDown_IsEnabled ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderIsDownSingal_IsTriggered, Converter={dx:BoolInverseConverter}}"
                                
                                        
                                        DownPreviewMouseLeftButtonDownCommand="{Binding StampMachineData.StampingSeat_Down_Command}"
                                          DownPreviewMouseLeftButtonDownCommandParameter="{StaticResource TrueValue}"
                                          DownPreviewMouseLeftButtonUpCommand="{Binding StampMachineData.StampingSeat_Down_Command}"
                                          DownPreviewMouseLeftButtonUpCommandParameter="{StaticResource FalseValue}"
                                        
                                CylinderIsSingalPackIconForeground="Green" CylinderIsSingalPackIcon="AccessPoint" HorizontalAlignment="Left"
                                />
                                </GroupBox>

                            </StackPanel>

                            <GroupBox Header="{DynamicResource Text_Stamping_Rotate_Component}">
                                <Border Background="White" HorizontalAlignment="Left" CornerRadius="5">
                                <StackPanel Orientation="Horizontal">
                                        <Button Style="{StaticResource GD_RepeatButton}"  
                                   >
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="PreviewMouseDown">
                                                    <i:InvokeCommandAction Command="{Binding StampMachineData.EngravingRotateClockwiseCommand}" CommandParameter="{StaticResource TrueValue}"/>
                                                </i:EventTrigger>
                                                <i:EventTrigger EventName="PreviewMouseUp">
                                                    <i:InvokeCommandAction Command="{Binding StampMachineData.EngravingRotateClockwiseCommand}" CommandParameter="{StaticResource FalseValue}"/>
                                                </i:EventTrigger>
                                                <i:EventTrigger EventName="MouseLeave">
                                                    <i:InvokeCommandAction Command="{Binding StampMachineData.EngravingRotateClockwiseCommand}" CommandParameter="{StaticResource FalseValue}"/>
                                                </i:EventTrigger>

                                                
                                            </i:Interaction.Triggers>
                                            <Grid>
                                                <materialDesign:PackIcon Kind="ArrowURightTop" Width="20" Height="20" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                <materialDesign:PackIcon Kind="CheckboxBlankOutline" Width="30" Height="30"/>
                                            </Grid>
                                            
                                            
                                        </Button>
                                        <Button Style="{StaticResource GD_RepeatButton}"  Visibility="Collapsed"
                                             Content="{materialDesign:PackIcon Kind=CheckboxBlankOutline, Size=30}"/>
                                    
                                        <Button Style="{StaticResource GD_RepeatButton}"   
                                            >
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="PreviewMouseDown">
                                                    <i:InvokeCommandAction Command="{Binding StampMachineData.EngravingRotateCounterClockwiseCommand}" CommandParameter="{StaticResource TrueValue}"/>
                                                </i:EventTrigger>
                                                <i:EventTrigger EventName="PreviewMouseUp">
                                                    <i:InvokeCommandAction Command="{Binding StampMachineData.EngravingRotateCounterClockwiseCommand}" CommandParameter="{StaticResource FalseValue}"/>
                                                </i:EventTrigger>
                                                <i:EventTrigger EventName="MouseLeave">
                                                    <i:InvokeCommandAction Command="{Binding StampMachineData.EngravingRotateCounterClockwiseCommand}" CommandParameter="{StaticResource FalseValue}"/>
                                                </i:EventTrigger>
                                                

                                            </i:Interaction.Triggers>


                                            <Grid>
                                                <materialDesign:PackIcon Kind="ArrowULeftTop" Width="20" Height="20" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                <materialDesign:PackIcon Kind="CheckboxBlankOutline" Width="30" Height="30"/>
                                            </Grid>
                                        </Button>

                                        <TextBlock Text="{Binding StampMachineData.EngravingRotateStation}" Foreground="Black" VerticalAlignment="Center"/>

                                    </StackPanel>
                                </Border>
                            </GroupBox>
                            <GroupBox Header="{StaticResource Text_SteelPunchedFontSetting}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock VerticalAlignment="Center" Grid.Column="0" Grid.Row="0" Text="{DynamicResource Text_FirstLine }" Margin="2"/>
                                    <TextBlock VerticalAlignment="Center" Grid.Column="0" Grid.Row="1" Text="{DynamicResource Text_SecondLine}"  Margin="2"/>

                                    <TextBlock VerticalAlignment="Center" Grid.Column="1" Grid.Row="0" Text="{Binding StampMachineData.HMIIronPlateDataModel.sIronPlateName1}"  Margin="2"/>
                                    <TextBlock VerticalAlignment="Center" Grid.Column="1" Grid.Row="1" Text="{Binding StampMachineData.HMIIronPlateDataModel.sIronPlateName2}"  Margin="2"/>
                                    <TextBlock VerticalAlignment="Center" Grid.Column="1" Grid.Row="0" Text="{Binding StampMachineData.HMIIronPlateDataModel.sDataMatrixName1}"  Margin="2"/>
                                    <TextBlock VerticalAlignment="Center" Grid.Column="1" Grid.Row="1" Text="{Binding StampMachineData.HMIIronPlateDataModel.sDataMatrixName2}"  Margin="2"/>

                                </Grid>
                            </GroupBox>

                        </StackPanel>
                </GroupBox>

                <GroupBox Header="{DynamicResource Text_ShearCut_Component_Hydraulic}" Visibility="{Binding ShearCut_Component_Button_IsChecked, Converter={dx:BooleanToVisibilityConverter}}">
                    <StackPanel>
                            <GD_StampingMachine_UserControls:CylinderUserControl 
                                
                                      
                               UpPreviewMouseLeftButtonDownCommand="{Binding StampMachineData.HydraulicCutting_Up_Command}"   
                               UpPreviewMouseLeftButtonUpCommand="{Binding StampMachineData.HydraulicCutting_Up_Command}"                                                       
                               UpPreviewMouseLeftButtonDownCommandParameter="{StaticResource TrueValue}"
                               UpPreviewMouseLeftButtonUpCommandParameter="{StaticResource FalseValue}"      
                                
                             CylinderIsUpSingal_IsTriggered="{Binding StampMachineData.Cylinder_HydraulicCutting_IsOrigin}"
                        CylinderIsMiddleSingal_IsTriggered="{Binding StampMachineData.Cylinder_HydraulicCutting_IsStandbyPoint}"
         
                               DownPreviewMouseLeftButtonDownCommand="{Binding StampMachineData.HydraulicCutting_Down_Command}"   
                               DownPreviewMouseLeftButtonUpCommand="{Binding StampMachineData.HydraulicCutting_Down_Command}"                                                       
                               DownPreviewMouseLeftButtonDownCommandParameter="{StaticResource TrueValue}"
                               DownPreviewMouseLeftButtonUpCommandParameter="{StaticResource FalseValue}"      
                                
                               CylinderIsDownSingal_IsTriggered ="{Binding StampMachineData.Cylinder_HydraulicCutting_IsCutPoint}"

                                CylinderIsSingalPackIconForeground="Green" CylinderIsSingalPackIcon="AccessPoint" HorizontalAlignment="Left"
                                >

                                
                            </GD_StampingMachine_UserControls:CylinderUserControl>
                            <ToggleButton Margin="5,10" HorizontalAlignment="Left"
                                        Style="{StaticResource Sieg_CylinderToggleButton}" Grid.Column="0" Grid.Row="1"  Width="40" Height="40" >
                            <materialDesign:PackIcon Kind="ScissorsCutting" Width="auto" Height="auto"/>
                        </ToggleButton>
                    </StackPanel>
                </GroupBox>

                <GroupBox Header="{DynamicResource Text_Separator_Component}" Visibility="{Binding Separator_Component_Button_IsChecked, Converter={dx:BooleanToVisibilityConverter}}">
                    <StackPanel>
                            <Grid>
                                
                                
                                
                                
                                <Border Background="Transparent" CornerRadius="125" Margin="5" 
                                        BorderThickness="1"
                                        BorderBrush="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
                                <ListBox Width="250" Height="250" Margin="10"
                             ItemsSource="{Binding ParameterSettingVM.SeparateSettingVM.SeparateBoxVMObservableCollection}">
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="Height" Value="40"/>
                                <Setter Property="Width" Value="60"/>
                                        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
                                        <Setter Property="Background" Value="{DynamicResource PrimaryHueDarkBrush}"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
                                        <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ListBoxItem" >
                                            <Border x:Name="RadiaListBoxItemBorder" RenderTransformOrigin="0.5,0.5">
                                                <Grid VerticalAlignment="Bottom">
                                                            <Border BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush }"
                                                        Background="{TemplateBinding Background }" CornerRadius="5" >
                                                            </Border>

                                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center"  VerticalAlignment="Center">
                                                        <TextBlock FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                                   Text="{DynamicResource Text_Box}" Foreground="{TemplateBinding Foreground}"/>
                                                    <TextBlock FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,2" 
                                                               Foreground="{TemplateBinding Foreground}">
                                                                        <TextBlock.Text>
                                                            <MultiBinding StringFormat="{}{0}">
                                                                <Binding Path="BoxIndex"/>
                                                            </MultiBinding>
                                                        </TextBlock.Text>
                                                    </TextBlock>
                                                    </StackPanel>
                                                </Grid>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger 
                            Binding="{Binding IsUsing}" Value="True">
                                                <Setter Property="Background" Value="DarkRed"/>
                                            </DataTrigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Orange"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="#00Bfff"/>
                                    </Trigger>
                                            <DataTrigger 
                            Binding="{Binding BoxIsEnabled}" Value="False">
                                                <Setter Property="Opacity" Value="0.5"/>
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <DataTrigger 
                            Binding="{Binding BoxIsEnabled}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>

                                        </Style.Triggers>

                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <GD_Views:RadialPanel
                                        d:DataContext="{d:DesignInstance Type=GD_ViewModels:MachineFunctionViewModel}"
                                        DataContext="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" 
                                        RotationDirection="Clockwise"
                                        StartAngle="90" RotateAngle="{Binding StampMachineData.SeparateBox_RotateAngle}"  RoundAngle="360"
                                        ItemRotateAngle="-90"  />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        </ListBox>
                            </Grid>
                            <Grid IsEnabled="{Binding IsRotating, Converter={dx:BoolInverseConverter}}">
                                <Button Margin="5,10" HorizontalAlignment="Left" VerticalAlignment="Bottom"
                                        Command="{Binding SeparateBox_CounterClockwiseRotateCommand}" 
                                        Style="{StaticResource GD_RepeatButton}" Grid.Column="0" Grid.Row="1"  Width="40" Height="40" >
                                <materialDesign:PackIcon Kind="ArrowURightTop" Width="auto" Height="auto"/>
                            </Button>
                                <Button Margin="5,10" HorizontalAlignment="Right" VerticalAlignment="Bottom"
                                        Command="{Binding SeparateBox_ClockwiseRotateCommand}" 
                                        Style="{StaticResource GD_RepeatButton}" Grid.Column="0" Grid.Row="1"  Width="40" Height="40" >
                                <materialDesign:PackIcon Kind="ArrowULeftTop" Width="auto" Height="auto"/>
                            </Button>
                        </Grid>
                    </StackPanel>
                </GroupBox>
            </WrapPanel>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</UserControl>
