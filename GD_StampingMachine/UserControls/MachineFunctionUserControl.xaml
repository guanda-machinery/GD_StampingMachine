<UserControl x:Class="GD_StampingMachine.UserControls.MachineFunctionUserControl"    
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                       xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
             xmlns:local="clr-namespace:GD_StampingMachine.UserControls"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             
            xmlns:GD_ParameterSettingViewModels="clr-namespace:GD_StampingMachine.ViewModels.ParameterSetting" 
             xmlns:GD_Enum="clr-namespace:GD_StampingMachine.GD_Enum;assembly=GD_StampingMachine.GD_Enum"
             xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" 
             xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" 
             xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" 
             
             xmlns:GD_ViewModels="clr-namespace:GD_StampingMachine.ViewModels"                
             xmlns:GD_Common="clr-namespace:GD_CommonLibrary;assembly=GD_CommonLibrary"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors" 
             xmlns:GD_StampingMachine_UserControls="clr-namespace:GD_StampingMachine.UserControls"
             xmlns:Diagram="http://schemas.devexpress.com/winfx/2008/xaml/diagram" xmlns:p="clr-namespace:Petzold.Media2D;assembly=Arrowheads" 

             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:GD_Popup="clr-namespace:GD_CommonLibrary.GD_Popup;assembly=GD_CommonLibrary" xmlns:GD_Customcontrols="clr-namespace:GD_StampingMachine.UserControls.CustomControls" xmlns:GD_Views="clr-namespace:GD_StampingMachine.Views" xmlns:GD_SchematicDiagram="clr-namespace:GD_StampingMachine.UserControls.NumberSettingSchematicDiagram"
             d:DataContext="{d:DesignInstance Type=GD_ViewModels:MachineFunctionViewModel}"

             >
    <Grid >
        <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
        <StackPanel >
            <materialDesign:Card Background="Transparent" Padding="10"
                            materialDesign:ShadowAssist.ShadowEdges="Bottom" materialDesign:ElevationAssist.Elevation="Dp6" >
                <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" >
                    <StackPanel Orientation="Horizontal">
                        <StackPanel Margin="5">
                                <GD_Customcontrols:FunctionToggleUserControl 
                                                                             UnCheckedKind="HandBackLeft"
                                                                             IsCheckedKind="HandBackLeft"
                                                                             UnCheckedTitleText="{DynamicResource btnDescription_ManualOperatingMode}" >
                                    <GD_Customcontrols:FunctionToggleUserControl.IsChecked>
                                        <MultiBinding Converter="{GD_Common:MultiBooleanArrayAndParameterArrayToBooleanConverter ConvertBackForceToFalse=True}">
                                            <MultiBinding.ConverterParameter>
                                                <x:Array Type="{x:Type sys:Boolean}">
                                                    <sys:Boolean>true</sys:Boolean>
                                                    <sys:Boolean>false</sys:Boolean>
                                                    <sys:Boolean>true</sys:Boolean>
                                                    <sys:Boolean>false</sys:Boolean>
                                                    <sys:Boolean>false</sys:Boolean>
                                                </x:Array>
                                            </MultiBinding.ConverterParameter>
                                            <Binding Path="Feeding_Component_Button_IsChecked"/>
                                            <Binding Path="QRCode_Component_Button_IsChecked"/>
                                            <Binding Path="Stamping_Component_Button_IsChecked"/>
                                            <Binding Path="ShearCut_Component_Button_IsChecked"/>
                                            <Binding Path="Separator_Component_Button_IsChecked"/>
                                        </MultiBinding>
                                    </GD_Customcontrols:FunctionToggleUserControl.IsChecked>
                                    
                                </GD_Customcontrols:FunctionToggleUserControl>
                                <GD_Customcontrols:FunctionToggleUserControl IsChecked="{Binding Feeding_Component_Button_IsChecked}"
                                                                             UnCheckedKind="Import"
                                                                             IsCheckedKind="Import"
                                                                             UnCheckedTitleText="{DynamicResource Text_Feeding_Component}" />
                                <GD_Customcontrols:FunctionToggleUserControl IsChecked="{Binding QRCode_Component_Button_IsChecked}"
                                   UnCheckedKind="QrcodeEdit"
                                   IsCheckedKind="QrcodeEdit"
                                UnCheckedTitleText="{DynamicResource Text_QRCode_Component}" />
                                <GD_Customcontrols:FunctionToggleUserControl IsChecked="{Binding Stamping_Component_Button_IsChecked}"
                                   UnCheckedKind="Stamper"
                                   IsCheckedKind="Stamper"
                                UnCheckedTitleText="{DynamicResource Text_Stamping_Component}" />
                                <GD_Customcontrols:FunctionToggleUserControl IsChecked="{Binding ShearCut_Component_Button_IsChecked}"
                                   UnCheckedKind="ScissorsCutting"
                                   IsCheckedKind="ScissorsCutting"
                                UnCheckedTitleText="{DynamicResource Text_ShearCut_Component_Hydraulic}" />
                                <GD_Customcontrols:FunctionToggleUserControl IsChecked="{Binding Separator_Component_Button_IsChecked}"
                                   UnCheckedKind="Download"
                                   IsCheckedKind="Download"
                                UnCheckedTitleText="{DynamicResource Text_Separator_Component}" />
                            </StackPanel>
                        <Grid RenderTransformOrigin="0.5,0.5">
                        <Grid.LayoutTransform >
                            <ScaleTransform ScaleX="1.0" ScaleY="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ScaleX}"/>
                        </Grid.LayoutTransform>

                        <Grid HorizontalAlignment="Left">
                            <Image Name="SnpImage" Source="pack://application:,,,/image/SNP-0001.BMP" Height="400"/>
                            <Canvas Height="{Binding ElementName=SnpImage, Path=ActualHeight}" 
                                        Width="{Binding ElementName=SnpImage, Path=ActualWidth}"
                                        >
                                        <Canvas.Resources>
                                            <Style TargetType="p:ArrowLine">
                                                <Setter Property="Stroke" Value="Red"/>
                                                <Setter Property="StrokeThickness" Value="2"/>
                                                <Setter Property="ArrowLength" Value="5"/>
                                            </Style>
                                            <Style TargetType="ToggleButton" BasedOn="{StaticResource GD_MainToggleButton}">
                                                <Setter Property="Background" Value="White"/>
                                                <Setter Property="BorderBrush" Value="Black"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Opacity" Value="0.8"/>
                                                <Setter Property="Margin" Value="0"/>
                                                <Setter Property="Padding" Value="5"/>
                                                <Setter Property="TextBlock.FontSize" Value="14"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Foreground" Value="Black"/>
                                                        <Setter Property="Background" Value="Orange"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>

                                        </Canvas.Resources>

                                        <StackPanel Canvas.Left="50" Canvas.Top="100">
                                            <ToggleButton MinWidth="200" Height="200" Content="{DynamicResource Text_Feeding_Component}" 
                                                      IsChecked="{Binding Feeding_Component_Button_IsChecked}"/>
                                        </StackPanel>

                                        <StackPanel Canvas.Left="250" Canvas.Top="100">
                                            <ToggleButton MinWidth="70" Height="110" Content="{DynamicResource Text_QRCode_Component}"  
                                                      IsChecked="{Binding QRCode_Component_Button_IsChecked}"/>
                                        </StackPanel>
                                        <StackPanel Canvas.Left="350" Canvas.Top="20">
                                            <ToggleButton MinWidth="70" Height="200" Content="{DynamicResource Text_Stamping_Component}"
                                                          IsChecked="{Binding Stamping_Component_Button_IsChecked}"/>
                                        </StackPanel>
                                
                                
                                        <StackPanel Canvas.Left="430" Canvas.Top="75">
                                        <ToggleButton MinWidth="65" Height="150" Content="{DynamicResource Text_ShearCut_Component_Hydraulic}"  IsChecked="{Binding ShearCut_Component_Button_IsChecked}"/>
                                </StackPanel>
                                <StackPanel Canvas.Left="450" Canvas.Top="275">
                                        <ToggleButton MinWidth="140" Height="100" Content="{DynamicResource Text_Separator_Component}" IsChecked="{Binding Separator_Component_Button_IsChecked}" />
                                </StackPanel>


                                <StackPanel Canvas.Left="130" Canvas.Top="35">
                                    <ToggleButton 
                                        Content="{DynamicResource Text_Feeding_Component}"/>
                                </StackPanel>
                                <StackPanel Canvas.Left="230" Canvas.Top="35">
                                    <ToggleButton Content="{DynamicResource Text_QRCode_Component}"/>
                                </StackPanel>



                                <StackPanel Canvas.Left="45" Canvas.Top="145">


                                    <materialDesign:PopupBox Background="White"  
                                                                         BorderThickness="1" BorderBrush="Black"
                                                                         Style="{StaticResource GD_PopUpBox}" 
                                                                         ToggleContent="{DynamicResource Text_XAxis_Motor}"
                                                                         >
                                        <Border Background="White">
                                            <StackPanel Margin="10">
                                                <TextBlock Text="123" Foreground="Black"/>
                                                <TextBlock Text="123" Foreground="Black"/>
                                                <TextBlock Text="123" Foreground="Black"/>
                                                <TextBlock Text="123" Foreground="Black"/>
                                                <TextBlock Text="123" Foreground="Black"/>
                                                <TextBlock Text="123" Foreground="Black"/>
                                            </StackPanel>
                                        </Border>
                                    </materialDesign:PopupBox>

                                    <p:ArrowLine HorizontalAlignment="Center" 
                                        X1="0" Y1="0"  X2="0" Y2="20" />

                                </StackPanel>

                                <StackPanel Canvas.Left="80" Canvas.Top="90">

                                    <materialDesign:PopupBox Background="White"  
                                                                         BorderThickness="1"  
                                                                         Style="{StaticResource GD_PopUpBox}" 
                                                                         >
                                        <materialDesign:PopupBox.ToggleContent>
                                            <TextBlock DataContext="{DynamicResource Text_DoubleGuideRodPneumaticCylinder}" Margin="0" Padding="0"
                                                         Foreground="Red">
                                                <TextBlock.Text>
                                                    <MultiBinding StringFormat="{}{0}-1">
                                                        <Binding/>
                                                    </MultiBinding>
                                                </TextBlock.Text>

                                            </TextBlock>
                                        </materialDesign:PopupBox.ToggleContent>
                                        <Border Background="White">
                                            <StackPanel Margin="15">
                                                <TextBlock  
                                                                Text="．四個滑動軸承或線性滾珠軸承可擁有較高的負載或精密度。&#x000A;．可節省許多機構設計之思考，繪圖及安裝的時間，且結構簡單。&#x000A;．與MCG*系列相比，本系列有較長行程及較大缸徑可選用。&#x000A;．ø32~ø63缸管四面均設計埋入式傳感器固定溝槽，可依實際使用需要變更傳感器安裝位置。&#x000A;．一律附有端點可調式緩衝。&#x000A;．須定期於注油孔處填充潤滑脂，以增加潤滑度及使用壽命。&#x000A;．全系列均附磁。"
                                                                        Foreground="Black" TextWrapping="Wrap">

                                                </TextBlock>
                                            </StackPanel>
                                        </Border>
                                    </materialDesign:PopupBox>






                                    <p:ArrowLine HorizontalAlignment="Center" 
                                        X1="0" Y1="0"  X2="0" Y2="35" >
                                    </p:ArrowLine>
                                </StackPanel>

                                <StackPanel Canvas.Left="166" Canvas.Top="90">
                                    <ToggleButton                          
                                                     Foreground="Red"
                                                    Content="{DynamicResource Text_DoubleGuideRodPneumaticCylinder}" 
                                                    ContentStringFormat="{}{0}-2"/>
                                    <p:ArrowLine HorizontalAlignment="Center" 
                                        X1="0" Y1="0"  X2="0" Y2="35" >
                                    </p:ArrowLine>
                                </StackPanel>

                                <StackPanel Canvas.Left="285" Canvas.Top="90">
                                    <ToggleButton Content="{DynamicResource Text_BlockCylinder}"/>
                                    <p:ArrowLine HorizontalAlignment="Center" 
                                        X1="0" Y1="0"  X2="0" Y2="75" >
                                    </p:ArrowLine>
                                </StackPanel>

                                <StackPanel Canvas.Left="433" Canvas.Top="40">
                                    <ToggleButton Content="{DynamicResource Text_ShearCut_Component_Hydraulic}"/>
                                    <p:ArrowLine 
                                        X1="30" Y1="0"  X2="30" Y2="95" >
                                    </p:ArrowLine>
                                </StackPanel>


                                <StackPanel Canvas.Left="255" Canvas.Top="200">
                                    <p:ArrowLine
                                        X1="32" Y1="20"  X2="32" Y2="0" >
                                    </p:ArrowLine>
                                    <ToggleButton 
                                                    Content="{DynamicResource Text_DownCylinder_Component}" 
                                                      ContentStringFormat="{}{0}-2"
                                                    />
                                </StackPanel>

                                <StackPanel Canvas.Left="365" Canvas.Top="200">
                                    <p:ArrowLine HorizontalAlignment="Center" 
                                        X1="0" Y1="20"  X2="0" Y2="0" >
                                    </p:ArrowLine>
                                    <ToggleButton Content="{DynamicResource Text_DownCylinder_Component}"/>
                                </StackPanel>

                                <StackPanel Canvas.Left="505" Canvas.Top="220">
                                    <ToggleButton Content="{DynamicResource Text_Separator_Component}"/>
                                    <p:ArrowLine HorizontalAlignment="Center" 
                                        X1="0" Y1="0"  X2="0" Y2="30" >
                                    </p:ArrowLine>
                                </StackPanel>



                            </Canvas>
                        </Grid>
                        </Grid>
                    </StackPanel>
                </ScrollViewer>
            </materialDesign:Card>
            <WrapPanel Orientation="Horizontal">
                <WrapPanel.Resources>
                    <Style TargetType="GroupBox" BasedOn="{StaticResource ParameterBaseStyleGroupBox}">
                        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
                    </Style>
                </WrapPanel.Resources>
                
                <GroupBox Header="{DynamicResource Text_Feeding_Component}" Visibility="{Binding Feeding_Component_Button_IsChecked, Converter={dx:BooleanToVisibilityConverter}}">
                    <WrapPanel Orientation="Horizontal">
                        <GroupBox Header="{DynamicResource Text_XAxis_Motor}">
                                <StackPanel>
                            <materialDesign:ColorZone CornerRadius="2" Padding="1">
                                <StackPanel Orientation="Horizontal">
                                    <RepeatButton Style="{StaticResource AxisMoveRepeatButton}"
                                             Content="{materialDesign:PackIcon Kind=ArrowLeftBoldBoxOutline, Size=30}"/>
                                    <Border Margin="5,0"/>
                                    <RepeatButton Style="{StaticResource AxisMoveRepeatButton}"   
                                              Content="{materialDesign:PackIcon Kind=ArrowRightBoldBoxOutline, Size=30}"/>
                            </StackPanel>
                                    </materialDesign:ColorZone>
                                    <TextBox Text="123"/>
                                </StackPanel>
                            </GroupBox>

                        <GroupBox Header="{DynamicResource Text_DoubleGuideRodPneumaticCylinder}" HeaderStringFormat="{}{0}-1" >
                            <GD_StampingMachine_UserControls:CylinderUserControl 
                                CylinderUpCommand="{Binding Cylinder_1_Up_Command}" CylinderIsUpSingal_IsTriggered="{Binding Cylinder_1_Up_ReedSwitchIsTriggered}" CylinderUpIsActived="True"
                                CylinderUp_IsChecked="{Binding Cylinder_1_isUp}" CylinderUp_IsEnabled="{Binding Cylinder_1_Up_IsEnabled}"
                                CylinderMiddleCommand="{Binding Cylinder_1_Mid_Command}" CylinderIsMiddleSingal_IsTriggered="{Binding Cylinder_1_Middle_ReedSwitchIsTriggered}" CylinderMiddleIsActived="True"
                               CylinderMiddle_IsChecked="{Binding Cylinder_1_isMiddle}" CylinderMiddle_IsEnabled="{Binding Cylinder_1_Middle_IsEnabled}"
                                CylinderDownCommand="{Binding Cylinder_1_Down_Command}" CylinderIsDownSingal_IsTriggered="{Binding Cylinder_1_Down_ReedSwitchIsTriggered}" CylinderDownIsActived="True"
                               CylinderDown_IsChecked="{Binding Cylinder_1_isDown}" CylinderDown_IsEnabled="{Binding Cylinder_1_Down_IsEnabled}"
                                CylinderIsSingalPackIconForeground="DarkOrange" CylinderIsSingalPackIcon="AlarmLight"
                                />
                            </GroupBox>
                            <GroupBox Header="{DynamicResource Text_DoubleGuideRodPneumaticCylinder}" HeaderStringFormat="{}{0}-2">
                                <GD_StampingMachine_UserControls:CylinderUserControl 
                                 CylinderUpIsActived="False"
                               CylinderIsMiddleSingal_IsTriggered ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderMiddle_IsChecked}"
                             CylinderMiddle_IsEnabled ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderMiddle_IsChecked, Converter={dx:BoolInverseConverter}}"
                                
                               CylinderIsDownSingal_IsTriggered ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderDown_IsChecked}"
                             CylinderDown_IsEnabled ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderDown_IsChecked, Converter={dx:BoolInverseConverter}}"

                                
                                CylinderIsSingalPackIconForeground="DarkOrange" CylinderIsSingalPackIcon="AlarmLight"
                                />
                            </GroupBox>

                            <GroupBox Header="{DynamicResource Text_DownCylinder_Component}" HeaderStringFormat="{}{0}-2">
                                <GD_StampingMachine_UserControls:CylinderUserControl 
                                 CylinderUpIsActived="False"
                               CylinderIsMiddleSingal_IsTriggered ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderMiddle_IsChecked}"
                             CylinderMiddle_IsEnabled ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderMiddle_IsChecked, Converter={dx:BoolInverseConverter}}"
                                
                               CylinderIsDownSingal_IsTriggered ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderDown_IsChecked}"
                             CylinderDown_IsEnabled ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderDown_IsChecked, Converter={dx:BoolInverseConverter}}"

                                
                                CylinderIsSingalPackIconForeground="DarkOrange" CylinderIsSingalPackIcon="AlarmLight"
                                />
                            </GroupBox>


                            <GroupBox Header="{DynamicResource Text_BlockCylinder}" HeaderStringFormat="{}{0}">
                                <GD_StampingMachine_UserControls:CylinderUserControl 
                                 CylinderUpIsActived="False"
                               CylinderIsMiddleSingal_IsTriggered ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderMiddle_IsChecked}"
                             CylinderMiddle_IsEnabled ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderMiddle_IsChecked, Converter={dx:BoolInverseConverter}}"
                                
                               CylinderIsDownSingal_IsTriggered ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderDown_IsChecked}"
                             CylinderDown_IsEnabled ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderDown_IsChecked, Converter={dx:BoolInverseConverter}}"

                                
                                CylinderIsSingalPackIconForeground="DarkOrange" CylinderIsSingalPackIcon="AlarmLight"
                                />
                            </GroupBox>


                        </WrapPanel>
                    </GroupBox>
                    <GroupBox Header="{DynamicResource Text_QRCode_Component}" Visibility="{Binding QRCode_Component_Button_IsChecked, Converter={dx:BooleanToVisibilityConverter}}">
                        <Grid Margin="0,10">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <ComboBox  Width="120" 
                                    ItemsSource="{Binding ParameterSettingVM.QRSettingVM.QRSettingModelCollection}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding NumberSettingMode}"/>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>




                            <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="5,0">
                                <RadioButton Name="PlayButton"  IsEnabled="{Binding ElementName=StopButton ,Path=IsChecked}"
                                        Style="{StaticResource Sieg_CylinderToggleButton}" Grid.Column="0" Grid.Row="1"  Width="40" Height="40" >
                                    <materialDesign:PackIcon Kind="Play" Width="auto" Height="auto"/>
                                </RadioButton>
                                <RadioButton Name="StopButton" IsEnabled="{Binding ElementName=PlayButton ,Path=IsChecked}"
                                        Style="{StaticResource Sieg_CylinderToggleButton}" Grid.Column="1" Grid.Row="1"  Width="40" Height="40">
                                    <materialDesign:PackIcon Kind="Pause" Width="auto" Height="auto"/>
                                </RadioButton>
                            </StackPanel>

                        </Grid>
                    </GroupBox>

                    <GroupBox Header="{DynamicResource Text_Stamping_Component}" Visibility="{Binding Stamping_Component_Button_IsChecked, Converter={dx:BooleanToVisibilityConverter}}">
                    <StackPanel>
                        
                    <ComboBox  DisplayMemberPath="StampingTypeString"  Width="150" 
                Style="{StaticResource GD_ComboBox}" 
                               SelectedValue="{Binding StampingFontChangedVM.StampingTypeModel_ReadyStamping, UpdateSourceTrigger=PropertyChanged}"
                ItemsSource="{Binding StampingFontChangedVM.StampingTypeVMObservableCollection}" />
                     
                        <StackPanel Orientation="Horizontal">
                        <GroupBox Header="{DynamicResource Text_YAxis_Motor}" >
                            <materialDesign:ColorZone CornerRadius="2" Padding="1" HorizontalAlignment="Center">
                                        <StackPanel Orientation="Horizontal">

                                            <RepeatButton Style="{StaticResource AxisMoveRepeatButton}"   
                                              Content="{materialDesign:PackIcon Kind=ArrowBottomLeftBoldBoxOutline, Size=30}"/>
                                            <RepeatButton Style="{StaticResource AxisMoveRepeatButton}" 
                                             Content="{materialDesign:PackIcon Kind=CheckboxBlankOutline, Size=30}"/>
                                            <RepeatButton Style="{StaticResource AxisMoveRepeatButton}" 
                                             Content="{materialDesign:PackIcon Kind=ArrowTopRightBoldBoxOutline, Size=30}"/>
                                        </StackPanel>
                            </materialDesign:ColorZone>
                        </GroupBox>

                            <GroupBox Header="{DynamicResource Text_Stamping_ZAxis_Component}">
                                <GD_StampingMachine_UserControls:CylinderUserControl 
   
                             CylinderIsUpSingal_IsTriggered ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderUp_IsChecked}"
                             CylinderUp_IsEnabled ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderUp_IsChecked, Converter={dx:BoolInverseConverter}}"
                    
                               CylinderIsMiddleSingal_IsTriggered ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderMiddle_IsChecked}"
                             CylinderMiddle_IsEnabled ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderMiddle_IsChecked, Converter={dx:BoolInverseConverter}}"
                               CylinderIsDownSingal_IsTriggered ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderDown_IsChecked}"
                             CylinderDown_IsEnabled ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderDown_IsChecked, Converter={dx:BoolInverseConverter}}"

                                
                                CylinderIsSingalPackIconForeground="DarkOrange" CylinderIsSingalPackIcon="AlarmLight"
                                />
                            </GroupBox>

                                <GroupBox Header="{DynamicResource Text_DownCylinder_Component}" HeaderStringFormat="{}{0}">
                                    <GD_StampingMachine_UserControls:CylinderUserControl 
                                 CylinderUpIsActived="False"
                               CylinderIsMiddleSingal_IsTriggered ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderMiddle_IsChecked}"
                             CylinderMiddle_IsEnabled ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderMiddle_IsChecked, Converter={dx:BoolInverseConverter}}"
                                
                               CylinderIsDownSingal_IsTriggered ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderDown_IsChecked}"
                             CylinderDown_IsEnabled ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderDown_IsChecked, Converter={dx:BoolInverseConverter}}"

                                
                                CylinderIsSingalPackIconForeground="DarkOrange" CylinderIsSingalPackIcon="AlarmLight"
                                />
                                </GroupBox>

                            </StackPanel>
                    </StackPanel>
                </GroupBox>

                <GroupBox Header="{DynamicResource Text_ShearCut_Component_Hydraulic}" Visibility="{Binding ShearCut_Component_Button_IsChecked, Converter={dx:BooleanToVisibilityConverter}}">
                    <StackPanel>
                    <GD_StampingMachine_UserControls:CylinderUserControl 
   
                             CylinderIsUpSingal_IsTriggered ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderUp_IsChecked}"
                             CylinderUp_IsEnabled ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderUp_IsChecked, Converter={dx:BoolInverseConverter}}"
                    
                               CylinderIsMiddleSingal_IsTriggered ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderMiddle_IsChecked}"
                             CylinderMiddle_IsEnabled ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderMiddle_IsChecked, Converter={dx:BoolInverseConverter}}"
                               CylinderIsDownSingal_IsTriggered ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderDown_IsChecked}"
                             CylinderDown_IsEnabled ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderDown_IsChecked, Converter={dx:BoolInverseConverter}}"

                                
                                CylinderIsSingalPackIconForeground="DarkOrange" CylinderIsSingalPackIcon="AlarmLight"
                                />
                        <ToggleButton Margin="5,10" HorizontalAlignment="Left"
                                        Style="{StaticResource Sieg_CylinderToggleButton}" Grid.Column="0" Grid.Row="1"  Width="40" Height="40" >
                            <materialDesign:PackIcon Kind="ScissorsCutting" Width="auto" Height="auto"/>
                        </ToggleButton>
                    </StackPanel>
                </GroupBox>

                <GroupBox Header="{DynamicResource Text_Separator_Component}" Visibility="{Binding Separator_Component_Button_IsChecked, Converter={dx:BooleanToVisibilityConverter}}">
                    <StackPanel>
                    <ListBox Width="250" Height="250" Margin="10"
                            ItemsSource="{Binding  ParameterSettingVM.SeparateSettingVM.SeparateBoxVMObservableCollection}">
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="Height" Value="40"/>
                                <Setter Property="Width" Value="60"/>
                                        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
                                        <Setter Property="Background" Value="{DynamicResource PrimaryHueDarkBrush}"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
                                        <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ListBoxItem" >
                                            <Border x:Name="RadiaListBoxItemBorder" RenderTransformOrigin="0.5,0.5">
                                                <Grid VerticalAlignment="Bottom">
                                                            <Border BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush }"
                                                        Background="{TemplateBinding Background }" CornerRadius="5" >
                                                            </Border>

                                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center"  VerticalAlignment="Center">
                                                        <TextBlock FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                                   Text="{DynamicResource Text_Box}" Foreground="{TemplateBinding Foreground}"/>
                                                    <TextBlock FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,2" 
                                                               Foreground="{TemplateBinding Foreground}">
                                                                        <TextBlock.Text>
                                                            <MultiBinding StringFormat="{}{0}">
                                                                <Binding Path="BoxIndex"/>
                                                            </MultiBinding>
                                                        </TextBlock.Text>
                                                    </TextBlock>
                                                    </StackPanel>
                                                </Grid>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger 
                            Binding="{Binding IsUsing}" Value="True">
                                                <Setter Property="Background" Value="DarkRed"/>
                                            </DataTrigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Orange"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="#00Bfff"/>
                                    </Trigger>
                                            <DataTrigger 
                            Binding="{Binding BoxIsEnabled}" Value="False">
                                                <Setter Property="Opacity" Value="0.5"/>
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <DataTrigger 
                            Binding="{Binding BoxIsEnabled}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>

                                        </Style.Triggers>

                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <GD_Views:RadialPanel
                                        d:DataContext="{d:DesignInstance Type=GD_ViewModels:StampingFontChangedViewModel}"
                                        DataContext="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" 
                                        RotationDirection="Clockwise"
                                        StartAngle="90" RotateAngle="{Binding StampingFontTurntable_RorateAngle}"  RoundAngle="360"
                                        
                                        ItemRotateAngle="-90"  />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        </ListBox>
                        <Grid>
                                <ToggleButton Margin="5,10" HorizontalAlignment="Left" VerticalAlignment="Bottom" Command="{Binding SeparateBox_CounterClockwiseRotateCommand}"
                                        Style="{StaticResource Sieg_CylinderToggleButton}" Grid.Column="0" Grid.Row="1"  Width="40" Height="40" >
                                <materialDesign:PackIcon Kind="ArrowURightTop" Width="auto" Height="auto"/>
                            </ToggleButton>
                                <ToggleButton Margin="5,10" HorizontalAlignment="Right" VerticalAlignment="Bottom" Command="{Binding SeparateBox_ClockwiseRotateCommand}"
                                        Style="{StaticResource Sieg_CylinderToggleButton}" Grid.Column="0" Grid.Row="1"  Width="40" Height="40" >
                                <materialDesign:PackIcon Kind="ArrowULeftTop" Width="auto" Height="auto"/>
                            </ToggleButton>
                        </Grid>
                    </StackPanel>
                </GroupBox>
            </WrapPanel>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</UserControl>
