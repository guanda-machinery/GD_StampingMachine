<UserControl x:Class="GD_StampingMachine.UserControls.MachineFunctionUserControl"    
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                       xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
             xmlns:local="clr-namespace:GD_StampingMachine.UserControls"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             
            xmlns:GD_ParameterSettingViewModels="clr-namespace:GD_StampingMachine.ViewModels.ParameterSetting" 
             xmlns:GD_Enum="clr-namespace:GD_StampingMachine.GD_Enum;assembly=GD_StampingMachine.GD_Enum"
             xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" 
             xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" 
             xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" 
             
             xmlns:GD_ViewModels="clr-namespace:GD_StampingMachine.ViewModels"                
             xmlns:GD_Common="clr-namespace:GD_CommonLibrary;assembly=GD_CommonLibrary"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors" 
             xmlns:GD_StampingMachine_UserControls="clr-namespace:GD_StampingMachine.UserControls"
             xmlns:Diagram="http://schemas.devexpress.com/winfx/2008/xaml/diagram" xmlns:p="clr-namespace:Petzold.Media2D;assembly=Arrowheads" 

             xmlns:GD_Extensions="clr-namespace:GD_CommonLibrary.Extensions;assembly=GD_CommonLibrary" 
             
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:GD_Popup="clr-namespace:GD_CommonLibrary.GD_Popup;assembly=GD_CommonLibrary" xmlns:GD_Customcontrols="clr-namespace:GD_StampingMachine.UserControls.CustomControls" xmlns:GD_Views="clr-namespace:GD_StampingMachine.Views" xmlns:GD_SchematicDiagram="clr-namespace:GD_StampingMachine.UserControls.NumberSettingSchematicDiagram" xmlns:c="clr-namespace:CalcBinding;assembly=CalcBinding" xmlns:GD_StampingMachine="clr-namespace:GD_StampingMachine"
             d:DataContext="{d:DesignInstance Type=GD_ViewModels:MachineFunctionViewModel}"
             xmlns:GD_ProductSettingViewModels="clr-namespace:GD_StampingMachine.ViewModels.ProductSetting"             
             >

    <Grid >
        <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
        <StackPanel >
            <materialDesign:Card Background="Transparent" Padding="10"
                            materialDesign:ShadowAssist.ShadowEdges="Bottom" materialDesign:ElevationAssist.Elevation="Dp6" >
                <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" >
                    <StackPanel Orientation="Horizontal">
                        <StackPanel Margin="5">
                                <GD_Customcontrols:FunctionToggleUserControl IsChecked="{Binding Feeding_Component_Button_IsChecked}"
                                                                             UnCheckedKind="Import"
                                                                             IsCheckedKind="Import"
                                                                             UnCheckedTitleText="{DynamicResource Text_Feeding_Component}" />
                                <GD_Customcontrols:FunctionToggleUserControl IsChecked="{Binding QRCode_Component_Button_IsChecked}"
                                   UnCheckedKind="QrcodeEdit"
                                   IsCheckedKind="QrcodeEdit"
                                UnCheckedTitleText="{DynamicResource Text_QRCode_Component}" />
                                <GD_Customcontrols:FunctionToggleUserControl IsChecked="{Binding Stamping_Component_Button_IsChecked}"
                                   UnCheckedKind="Stamper"
                                   IsCheckedKind="Stamper"
                                UnCheckedTitleText="{DynamicResource Text_Stamping_Component}" />
                                <GD_Customcontrols:FunctionToggleUserControl IsChecked="{Binding ShearCut_Component_Button_IsChecked}"
                                   UnCheckedKind="ScissorsCutting"
                                   IsCheckedKind="ScissorsCutting"
                                UnCheckedTitleText="{DynamicResource Text_ShearCut_Component_Hydraulic}" />
                                <GD_Customcontrols:FunctionToggleUserControl IsChecked="{Binding Separator_Component_Button_IsChecked}"
                                   UnCheckedKind="PackageVariantClosed"
                                   IsCheckedKind="PackageVariantClosed"
                                UnCheckedTitleText="{DynamicResource Text_Separator_Component}" />

                                <GD_Customcontrols:FunctionToggleUserControl x:Name="Custom_Component_TButton"
                                   UnCheckedKind="Download"
                                   IsCheckedKind="Download"
                                UnCheckedTitleText="{DynamicResource Text_Custom_Component}" />

                                <GD_Popup:NonTopmostPopup
                                    PopupAnimation="Fade"   FlowDirection="LeftToRight" StaysOpen="False"
                                    Placement="Right"  
                                    PlacementTarget="{Binding ElementName=Custom_Component_TButton}"
                                                          HorizontalAlignment="Center" 
                                    IsOpen="{Binding ElementName=Custom_Component_TButton, Path=IsChecked, Mode=TwoWay}">

                                    <Grid>
                                        <Border  Background="{DynamicResource PrimaryHueMidBrush}" Padding="5,0" CornerRadius="10">
                                            <StackPanel>
                                                <GD_Customcontrols:FunctionToggleUserControl 
                                                                             UnCheckedKind="BoxCutter"
                                                                             IsCheckedKind="BoxCutter"
                                                                             UnCheckedTitleText="{DynamicResource btnDescription_ManualCutting}" >
                                                    <GD_Customcontrols:FunctionToggleUserControl.IsChecked>
                                                        <MultiBinding Converter="{GD_Common:MultiBooleanArrayAndParameterArrayToBooleanConverter ConvertBackForceToFalse=True}">
                                                            <MultiBinding.ConverterParameter>
                                                                <x:Array Type="{x:Type sys:Boolean}">
                                                                    <sys:Boolean>true</sys:Boolean>
                                                                    <sys:Boolean>true</sys:Boolean>
                                                                    <sys:Boolean>true</sys:Boolean>
                                                                    <sys:Boolean>true</sys:Boolean>
                                                                    <sys:Boolean>false</sys:Boolean>
                                                                </x:Array>
                                                            </MultiBinding.ConverterParameter>
                                                            <Binding Path="Feeding_Component_Button_IsChecked"/>
                                                            <Binding Path="QRCode_Component_Button_IsChecked"/>
                                                            <Binding Path="Stamping_Component_Button_IsChecked"/>
                                                            <Binding Path="ShearCut_Component_Button_IsChecked"/>
                                                            <Binding Path="Separator_Component_Button_IsChecked"/>
                                                        </MultiBinding>
                                                    </GD_Customcontrols:FunctionToggleUserControl.IsChecked>

                                                </GD_Customcontrols:FunctionToggleUserControl>
                                            </StackPanel>
                                        </Border>
                                    </Grid>
                                </GD_Popup:NonTopmostPopup>



                            </StackPanel>
                            <Grid RenderTransformOrigin="0.5,0.5">
                                <Grid.LayoutTransform >
                                    <ScaleTransform ScaleX="1.0" ScaleY="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ScaleX}"/>
                                </Grid.LayoutTransform>
                                <Grid HorizontalAlignment="Left">
                                    <Image Name="SnpImage" Source="pack://application:,,,/image/SNP-0001.BMP" Height="400"/>
                                    <Canvas Height="{Binding ElementName=SnpImage, Path=ActualHeight}" 
                                        Width="{Binding ElementName=SnpImage, Path=ActualWidth}"
                                        >
                                        <Canvas.Resources>
                                            <Style TargetType="p:ArrowLine">
                                                <Setter Property="Stroke" Value="Red"/>
                                                <Setter Property="StrokeThickness" Value="2"/>
                                                <Setter Property="ArrowLength" Value="5"/>
                                            </Style>
                                            <Style TargetType="ToggleButton" BasedOn="{StaticResource GD_MainToggleButton}">
                                                <Setter Property="Background" Value="Transparent"/>
                                                <Setter Property="BorderBrush" Value="Black"/>
                                                <Setter Property="BorderThickness" Value="0.5"/>
                                                <Setter Property="Opacity" Value="0.5"/>
                                                <Setter Property="Margin" Value="0"/>
                                                <Setter Property="Padding" Value="5"/>
                                                <Setter Property="TextBlock.FontSize" Value="14"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="BorderThickness" Value="0.5"/>
                                                        <Setter Property="Background" Value="DeepSkyBlue"/>
                                                        <Setter Property="Opacity" Value="0.3"/>
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="BorderThickness" Value="0"/>
                                                        <Setter Property="Background" Value="DeepSkyBlue"/>
                                                        <Setter Property="Opacity" Value="0.5"/>
                                                    </Trigger>

                                                </Style.Triggers>
                                            </Style>

                                        </Canvas.Resources>

                                        <StackPanel Canvas.Left="60" Canvas.Top="120">
                                            <ToggleButton MinWidth="190" Height="130" 
                                                      IsChecked="{Binding Feeding_Component_Button_IsChecked}"/>
                                        </StackPanel>

                                        <StackPanel Canvas.Left="250" Canvas.Top="120">
                                            <ToggleButton MinWidth="70" Height="130" 
                                                      IsChecked="{Binding QRCode_Component_Button_IsChecked}"/>
                                        </StackPanel>
                                        <StackPanel Canvas.Left="320" Canvas.Top="0">
                                            <ToggleButton MinWidth="110" Height="250" 
                                                          IsChecked="{Binding Stamping_Component_Button_IsChecked}"/>
                                        </StackPanel>


                                        <StackPanel Canvas.Left="430" Canvas.Top="75">
                                            <ToggleButton MinWidth="70" Height="175"  IsChecked="{Binding ShearCut_Component_Button_IsChecked}"/>
                                        </StackPanel>
                                        <StackPanel Canvas.Left="470" Canvas.Top="280">
                                            <ToggleButton MinWidth="125" Height="110"  IsChecked="{Binding Separator_Component_Button_IsChecked}" />
                                        </StackPanel>

                                        <!--
                                <StackPanel Canvas.Left="130" Canvas.Top="35">
                                    <ToggleButton 
                                        Content="{DynamicResource Text_Feeding_Component}"/>
                                </StackPanel>
                                <StackPanel Canvas.Left="230" Canvas.Top="35">
                                    <ToggleButton Content="{DynamicResource Text_QRCode_Component}"/>
                                </StackPanel>



                                <StackPanel Canvas.Left="45" Canvas.Top="145">


                                    <materialDesign:PopupBox Background="White"  
                                                                         BorderThickness="1" BorderBrush="Black"
                                                                         Style="{StaticResource GD_PopUpBox}" 
                                                                         ToggleContent="{DynamicResource Text_XAxis_Motor}"
                                                                         >
                                        <Border Background="White">
                                            <StackPanel Margin="10">
                                                <TextBlock Text="123" Foreground="Black"/>
                                                <TextBlock Text="123" Foreground="Black"/>
                                                <TextBlock Text="123" Foreground="Black"/>
                                                <TextBlock Text="123" Foreground="Black"/>
                                                <TextBlock Text="123" Foreground="Black"/>
                                                <TextBlock Text="123" Foreground="Black"/>
                                            </StackPanel>
                                        </Border>
                                    </materialDesign:PopupBox>

                                    <p:ArrowLine HorizontalAlignment="Center" 
                                        X1="0" Y1="0"  X2="0" Y2="20" />

                                </StackPanel>

                                <StackPanel Canvas.Left="80" Canvas.Top="90">

                                    <materialDesign:PopupBox Background="White"  
                                                                         BorderThickness="1"  
                                                                         Style="{StaticResource GD_PopUpBox}" 
                                                                         >
                                        <materialDesign:PopupBox.ToggleContent>
                                            <TextBlock DataContext="{DynamicResource Text_DoubleGuideRodPneumaticCylinder}" Margin="0" Padding="0"
                                                         Foreground="Red">
                                                <TextBlock.Text>
                                                    <MultiBinding StringFormat="{}{0}-1">
                                                        <Binding/>
                                                    </MultiBinding>
                                                </TextBlock.Text>

                                            </TextBlock>
                                        </materialDesign:PopupBox.ToggleContent>
                                        <Border Background="White">
                                            <StackPanel Margin="15">
                                                <TextBlock  
                                                                Text="．四個滑動軸承或線性滾珠軸承可擁有較高的負載或精密度。&#x000A;．可節省許多機構設計之思考，繪圖及安裝的時間，且結構簡單。&#x000A;．與MCG*系列相比，本系列有較長行程及較大缸徑可選用。&#x000A;．ø32~ø63缸管四面均設計埋入式傳感器固定溝槽，可依實際使用需要變更傳感器安裝位置。&#x000A;．一律附有端點可調式緩衝。&#x000A;．須定期於注油孔處填充潤滑脂，以增加潤滑度及使用壽命。&#x000A;．全系列均附磁。"
                                                                        Foreground="Black" TextWrapping="Wrap">

                                                </TextBlock>
                                            </StackPanel>
                                        </Border>
                                    </materialDesign:PopupBox>






                                    <p:ArrowLine HorizontalAlignment="Center" 
                                        X1="0" Y1="0"  X2="0" Y2="35" >
                                    </p:ArrowLine>
                                </StackPanel>

                                <StackPanel Canvas.Left="166" Canvas.Top="90">
                                    <ToggleButton                          
                                                     Foreground="Red"
                                                    Content="{DynamicResource Text_DoubleGuideRodPneumaticCylinder}" 
                                                    ContentStringFormat="{}{0}-2"/>
                                    <p:ArrowLine HorizontalAlignment="Center" 
                                        X1="0" Y1="0"  X2="0" Y2="35" >
                                    </p:ArrowLine>
                                </StackPanel>

                                <StackPanel Canvas.Left="285" Canvas.Top="90">
                                    <ToggleButton Content="{DynamicResource Text_BlockCylinder}"/>
                                    <p:ArrowLine HorizontalAlignment="Center" 
                                        X1="0" Y1="0"  X2="0" Y2="75" >
                                    </p:ArrowLine>
                                </StackPanel>

                                <StackPanel Canvas.Left="433" Canvas.Top="40">
                                    <ToggleButton Content="{DynamicResource Text_ShearCut_Component_Hydraulic}"/>
                                    <p:ArrowLine 
                                        X1="30" Y1="0"  X2="30" Y2="95" >
                                    </p:ArrowLine>
                                </StackPanel>


                                <StackPanel Canvas.Left="255" Canvas.Top="200">
                                    <p:ArrowLine
                                        X1="32" Y1="20"  X2="32" Y2="0" >
                                    </p:ArrowLine>
                                    <ToggleButton 
                                                    Content="{DynamicResource Text_DownCylinder_Component}" 
                                                      ContentStringFormat="{}{0}-2"
                                                    />
                                </StackPanel>

                                <StackPanel Canvas.Left="365" Canvas.Top="200">
                                    <p:ArrowLine HorizontalAlignment="Center" 
                                        X1="0" Y1="20"  X2="0" Y2="0" >
                                    </p:ArrowLine>
                                    <ToggleButton />
                                </StackPanel>

                                <StackPanel Canvas.Left="505" Canvas.Top="220">
                                    <ToggleButton />
                                    <p:ArrowLine HorizontalAlignment="Center" 
                                        X1="0" Y1="0"  X2="0" Y2="30" >
                                    </p:ArrowLine>
                                </StackPanel>
-->


                                    </Canvas>
                                </Grid>
                            </Grid>
                            <Grid Margin="10" >
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <GroupBox Header="加工前設定" Padding="0,5">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition  Width="auto"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <StackPanel Grid.Column="0">
                                            <Button Command="{Binding DeleteSendMachineCommand}" CommandParameter="{Binding ElementName=SendMachineCommandGridControl}">
                                                <materialDesign:PackIcon Kind="GarbageCan"/>
                                            </Button>
                                        </StackPanel>
                                <Border  Grid.Column="1"
                        BorderThickness="1" BorderBrush="Red">
                                    <ScrollViewer MaxHeight="200">
                                                <dxg:GridControl      Name="SendMachineCommandGridControl"
                                Style="{StaticResource ProjectGridControl}"
                                    Background="Transparent"
                                                  AutoGenerateColumns="None"
                                                  SelectionMode="Row"
                                                  ItemsSource="{Binding SendMachineCommandVMObservableCollection, UpdateSourceTrigger=PropertyChanged}"
                                    MaxHeight="100000"    >

                                            <dxg:GridControl.View >
                                                <dxg:TableView  
                                IsColumnMenuEnabled ="False"
                                AllowSorting="false"
                                AllowColumnFiltering="False"
                                AllowColumnMoving="False"
                                Name="MachineMessage_TableView"
                                AllowEditing="True"
                                ShowColumnHeaders="True"
                                HeaderHorizontalAlignment="Center"
                                VerticalScrollbarVisibility="Disabled"
                                HorizontalScrollbarVisibility="Disabled"
                                ShowHorizontalLines="False"
                                ShowVerticalLines="False"
                                ShowGroupPanel="False"
                                ShowSearchPanelMode="Never"
                                SearchPanelNullText="Search Tasks(Ctrl + F)" 
                                SearchPanelFindMode="Always"
                                ShowIndicator="False"
                                SearchDelay="0"/>
                                            </dxg:GridControl.View>



                                                <dxg:GridColumn  
                            HorizontalHeaderContentAlignment="Left"  Width="auto" AllowMoving="false"  IsSmart="True">
                                                    <dxg:GridColumn.EditSettings>
                                                        <dxe:TextEditSettings HorizontalContentAlignment="Left"/>
                                                    </dxg:GridColumn.EditSettings>
                                                    <dxg:GridColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <Grid>
                                                                <ToggleButton Padding="0" Margin="1" x:Name="MachiningFormTButton">
                                                                    <ToggleButton.Style>
                                                                        <Style TargetType="ToggleButton" BasedOn="{StaticResource GD_MainToggleButton}">
                                                                            <Setter Property="Width" Value="auto"/>
                                                                            <Setter Property="Height" Value="auto"/>
                                                                            <Setter Property="BorderThickness" Value="0"/>
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="ToggleButton">
                                                                                        <Grid>
                                                                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                                        </Grid>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Style.Triggers>
                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                    <Setter Property="IsChecked" Value="True"/>
                                                                                </Trigger>
                                                                                <Trigger Property="IsChecked" Value="True">
                                                                                    <Setter Property="Foreground" Value="Black"/>
                                                                                    <Setter Property="Background" Value="{StaticResource ToggleButtonBackgroundSkyBlueBrush}"/>
                                                                                </Trigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </ToggleButton.Style>
                                                                    <Grid  RenderTransformOrigin="0.5,0.5">
                                                                        <Grid.LayoutTransform>
                                                                            <ScaleTransform ScaleX="0.12" ScaleY="0.12"/>
                                                                        </Grid.LayoutTransform>
                                                                        <GD_SchematicDiagram:PlateRowDiagramViewUserControl
                            DataContext="{Binding Row.SettingBaseVM}" 
                           Visibility="{Binding Converter={GD_Common:ObjectIsEqualToVisibilityConverter IsTypeJudge=True} , ConverterParameter={x:Type GD_ParameterSettingViewModels:NumberSettingViewModel}}"
                            RedMeasurementLineVisibility="Collapsed"/>
                                                                        <GD_SchematicDiagram:PlateRowDiagramWithQRViewUserControl
                            DataContext="{Binding Row.SettingBaseVM}" 
                                Visibility="{Binding Converter={GD_Common:ObjectIsEqualToVisibilityConverter IsTypeJudge=True} , ConverterParameter={x:Type GD_ParameterSettingViewModels:QRSettingViewModel}}"
                            RedMeasurementLineVisibility="Collapsed"/>
                                                                    </Grid>
                                                                </ToggleButton>

                                                            </Grid>

                                                        </DataTemplate>
                                                    </dxg:GridColumn.CellTemplate>
                                                </dxg:GridColumn>


                                                <dxg:GridColumn FieldName="AbsoluteMoveDistance"  Width="auto" AllowMoving="false"  IsSmart="True">
                                                <dxg:GridColumn.EditSettings>
                                                    <dxe:TextEditSettings HorizontalContentAlignment="Left"/>
                                                </dxg:GridColumn.EditSettings>
                                            </dxg:GridColumn>

                                            <dxg:GridColumn FieldName="StampWidth"  Width="auto" AllowMoving="false"  IsSmart="True">
                                                <dxg:GridColumn.EditSettings>
                                                    <dxe:TextEditSettings HorizontalContentAlignment="Left"/>
                                                    
                                                    
                                                    
                                                </dxg:GridColumn.EditSettings>
                                                
                                                
                                                
                                            </dxg:GridColumn>


                                        </dxg:GridControl>
                                    </ScrollViewer>
                                        </Border>
                                    </Grid>
                                </GroupBox>
                                <Grid  Grid.Row="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <StackPanel Grid.RowSpan="2">
                                        <StackPanel.Resources>
                                            <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}">
                                                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
                                                <Setter Property="materialDesign:TextFieldAssist.HasClearButton" Value="True"/>
                                                <Setter Property="materialDesign:HintAssist.Hint" Value="Hint"/>
                                                <Setter Property="materialDesign:HintAssist.Background" Value="Transparent"/>
                                                <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>

                                                <Setter Property="MinWidth" Value="80"/>
                                                <Setter Property="Padding" Value="0,2,0,0.5"/>
                                                <Setter Property="Margin" Value="5,0"/>
                                            </Style>
                                        </StackPanel.Resources>
                                        
                                        
                                    <Button Command="{Binding SendMachineCommand}"
                                            CommandParameter="{Binding ElementName=NumberSettingComboBox , Path=SelectedValue}" Content="新建一般加工"></Button>
                                        <Button  Command="{Binding SendMachineCommand}" 
                                            CommandParameter="{Binding ElementName=QRSettingComboBox , Path=SelectedValue}" Content="新建QR加工"/>
                                        
                                        <TextBox 
                                        Text="{Binding StampingProductMargin, UpdateSourceTrigger=PropertyChanged}"
                                            materialDesign:HintAssist.Hint="鐵片間隔" 
                                            materialDesign:HintAssist.HelperTextFontSize="20"/>

                                    </StackPanel>
                                    <ComboBox Grid.Column="1" Name="NumberSettingComboBox"
                                        Margin="10,0" Padding="0" Width="200"   MaxDropDownHeight="275"
                                              ItemsSource="{Binding Source={x:Static GD_ViewModels:StampingMainModel.Instance},
                                        Path=ParameterSettingVM.NumberSettingPageVM.NumberSettingModelCollection,
                                        UpdateSourceTrigger=PropertyChanged}">
                                        <ComboBox.Style>
                                            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource GD_ComboBox}">
                                                <Setter Property="ItemTemplate">
                                                    <Setter.Value>
                                                        <DataTemplate >
                                                            <Grid>
                                                                <Grid Margin="5,0,5,5">
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition Height="auto"/>
                                                                        <RowDefinition/>
                                                                    </Grid.RowDefinitions>
                                                                    <TextBlock Text="{Binding NumberSettingMode}" Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
                                                                    <StackPanel Grid.Row="1" Orientation="Horizontal" >
                                                                        <Grid 
                                                            RenderTransformOrigin="0.0,0.0" >
                                                                            <Grid.LayoutTransform>
                                                                                <ScaleTransform ScaleX="0.15" ScaleY="0.15" />
                                                                            </Grid.LayoutTransform>
                                                                            <StackPanel>
                                                                                <GD_SchematicDiagram:PlateRowDiagramViewUserControl DataContext="{Binding }"
                                                                                                                                 Visibility="{Binding Converter={GD_Common:ObjectIsEqualToVisibilityConverter IsTypeJudge=True} , ConverterParameter={x:Type GD_ParameterSettingViewModels:NumberSettingViewModel}}"
                                                                                                                                RedMeasurementLineVisibility="Collapsed" />
                                                                                <GD_SchematicDiagram:PlateRowDiagramWithQRViewUserControl DataContext="{Binding }" 
                                                                                                                                          Visibility="{Binding Converter={GD_Common:ObjectIsEqualToVisibilityConverter IsTypeJudge=True} , ConverterParameter={x:Type GD_ParameterSettingViewModels:QRSettingViewModel}}"
                                                                                                                                      RedMeasurementLineVisibility="Collapsed" />

                                                                            </StackPanel>

                                                                        </Grid>
                                                                    </StackPanel>
                                                                </Grid>
                                                            </Grid>
                                                        </DataTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ComboBox.Style>
                                    </ComboBox>
                                    <ComboBox  Grid.Row="1" Grid.Column="1" Name="QRSettingComboBox"
                                               Margin="10,0" Padding="0" Width="200" Text="123"  MaxDropDownHeight="275"
                                               ItemsSource="{Binding Source={x:Static GD_ViewModels:StampingMainModel.Instance},
                                        Path=ParameterSettingVM.QRSettingPageVM.QRSettingModelCollection,
                                        UpdateSourceTrigger=PropertyChanged}">
                                        <ComboBox.Style>
                                            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource GD_ComboBox}">
                                                <Setter Property="ItemTemplate">
                                                    <Setter.Value>
                                                        <DataTemplate >
                                                            <Grid>
                                                                <Grid Margin="5,0,5,5">
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition Height="auto"/>
                                                                        <RowDefinition/>
                                                                    </Grid.RowDefinitions>
                                                                    <TextBlock Text="{Binding NumberSettingMode}" Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
                                                                    <StackPanel Grid.Row="1" Orientation="Horizontal" >
                                                                        <Grid 
                                                            RenderTransformOrigin="0.0,0.0" >
                                                                            <Grid.LayoutTransform>
                                                                                <ScaleTransform ScaleX="0.15" ScaleY="0.15" />
                                                                            </Grid.LayoutTransform>
                                                                            <StackPanel>
                                                                                <GD_SchematicDiagram:PlateRowDiagramViewUserControl DataContext="{Binding }"
                                                                                                                                 Visibility="{Binding Converter={GD_Common:ObjectIsEqualToVisibilityConverter IsTypeJudge=True} , ConverterParameter={x:Type GD_ParameterSettingViewModels:NumberSettingViewModel}}"
                                                                                                                                RedMeasurementLineVisibility="Collapsed" />
                                                                                <GD_SchematicDiagram:PlateRowDiagramWithQRViewUserControl DataContext="{Binding }" 
                                                                                                                                          Visibility="{Binding Converter={GD_Common:ObjectIsEqualToVisibilityConverter IsTypeJudge=True} , ConverterParameter={x:Type GD_ParameterSettingViewModels:QRSettingViewModel}}"
                                                                                                                                      RedMeasurementLineVisibility="Collapsed" />

                                                                            </StackPanel>

                                                                        </Grid>
                                                                    </StackPanel>
                                                                </Grid>
                                                            </Grid>
                                                        </DataTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ComboBox.Style>
                                    </ComboBox>

                                    <StackPanel Grid.Column="2" Grid.RowSpan="2" HorizontalAlignment="Center">
                                        <Button Content="重新排序" Command="{Binding SoftSendMachineCommand}"/>
                                        <Button Content="輸出命令"/>
                                        <Button/>
                                        <Button/>

                                    </StackPanel>
                                    
                                    
                                    
                                </Grid>
                            </Grid>
                            <StackPanel>
                            <WrapPanel Margin="10" Orientation="Horizontal" VerticalAlignment="Top">
                                    <WrapPanel.Resources>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignBody1TextBlock}">
                                        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
                                    </Style>
                                    <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}">
                                        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
                                        <Setter Property="materialDesign:TextFieldAssist.HasClearButton" Value="True"/>
                                        <Setter Property="materialDesign:HintAssist.Hint" Value="Hint"/>
                                        <Setter Property="materialDesign:HintAssist.Background" Value="Transparent"/>
                                        <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>

                                        <Setter Property="MinWidth" Value="80"/>
                                        <Setter Property="Padding" Value="0,2,0,0.5"/>
                                        <Setter Property="Margin" Value="5,0"/>
                                    </Style>
                                    </WrapPanel.Resources>
                                    <TextBox Text="{Binding SteelBeltLength, UpdateSourceTrigger=PropertyChanged}" materialDesign:HintAssist.Hint="鋼帶長度" materialDesign:HintAssist.HelperTextFontSize="20"/>

                                    <TextBox Name="StampingProductWidthTextBox"
                                        Text="{Binding StampingProductWidth, UpdateSourceTrigger=PropertyChanged}" materialDesign:HintAssist.Hint="鐵片寬度" materialDesign:HintAssist.HelperTextFontSize="20"/>

                                    <TextBox Text="{Binding QR_Stamping_Distance, UpdateSourceTrigger=PropertyChanged}" materialDesign:HintAssist.Hint="QR距離" />
                                    <TextBox  Text="{Binding Fonts_Stamping_Distance, UpdateSourceTrigger=PropertyChanged}" materialDesign:HintAssist.Hint="鋼印距離" />
                                    <TextBox  Text="{Binding MagnificationRatio, UpdateSourceTrigger=PropertyChanged}"  materialDesign:HintAssist.Hint="倍率" />
                                    <local:TriggerSliderUserControl MainSilderValue="{Binding MagnificationRatio, Mode=TwoWay}"
                                       Minimum="0.01" Maximum="2" TickFrequency="0.01" />
                                    <CheckBox Name="StampingRangeIsVisible" IsChecked="True" Content="顯示標線" Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
                                </WrapPanel>

                                <ScrollViewer GD_Extensions:ScrollViewerExtension.AlwaysScrollToEnd="True"
                                 MaxWidth="600"  HorizontalAlignment="Left"  HorizontalScrollBarVisibility="Auto">
                                <Grid Margin="0,5" >
                                        <Grid.LayoutTransform>
                                            <ScaleTransform ScaleX="{Binding MagnificationRatio}" ScaleY="{Binding MagnificationRatio}"/>
                                        </Grid.LayoutTransform>
                                    <Border BorderBrush="Red" BorderThickness="1"  Padding="5" >
                                            <Grid>
                                                <Grid Margin="0,25,0,0" >
                                                    <Border Background="Gray" >
                                                        <ListBox Width="{Binding SteelBeltLength}" 
                                                                 MinHeight="{Binding StampingProductWidth}"
                                                    ItemsSource="{Binding SendMachineCommandVMObservableCollection}"
                                                             ScrollViewer.VerticalScrollBarVisibility="Disabled" >
                                                            <ListBox.ItemContainerStyle>
                                                                <Style TargetType="ListBoxItem" >
                                                                    <Setter Property="Canvas.Top" Value="{Binding AbsoluteMoveDistance}"/>

                                                                    <Setter Property="Width" Value="{Binding ElementName=StampingProductWidthTextBox ,Path=Text}"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="ListBoxItem">
                                                                                <Border HorizontalAlignment="Center">
                                                                                    <Grid Opacity="0.9"  
                                                                                     d:DataContext="{d:DesignInstance Type=GD_ViewModels:SendMachineCommandViewModel}"
                                                                                      Visibility="{Binding AbsoluteMoveDistance, Converter={GD_Common:ObjectIsEqualToVisibilityConverter Invert=True},
                                                                                    ConverterParameter={x:Static sys:Double.PositiveInfinity}}">
                                                                                        <Grid.LayoutTransform>
                                                                                            <ScaleTransform ScaleX="{c:Binding StampWidth/350}"
                                                                                                        ScaleY="{c:Binding StampWidth/350}" />
                                                                                        </Grid.LayoutTransform>
                                                                                        <Grid DataContext="{Binding SettingBaseVM}">
                                                                                            <GD_SchematicDiagram:PlateRowDiagramViewUserControl 
                                                                                                                                 Visibility="{Binding Converter={GD_Common:ObjectIsEqualToVisibilityConverter IsTypeJudge=True} , ConverterParameter={x:Type GD_ParameterSettingViewModels:NumberSettingViewModel}}"
                                                                                                                                RedMeasurementLineVisibility="Collapsed" />






                                                                                            <GD_SchematicDiagram:PlateRowDiagramWithQRViewUserControl 
                                                                                                                                          Visibility="{Binding Converter={GD_Common:ObjectIsEqualToVisibilityConverter IsTypeJudge=True} , ConverterParameter={x:Type GD_ParameterSettingViewModels:QRSettingViewModel}}"
                                                                                                                                      RedMeasurementLineVisibility="Collapsed" />

                                                                                        </Grid>



                                                                                    </Grid>
                                                                                </Border>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </ListBox.ItemContainerStyle>
                                                            <ListBox.ItemsPanel>
                                                                <ItemsPanelTemplate>
                                                                    <Canvas IsItemsHost="True"  >
                                                                        <Canvas.LayoutTransform>
                                                                            <RotateTransform Angle="90"/>
                                                                        </Canvas.LayoutTransform>
                                                                    </Canvas>

                                                                    <!--  <WrapPanel FlowDirection="RightToLeft"/>-->
                                                                </ItemsPanelTemplate>
                                                            </ListBox.ItemsPanel>
                                                        </ListBox>
                                                    </Border>
                                                </Grid>
                                                
                                                <Grid Visibility="{Binding ElementName=StampingRangeIsVisible,Path=IsChecked, Converter={dx:BooleanToVisibilityConverter}}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="auto"/>
                                                    <ColumnDefinition Width="auto"/>
                                                    </Grid.ColumnDefinitions>


                                                    <Border  Grid.Column="1" BorderThickness="1,0" BorderBrush="Cyan"
                                                             Width="{Binding QR_Stamping_Distance}">
                                                        <Border Background="Blue" Opacity="0.2"/>
                                                    </Border>

                                                    <Grid Grid.Column="1"  Width="{Binding QR_Stamping_Distance}" VerticalAlignment="Top" >
                                         
                                                <TextBlock    Text="{Binding QR_Stamping_Distance}" HorizontalAlignment="Center"
                                                            Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}" Background="Transparent"/>
                                                    <p:ArrowLine Grid.Row="1"
                                                        Margin="0,0,0,0"
                                                        ArrowLength="8"
                                                        Stroke="Cyan"  ArrowEnds="Both"  
                                                                 X1="0"
                                                                 Y1="15"  
                                                                 X2="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Grid},Path=Width}" 
                                                                 Y2="15" />
                                                </Grid>

                                                    <Border Width="{Binding Fonts_Stamping_Distance}" Grid.Column="2" BorderThickness="1,0" BorderBrush="Salmon">
                                                        <Border  
                                                              Background="SkyBlue" Opacity="0.2"/>
                                                    </Border>
                                        <Grid Grid.Column="2"  Width="{Binding Fonts_Stamping_Distance}"  VerticalAlignment="Top" >
                                                        <TextBlock    Text="{Binding Fonts_Stamping_Distance}" HorizontalAlignment="Center"
                                                            Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
                                                    <p:ArrowLine Grid.Row="1"
                                                        Margin="0,0,0,0"
                                                        ArrowLength="8"
                                                        Stroke="Cyan"              ArrowEnds="Both"                                  
                                                                 X1="0"
                                                                 Y1="15"  
                                                                 X2="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Grid},Path=ActualWidth}" 
                                                                 Y2="15" />
                                                </Grid>






                                                </Grid>
                                                <Line  HorizontalAlignment="Right"/>
                                            </Grid>


                                    </Border>
                                </Grid>
                                </ScrollViewer>
                                <StackPanel Orientation="Horizontal">
                                    <RepeatButton Style="{StaticResource GD_RepeatButton}" Command="{Binding X_axisMoveSendMachineCommand}"
                                             Content="{materialDesign:PackIcon Kind=ArrowLeftBoldBoxOutline, Size=30}">
                                        <RepeatButton.CommandParameter>
                                            <sys:Double>1.0</sys:Double>
                                        </RepeatButton.CommandParameter>
                                    </RepeatButton>
                                    
                                    <Border Margin="5,0"/>
                                    
                                    <RepeatButton Style="{StaticResource GD_RepeatButton}"   Command="{Binding X_axisMoveSendMachineCommand}" 
                                              Content="{materialDesign:PackIcon Kind=ArrowRightBoldBoxOutline, Size=30}">
                                        <RepeatButton.CommandParameter>
                                            <sys:Double>-1.0</sys:Double>
                                        </RepeatButton.CommandParameter>
                                        
                                    </RepeatButton>

                                    <Button/>
                                    <Button/>
                                </StackPanel>
                                
                                
                                
                            </StackPanel>

                        </StackPanel>
                </ScrollViewer>
            </materialDesign:Card>
            <WrapPanel Orientation="Horizontal">
                <WrapPanel.Resources>
                    <Style TargetType="GroupBox" BasedOn="{StaticResource ParameterBaseStyleGroupBox}">
                        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
                    </Style>
                </WrapPanel.Resources>
                
                <GroupBox Header="{DynamicResource Text_Feeding_Component}" Visibility="{Binding Feeding_Component_Button_IsChecked, Converter={dx:BooleanToVisibilityConverter}}">
                    <WrapPanel Orientation="Horizontal">
                        <GroupBox Header="{DynamicResource Text_XAxis_Motor}">
                                <StackPanel>
                            <materialDesign:ColorZone CornerRadius="2" Padding="1">
                                <StackPanel Orientation="Horizontal">
                                            <RepeatButton Style="{StaticResource GD_RepeatButton}"
                                             Content="{materialDesign:PackIcon Kind=ArrowLeftBoldBoxOutline, Size=30}"/>
                                    <Border Margin="5,0"/>
                                            <RepeatButton Style="{StaticResource GD_RepeatButton}"   
                                              Content="{materialDesign:PackIcon Kind=ArrowRightBoldBoxOutline, Size=30}"/>
                            </StackPanel>
                                    </materialDesign:ColorZone>
                                    <TextBox Text="123" Margin="0,2"/>
                                    <ToggleButton Style="{StaticResource GD_ToggleButton_White}">
                                        <materialDesign:PackIcon Kind="AxisYArrow" Height="30" Width="30"/>
                                    </ToggleButton>
                                    <ToggleButton Style="{StaticResource GD_ToggleButton_White}">
                                        <Image Source="{StaticResource MainIcon_06_ReturningToOriginPoint_DrawingImage}" Width="30" Height="30"/>
                                    </ToggleButton>
                                    
                                </StackPanel>
                            </GroupBox>

                        <GroupBox Header="{DynamicResource Text_DoubleGuideRodPneumaticCylinder}" HeaderStringFormat="{}{0}-1" >
                            <GD_StampingMachine_UserControls:CylinderUserControl 
                                CylinderUpCommand="{Binding Cylinder_1_Up_Command}" CylinderIsUpSingal_IsTriggered="{Binding Cylinder_1_Up_ReedSwitchIsTriggered}" CylinderUpIsActived="True"
                                CylinderUp_IsChecked="{Binding Cylinder_1_isUp}" CylinderUp_IsEnabled="{Binding Cylinder_1_Up_IsEnabled}"
                                CylinderMiddleCommand="{Binding Cylinder_1_Mid_Command}" CylinderIsMiddleSingal_IsTriggered="{Binding Cylinder_1_Middle_ReedSwitchIsTriggered}" CylinderMiddleIsActived="True"
                               CylinderMiddle_IsChecked="{Binding Cylinder_1_isMiddle}" CylinderMiddle_IsEnabled="{Binding Cylinder_1_Middle_IsEnabled}"
                                CylinderDownCommand="{Binding Cylinder_1_Down_Command}" CylinderIsDownSingal_IsTriggered="{Binding Cylinder_1_Down_ReedSwitchIsTriggered}" CylinderDownIsActived="True"
                               CylinderDown_IsChecked="{Binding Cylinder_1_isDown}" CylinderDown_IsEnabled="{Binding Cylinder_1_Down_IsEnabled}"
                                CylinderIsSingalPackIconForeground="DarkOrange" CylinderIsSingalPackIcon="AlarmLight"
                                />
                            </GroupBox>
                            <GroupBox Header="{DynamicResource Text_DoubleGuideRodPneumaticCylinder}" HeaderStringFormat="{}{0}-2">
                                <GD_StampingMachine_UserControls:CylinderUserControl 
                                 CylinderUpIsActived="False"
                               CylinderIsMiddleSingal_IsTriggered ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderMiddle_IsChecked}"
                             CylinderMiddle_IsEnabled ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderMiddle_IsChecked, Converter={dx:BoolInverseConverter}}"
                                
                               CylinderIsDownSingal_IsTriggered ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderDown_IsChecked}"
                             CylinderDown_IsEnabled ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderDown_IsChecked, Converter={dx:BoolInverseConverter}}"

                                
                                CylinderIsSingalPackIconForeground="DarkOrange" CylinderIsSingalPackIcon="AlarmLight"
                                />
                            </GroupBox>

                            <GroupBox Header="{DynamicResource Text_DownCylinder_Component}" HeaderStringFormat="{}{0}-2">
                                <GD_StampingMachine_UserControls:CylinderUserControl 
                                 CylinderUpIsActived="False"
                               CylinderIsMiddleSingal_IsTriggered ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderMiddle_IsChecked}"
                             CylinderMiddle_IsEnabled ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderMiddle_IsChecked, Converter={dx:BoolInverseConverter}}"
                                
                               CylinderIsDownSingal_IsTriggered ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderDown_IsChecked}"
                             CylinderDown_IsEnabled ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderDown_IsChecked, Converter={dx:BoolInverseConverter}}"

                                
                                CylinderIsSingalPackIconForeground="DarkOrange" CylinderIsSingalPackIcon="AlarmLight"
                                />
                            </GroupBox>


                            <GroupBox Header="{DynamicResource Text_BlockCylinder}" HeaderStringFormat="{}{0}">
                                <GD_StampingMachine_UserControls:CylinderUserControl 
                                 CylinderUpIsActived="False"
                               CylinderIsMiddleSingal_IsTriggered ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderMiddle_IsChecked}"
                             CylinderMiddle_IsEnabled ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderMiddle_IsChecked, Converter={dx:BoolInverseConverter}}"
                                
                               CylinderIsDownSingal_IsTriggered ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderDown_IsChecked}"
                             CylinderDown_IsEnabled ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderDown_IsChecked, Converter={dx:BoolInverseConverter}}"

                                
                                CylinderIsSingalPackIconForeground="DarkOrange" CylinderIsSingalPackIcon="AlarmLight"
                                />
                            </GroupBox>


                        </WrapPanel>
                    </GroupBox>
                    <GroupBox Header="{DynamicResource Text_QRCode_Component}" Visibility="{Binding QRCode_Component_Button_IsChecked, Converter={dx:BooleanToVisibilityConverter}}">
                        <Grid Margin="0,10">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>

                            <ComboBox Grid.Row="0"
                                        Margin="10,0,10,10" Padding="0" Width="auto"   MaxDropDownHeight="275"
                                      
                                        ItemsSource="{Binding Path=ParameterSettingVM.QRSettingPageVM.QRSettingModelCollection}"
                                      >
                                
                                <ComboBox.Style>
                                    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource GD_ComboBox}">
                                        <Setter Property="ItemTemplate">
                                            <Setter.Value>
                                                <DataTemplate >
                                                    <Grid>
                                                        <Grid Margin="5,0,5,5">
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="auto"/>
                                                                <RowDefinition/>
                                                            </Grid.RowDefinitions>
                                                            <TextBlock Text="{Binding NumberSettingMode}" Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
                                                            <StackPanel Grid.Row="1" Orientation="Horizontal" >
                                                                <Grid 
                                                            RenderTransformOrigin="0.0,0.0" >
                                                                    <Grid.LayoutTransform>
                                                                        <ScaleTransform ScaleX="0.20" ScaleY="0.20" />
                                                                    </Grid.LayoutTransform>
                                                                    <StackPanel>
                                                                        <GD_SchematicDiagram:PlateRowDiagramViewUserControl DataContext="{Binding }"
                                                                                                                                 Visibility="{Binding Converter={GD_Common:ObjectIsEqualToVisibilityConverter IsTypeJudge=True} , ConverterParameter={x:Type GD_ParameterSettingViewModels:NumberSettingViewModel}}"
                                                                                                                                RedMeasurementLineVisibility="Collapsed" />
                                                                        <GD_SchematicDiagram:PlateRowDiagramWithQRViewUserControl DataContext="{Binding }" 
                                                                                                                                          Visibility="{Binding Converter={GD_Common:ObjectIsEqualToVisibilityConverter IsTypeJudge=True} , ConverterParameter={x:Type GD_ParameterSettingViewModels:QRSettingViewModel}}"
                                                                                                                                      RedMeasurementLineVisibility="Collapsed" />

                                                                    </StackPanel>

                                                                </Grid>
                                                            </StackPanel>
                                                        </Grid>
                                                    </Grid>
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ComboBox.Style>
                            </ComboBox>

                            <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="5,0">
                                <RadioButton Name="PlayButton"  IsEnabled="{Binding ElementName=StopButton ,Path=IsChecked}"
                                        Style="{StaticResource Sieg_CylinderToggleButton}" Grid.Column="0" Grid.Row="1"  Width="40" Height="40" >
                                    <materialDesign:PackIcon Kind="Play" Width="auto" Height="auto"/>
                                </RadioButton>
                                <RadioButton Name="StopButton" IsEnabled="{Binding ElementName=PlayButton ,Path=IsChecked}"
                                        Style="{StaticResource Sieg_CylinderToggleButton}" Grid.Column="1" Grid.Row="1"  Width="40" Height="40">
                                    <materialDesign:PackIcon Kind="Pause" Width="auto" Height="auto"/>
                                </RadioButton>
                            </StackPanel>

                        </Grid>
                    </GroupBox>

                    <GroupBox Header="{DynamicResource Text_Stamping_Component}" Visibility="{Binding Stamping_Component_Button_IsChecked, Converter={dx:BooleanToVisibilityConverter}}">
                    <StackPanel>
                        
                    <ComboBox  DisplayMemberPath="StampingTypeString"  Width="150" 
                Style="{StaticResource GD_ComboBox}" 
                               SelectedValue="{Binding Path=StampingFontChangedVM.StampingTypeModel_ReadyStamping}"
                               ItemsSource="{Binding Path=StampingFontChangedVM.StampingTypeVMObservableCollection}"    
 
                               />
                     
                        <StackPanel Orientation="Horizontal">
                                <GroupBox Header="{DynamicResource Text_YAxis_Motor}" >
                                    <StackPanel>
                                        <materialDesign:ColorZone CornerRadius="2" Padding="1" HorizontalAlignment="Center">

                                        <StackPanel Orientation="Horizontal">

                                            <RepeatButton Style="{StaticResource GD_RepeatButton}"   
                                              Content="{materialDesign:PackIcon Kind=ArrowBottomLeftBoldBoxOutline, Size=30}"/>
                                            <RepeatButton Style="{StaticResource GD_RepeatButton}" 
                                             Content="{materialDesign:PackIcon Kind=CheckboxBlankOutline, Size=30}"/>
                                            <RepeatButton Style="{StaticResource GD_RepeatButton}" 
                                             Content="{materialDesign:PackIcon Kind=ArrowTopRightBoldBoxOutline, Size=30}"/>

                                            </StackPanel>
                                        </materialDesign:ColorZone>
                                        <TextBox Text="123" Margin="0,2"/>
                                        <ToggleButton/>
                                    </StackPanel>
                                </GroupBox>

                            <GroupBox Header="{DynamicResource Text_Stamping_ZAxis_Component}">
                                <GD_StampingMachine_UserControls:CylinderUserControl 
   
                             CylinderIsUpSingal_IsTriggered ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderUp_IsChecked}"
                             CylinderUp_IsEnabled ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderUp_IsChecked, Converter={dx:BoolInverseConverter}}"
                    
                               CylinderIsMiddleSingal_IsTriggered ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderMiddle_IsChecked}"
                             CylinderMiddle_IsEnabled ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderMiddle_IsChecked, Converter={dx:BoolInverseConverter}}"
                               CylinderIsDownSingal_IsTriggered ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderDown_IsChecked}"
                             CylinderDown_IsEnabled ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderDown_IsChecked, Converter={dx:BoolInverseConverter}}"

                                
                                CylinderIsSingalPackIconForeground="DarkOrange" CylinderIsSingalPackIcon="AlarmLight"
                                />
                            </GroupBox>

                                <GroupBox Header="{DynamicResource Text_DownCylinder_Component}" HeaderStringFormat="{}{0}">
                                    <GD_StampingMachine_UserControls:CylinderUserControl 
                                 CylinderUpIsActived="False"
                               CylinderIsMiddleSingal_IsTriggered ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderMiddle_IsChecked}"
                             CylinderMiddle_IsEnabled ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderMiddle_IsChecked, Converter={dx:BoolInverseConverter}}"
                                
                               CylinderIsDownSingal_IsTriggered ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderDown_IsChecked}"
                             CylinderDown_IsEnabled ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderDown_IsChecked, Converter={dx:BoolInverseConverter}}"

                                
                                CylinderIsSingalPackIconForeground="DarkOrange" CylinderIsSingalPackIcon="AlarmLight"
                                />
                                </GroupBox>

                            </StackPanel>
                    </StackPanel>
                </GroupBox>

                <GroupBox Header="{DynamicResource Text_ShearCut_Component_Hydraulic}" Visibility="{Binding ShearCut_Component_Button_IsChecked, Converter={dx:BooleanToVisibilityConverter}}">
                    <StackPanel>
                    <GD_StampingMachine_UserControls:CylinderUserControl 
   
                             CylinderIsUpSingal_IsTriggered ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderUp_IsChecked}"
                             CylinderUp_IsEnabled ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderUp_IsChecked, Converter={dx:BoolInverseConverter}}"
                    
                               CylinderIsMiddleSingal_IsTriggered ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderMiddle_IsChecked}"
                             CylinderMiddle_IsEnabled ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderMiddle_IsChecked, Converter={dx:BoolInverseConverter}}"
                               CylinderIsDownSingal_IsTriggered ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderDown_IsChecked}"
                             CylinderDown_IsEnabled ="{Binding RelativeSource={RelativeSource Mode=Self}, Path=CylinderDown_IsChecked, Converter={dx:BoolInverseConverter}}"

                                
                                CylinderIsSingalPackIconForeground="DarkOrange" CylinderIsSingalPackIcon="AlarmLight"
                                />
                        <ToggleButton Margin="5,10" HorizontalAlignment="Left"
                                        Style="{StaticResource Sieg_CylinderToggleButton}" Grid.Column="0" Grid.Row="1"  Width="40" Height="40" >
                            <materialDesign:PackIcon Kind="ScissorsCutting" Width="auto" Height="auto"/>
                        </ToggleButton>
                    </StackPanel>
                </GroupBox>

                <GroupBox Header="{DynamicResource Text_Separator_Component}" Visibility="{Binding Separator_Component_Button_IsChecked, Converter={dx:BooleanToVisibilityConverter}}">
                    <StackPanel>
                            <Grid>
                                
                                
                                
                                
                                <Border Background="Transparent" CornerRadius="125" Margin="5" 
                                        BorderThickness="1"
                                        BorderBrush="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
                                <ListBox Width="250" Height="250" Margin="10"
                             ItemsSource="{Binding ParameterSettingVM.SeparateSettingVM.SeparateBoxVMObservableCollection}">
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="Height" Value="40"/>
                                <Setter Property="Width" Value="60"/>
                                        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
                                        <Setter Property="Background" Value="{DynamicResource PrimaryHueDarkBrush}"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
                                        <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ListBoxItem" >
                                            <Border x:Name="RadiaListBoxItemBorder" RenderTransformOrigin="0.5,0.5">
                                                <Grid VerticalAlignment="Bottom">
                                                            <Border BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush }"
                                                        Background="{TemplateBinding Background }" CornerRadius="5" >
                                                            </Border>

                                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center"  VerticalAlignment="Center">
                                                        <TextBlock FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                                   Text="{DynamicResource Text_Box}" Foreground="{TemplateBinding Foreground}"/>
                                                    <TextBlock FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,2" 
                                                               Foreground="{TemplateBinding Foreground}">
                                                                        <TextBlock.Text>
                                                            <MultiBinding StringFormat="{}{0}">
                                                                <Binding Path="BoxIndex"/>
                                                            </MultiBinding>
                                                        </TextBlock.Text>
                                                    </TextBlock>
                                                    </StackPanel>
                                                </Grid>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger 
                            Binding="{Binding IsUsing}" Value="True">
                                                <Setter Property="Background" Value="DarkRed"/>
                                            </DataTrigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Orange"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="#00Bfff"/>
                                    </Trigger>
                                            <DataTrigger 
                            Binding="{Binding BoxIsEnabled}" Value="False">
                                                <Setter Property="Opacity" Value="0.5"/>
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <DataTrigger 
                            Binding="{Binding BoxIsEnabled}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>

                                        </Style.Triggers>

                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <GD_Views:RadialPanel
                                        d:DataContext="{d:DesignInstance Type=GD_ViewModels:MachineFunctionViewModel}"
                                        DataContext="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" 
                                        RotationDirection="Clockwise"
                                        StartAngle="90" RotateAngle="{Binding SeparateBox_RotateAngle}"  RoundAngle="360"
                                        ItemRotateAngle="-90"  />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        </ListBox>
                            </Grid>
                            <Grid IsEnabled="{Binding IsRotating, Converter={dx:BoolInverseConverter}}">
                                <RepeatButton Margin="5,10" HorizontalAlignment="Left" VerticalAlignment="Bottom" Command="{Binding SeparateBox_CounterClockwiseRotateCommand}"
                                        Style="{StaticResource GD_RepeatButton}" Grid.Column="0" Grid.Row="1"  Width="40" Height="40" >
                                <materialDesign:PackIcon Kind="ArrowURightTop" Width="auto" Height="auto"/>
                            </RepeatButton>
                                <RepeatButton Margin="5,10" HorizontalAlignment="Right" VerticalAlignment="Bottom" Command="{Binding SeparateBox_ClockwiseRotateCommand}"
                                        Style="{StaticResource GD_RepeatButton}" Grid.Column="0" Grid.Row="1"  Width="40" Height="40" >
                                <materialDesign:PackIcon Kind="ArrowULeftTop" Width="auto" Height="auto"/>
                            </RepeatButton>
                        </Grid>
                    </StackPanel>
                </GroupBox>
            </WrapPanel>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</UserControl>
