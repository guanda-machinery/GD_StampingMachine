<UserControl x:Class="GD_StampingMachine.UserControls.ProductSettingUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:GD_StampingMachine.UserControls"
             mc:Ignorable="d" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" 
             xmlns:CalcB="clr-namespace:CalcBinding;assembly=CalcBinding" 
             xmlns:GD_Singletons="clr-namespace:GD_StampingMachine.Singletons" 

             xmlns:GD_Popup="clr-namespace:GD_CommonControlLibrary.GD_Popup;assembly=GD_CommonControlLibrary"
              xmlns:dd="urn:gong-wpf-dragdrop"
             xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" 
             xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" 
             xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
             xmlns:GD_ValidRule="clr-namespace:GD_CommonControlLibrary.ValidationRules;assembly=GD_CommonControlLibrary"
             xmlns:GD_SchematicDiagram="clr-namespace:GD_StampingMachine.UserControls.NumberSettingSchematicDiagram"
            xmlns:GD_Enum="clr-namespace:GD_StampingMachine.GD_Enum;assembly=GD_StampingMachine.GD_Enum" 
             xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" 

             xmlns:GD_ViewModels="clr-namespace:GD_StampingMachine.ViewModels" 
             xmlns:GD_ProductSettingViewModels="clr-namespace:GD_StampingMachine.ViewModels.ProductSetting" 
             xmlns:GD_ParameterSettingViewModels="clr-namespace:GD_StampingMachine.ViewModels.ParameterSetting" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
              xmlns:GD_Method="clr-namespace:GD_StampingMachine.Method" 
             xmlns:GD_CommonControl="clr-namespace:GD_CommonControlLibrary;assembly=GD_CommonControlLibrary" 
             xmlns:GD_StampingMachine="clr-namespace:GD_StampingMachine"
             xmlns:c="clr-namespace:CalcBinding;assembly=CalcBinding" 
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             
             
             d:DataContext="{d:DesignInstance Type=GD_ProductSettingViewModels:ProductSettingViewModel}"
             Name="ProductSettingUControl"
             
             >
    <Grid AllowDrop="True">

        <!--<dxmvvm:Interaction.Behaviors>
            <dxmvvm:EventToCommand EventName="PreviewDrop" Command="{Binding DragDropCommand}" PassEventArgsToCommand="True" />
            <dxmvvm:EventToCommand  EventName="PreviewDragOver" Command="{Binding PreviewDragOverCommand}" PassEventArgsToCommand="True" />
            <dxmvvm:EventToCommand EventName="PreviewDragEnter" Command="{Binding PreviewDragEnterCommand}" PassEventArgsToCommand="True" />
        </dxmvvm:Interaction.Behaviors>-->


        <Grid.Resources>
            <Style TargetType="ToggleButton" BasedOn="{StaticResource SiegCustomButton_Primary}"/>
        </Grid.Resources>
        <Grid Name="MainGrid"
            Visibility="{Binding SelectProductProjectVM.IsInParameterPage, Converter={dx:BooleanToVisibilityConverter Invert=True}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid Margin="10,10,10,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom"  Margin="10">
                    <TextBlock  Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"  Style="{StaticResource Body1TextBlockBold}" 
                                Text="{DynamicResource Text_Search}" FontSize="20"  />
                    <TextBox BorderBrush="{DynamicResource PrimaryHueDarkForegroundBrush}" Width="300"  Text="{x:Null}"
                                     materialDesign:HintAssist.Hint="Search Tasks(Ctrl + F)"
                                     materialDesign:HintAssist.Foreground="Blue"            
                             FontWeight="Bold" 
                                     Margin="5,0"  Padding="5,1" Name="SearchTextBox" 
                                     Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"/>

                </StackPanel>
                <StackPanel  Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">

                    <ToggleButton Padding="10,3,10,0"  
                        Name="btnShowAll" Margin="5,0"
                                  Style="{StaticResource GD_ToggleButton_Gray}" Content="{DynamicResource btnShowAll}" Command="{Binding UpdateFiltrationLogicCommand}" IsChecked="{Binding ShowAllProject}"/>

                    <ToggleButton Padding="10,3,10,0"  Margin="5,0"
                        Style="{StaticResource GD_ToggleButton_Gray}" Content="{DynamicResource btnShowHistory}" IsEnabled="{Binding ElementName=btnShowAll, Path=IsChecked,UpdateSourceTrigger=PropertyChanged, Converter={dx:BoolInverseConverter}}" 
                     Command="{Binding UpdateFiltrationLogicCommand}" IsChecked="{Binding ShowHiddenProject}"/>


                    <Button  Padding="10,3,10,0"  Margin="5,0"
                        Content="{DynamicResource btnLoadProject}"  Command="{Binding LoadProductSettingCommand}"
                                />
                    <Button Padding="10,3,10,0" Margin="5,0"
                        Content="{DynamicResource btnSaveChange}" Command="{Binding SaveProductSettingCommand}"
                                />
                    <Button Padding="10,3,10,0" Margin="5,0"
                        x:Name="AddProjectToggleButton"
                                          Command="{x:Static GD_Popup:DraggablePopup.OpenPopupCommand}"  
                                          CommandParameter="{StaticResource TrueValue}"
                                           CommandTarget="{Binding ElementName=AddProjectDarggablePopup}"
                                                      HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                      materialDesign:ButtonAssist.CornerRadius="5"
                                                      Content="{DynamicResource Text_AddNewProject}" >
                    </Button>
                </StackPanel>
                <!--新增專案-->
                <GD_Popup:DraggablePopup AllowsTransparency="True" Margin="16"
                                         PlacementRectangle="-260,50,0,0"
                                         Placement="Bottom" 
                                         PlacementTarget="{Binding ElementName=AddProjectToggleButton}"
                                             x:Name="AddProjectDarggablePopup" IsOpen="{Binding AddProjectDarggableIsPopup}">
                    <Border
                                                CornerRadius="10"
                                               Background="White" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                        <Border.Resources >
                            <Style TargetType="TextBlock" BasedOn="{StaticResource Body1TextBlock}">
                                <Setter Property="Foreground" Value="Black"/>
                                <Setter Property="FontWeight" Value="Regular"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="Margin" Value="0,3"/>
                            </Style>
                            <Style TargetType="Button" BasedOn="{StaticResource SiegCustomButton_Primary}">
                                <Setter Property="Padding" Value="10,2,10,0"/>
                                <Setter Property="Margin" Value="5,0"/>
                            </Style>
                            <Style TargetType="TextBox" BasedOn="{StaticResource GD_TextBox}" >
                                <Setter Property="BorderBrush" Value="{DynamicResource DarkHueDarkBrush}"/>
                                <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush"  Value="{DynamicResource DarkHueDarkBrush}"/>
                                <Setter Property="Foreground"  Value="{DynamicResource DarkHueDarkBrush}"/>
                                <Setter Property="FontSize" Value="16"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="Width" Value="200"/>
                                <Setter Property="Margin" Value="10,0"/>
                                <Setter Property="Padding" Value="0,0,0,0"/>
                            </Style>
                        </Border.Resources>

                        <Grid MinWidth="100" MinHeight="100" Margin="10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Column="1" Grid.Row="0" Text="{DynamicResource Text_CreateProject}" Grid.ColumnSpan="3"  FontWeight="Bold"/>

                            <TextBlock Grid.Column="0" Grid.Row="1" Text="※"  VerticalAlignment="Center" Foreground="Red"/>

                            <TextBlock Grid.Column="1" Grid.Row="1" Text="{DynamicResource Text_SavePath}"/>
                            <TextBlock Grid.Column="1" Grid.Row="2" Text="{DynamicResource Text_ProjectName}"/>
                            <TextBlock Grid.Column="1" Grid.Row="3" Text="{DynamicResource Text_ConstructionNumber}"/>
                            <TextBlock Grid.Column="1" Grid.Row="4" Text="{DynamicResource Text_MachiningForm}"/>

                            <TextBlock Grid.Column="2" Grid.Row="1" Text="："/>
                            <TextBlock Grid.Column="2" Grid.Row="2" Text="："/>
                            <TextBlock Grid.Column="2" Grid.Row="3" Text="："/>
                            <TextBlock Grid.Column="2" Grid.Row="4" Text="："/>

                            <Grid Grid.Column="3" Grid.Row="1"  Width="200" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Name="ProjectPathTextBox" Margin="0">
                                    <TextBox.Text>
                                        <Binding Path="CreatedProjectVM.ProductProjectPath" UpdateSourceTrigger="PropertyChanged" >
                                            <Binding.ValidationRules>
                                                <GD_ValidRule:CheckStringIsPathOrFileNameRule PathType="Path"/>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>



                                </TextBox>
                                <Button Grid.Column="1" Command="{Binding SetProjectFolder}" CommandParameter="{Binding ElementName=ProjectPathTextBox}" Margin="0,0,0,0" Width="25" MinWidth="30" Height="25" Padding="0">
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource SiegCustomButton}" >
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Setter Property="Content">
                                                <Setter.Value>
                                                    <materialDesign:PackIcon Kind="Folder" Width="20" Height="20"/>
                                                </Setter.Value>
                                            </Setter>

                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Content">
                                                        <Setter.Value>
                                                            <materialDesign:PackIcon Kind="FolderOpen" Width="20" Height="20"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Content">
                                                        <Setter.Value>
                                                            <materialDesign:PackIcon Kind="FolderArrowUp"  Width="20" Height="20"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </Grid>
                            <TextBox Grid.Column="3" Grid.Row="2" Text="{Binding CreatedProjectVM.ProductProjectName,UpdateSourceTrigger=PropertyChanged}">

                            </TextBox>
                            <TextBox Grid.Column="3" Grid.Row="3" Text="{Binding CreatedProjectVM.ProductProjectNumber,UpdateSourceTrigger=PropertyChanged}">

                            </TextBox>
                            <ComboBox Grid.Column="3" Grid.Row="4"  Style="{StaticResource GD_WhiteComboBox}"

                                              ItemsSource="{Binding SheetStampingTypeEnumCollection}"
                                              SelectedValue="{Binding CreatedProjectVM.SheetStampingTypeForm}">

                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Converter={GD_CommonControl:EnumGetNameConverter}}"></TextBlock>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            <StackPanel  Grid.Row="5" Orientation="Horizontal" Grid.ColumnSpan="4" HorizontalAlignment="Right" Margin="0,5">
                                <Button   Padding="10,2,10,0"   Margin="5,0"
                                                                    Content="{DynamicResource btnCancel}"
                                                                    Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" CommandParameter="{StaticResource FalseValue}">
                                </Button>
                                <Button Padding="10,2,10,0"   Margin="5,0"
                                         Content="{DynamicResource btnCreate}" Command="{Binding CreateProjectCommand}">
                                    <Button.IsEnabled>
                                        <MultiBinding Converter="{GD_CommonControl:MultiValueNotContainNullToBooleanConverter}">
                                            <Binding Path="CreatedProjectVM.ProductProjectPath"/>
                                            <Binding Path="CreatedProjectVM.ProductProjectName"/>
                                            <Binding Path="CreatedProjectVM.ProductProjectNumber"/>
                                        </MultiBinding>
                                    </Button.IsEnabled>
                                </Button>
                            </StackPanel>

                            <GroupBox  Grid.Row="6" Header="test" Grid.ColumnSpan="4" Margin="0,5" Visibility="Collapsed" >
                                <StackPanel >
                                    <TextBlock Text="完成進度(測試用)"/>
                                    <Slider Value="{Binding CreatedProjectVM.ProductProjectFinishProcessing}" Foreground="Black" Maximum="100" Interval="1" />
                                    <TextBlock Text="{Binding CreatedProjectVM.ProductProjectFinishProcessing}"/>
                                </StackPanel>
                            </GroupBox>

                        </Grid>
                    </Border>
                </GD_Popup:DraggablePopup>

                <!--編輯-->
                <GD_Popup:DraggablePopup AllowsTransparency="True" Margin="16" x:Name="EditProjectDarggablePopup"  
                                          PlacementRectangle="-260,50,0,0"
                                         Placement="Bottom" 
                                         PlacementTarget="{Binding ElementName=AddProjectToggleButton}"
                                         IsOpen="{Binding SelectProductProjectVM.EditProjectDarggableIsPopup}">
                    <Border
                                                CornerRadius="10"
                                               Background="White" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                        <Border.Resources >
                            <Style TargetType="TextBlock" BasedOn="{StaticResource Body1TextBlock}">
                                <Setter Property="Foreground" Value="Black"/>
                                <Setter Property="Padding" Value="0,2,0,0"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="Margin" Value="0,3"/>
                            </Style>
                            <Style TargetType="Button" BasedOn="{StaticResource SiegCustomButton}">
                                <Setter Property="Foreground" Value="Black"/>
                                <Setter Property="BorderBrush" Value="Black"/>
                                <Setter Property="BorderThickness" Value="0.5"/>
                                <Setter Property="Padding" Value="10,0"/>
                                <Setter Property="Margin" Value="5,0"/>
                            </Style>
                            <Style TargetType="TextBox" BasedOn="{StaticResource GD_TextBox}" >

                                <Setter Property="BorderBrush" Value="{DynamicResource DarkHueDarkBrush}"/>
                                <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush"  Value="{DynamicResource DarkHueDarkBrush}"/>
                                <Setter Property="Foreground"  Value="{DynamicResource DarkHueDarkBrush}"/>
                                <Setter Property="BorderBrush"  Value="{DynamicResource DarkHueDarkBrush}"/>
                                <Setter Property="FontSize" Value="16"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="Width" Value="200"/>
                                <Setter Property="Margin" Value="10,0"/>
                                <Setter Property="Padding" Value="0,0,0,0"/>
                            </Style>
                        </Border.Resources>

                        <Grid MinWidth="100" MinHeight="100" Margin="10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Column="1" Grid.Row="0" Text="{DynamicResource Text_EditProject}" Grid.ColumnSpan="3" Margin="0,5" FontWeight="Bold"/>

                            <TextBlock Grid.Column="0" Grid.Row="1" Text="※" Margin="2,0"  Foreground="Red"/>

                            <TextBlock Grid.Column="1" Grid.Row="1" Text="{DynamicResource Text_SavePath}" />
                            <TextBlock Grid.Column="1" Grid.Row="2" Text="{DynamicResource Text_ProjectName}"/>
                            <TextBlock Grid.Column="1" Grid.Row="3" Text="{DynamicResource Text_ConstructionNumber}"/>
                            <TextBlock Grid.Column="1" Grid.Row="4" Text="{DynamicResource Text_MachiningForm}"/>

                            <TextBlock Grid.Column="2" Grid.Row="1" Text="："/>
                            <TextBlock Grid.Column="2" Grid.Row="2" Text="：" />
                            <TextBlock Grid.Column="2" Grid.Row="3" Text="："/>
                            <TextBlock Grid.Column="2" Grid.Row="4" Text="："/>

                            <Grid Grid.Column="3" Grid.Row="1"  Width="200" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBox x:Name="SelectedProductProjectPathEditTextBox" Margin="0" Text="{Binding SelectProductProjectVM.ProductProjectPath, UpdateSourceTrigger=PropertyChanged}">
                                </TextBox>
                                <Button Grid.Column="1" Command="{Binding SetProjectFolder}" CommandParameter="{Binding ElementName=SelectedProductProjectPathEditTextBox}" Margin="0,0,0,0" Width="25" MinWidth="30" Height="25" Padding="0">
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource SiegCustomButton}" >
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Setter Property="Content">
                                                <Setter.Value>
                                                    <materialDesign:PackIcon Kind="Folder" Width="20" Height="20"/>
                                                </Setter.Value>
                                            </Setter>

                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Content">
                                                        <Setter.Value>
                                                            <materialDesign:PackIcon Kind="FolderOpen" Width="20" Height="20"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Content">
                                                        <Setter.Value>
                                                            <materialDesign:PackIcon Kind="FolderArrowUp"  Width="20" Height="20"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </Grid>
                            <TextBox Grid.Column="3" Grid.Row="2">
                                <TextBox.Text>
                                    <Binding Path="SelectProductProjectVM.ProductProjectName" UpdateSourceTrigger="PropertyChanged" >
                                        <Binding.ValidationRules>
                                            <GD_ValidRule:CheckStringIsPathOrFileNameRule PathType="FileName"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <TextBox Grid.Column="3" Grid.Row="3">
                                <TextBox.Text>
                                    <Binding Path=" SelectProductProjectVM.ProductProjectNumber" UpdateSourceTrigger="PropertyChanged" >
                                        <Binding.ValidationRules>
                                            <GD_ValidRule:CheckStringEmptyRule/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <ComboBox Grid.Column="3" Grid.Row="4"  Style="{StaticResource GD_WhiteComboBox}" Padding="5,0"
                                              ItemsSource="{Binding SheetStampingTypeEnumCollection}"
                                              SelectedValue="{Binding SelectProductProjectVM.SheetStampingTypeForm}">

                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Converter={ GD_CommonControl:EnumGetNameConverter}}"></TextBlock>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            <StackPanel  Grid.Row="5" Orientation="Horizontal" Grid.ColumnSpan="4" HorizontalAlignment="Right" Margin="0,5">
                                <Button Name="EditProjectToggleButton"  
                                        Style="{StaticResource SiegCustomButton}" 
                                          Command="{x:Static GD_Popup:DraggablePopup.ClosePopupCommand}"  
                                          CommandParameter="{StaticResource FalseValue}"
                                                                    Content="{DynamicResource btnClose}">
                                </Button>
                                <Button Visibility="Collapsed"
                                    Style="{StaticResource SiegCustomButton}" Content="{DynamicResource btnEdit}" Command="{Binding}">
                                    <Button.IsEnabled>
                                        <MultiBinding Converter="{GD_CommonControl:MultiValueNotContainNullToBooleanConverter}">
                                            <Binding Path="SelectProductProjectVM.ProductProjectPath"/>
                                            <Binding Path="SelectProductProjectVM.ProductProjectName"/>
                                            <Binding Path="SelectProductProjectVM.ProductProjectNumber"/>
                                        </MultiBinding>
                                    </Button.IsEnabled>
                                </Button>
                            </StackPanel>


                        </Grid>
                    </Border>
                </GD_Popup:DraggablePopup>

            </Grid>
            <Border  Grid.Column="1" Grid.Row="1" Margin="0,10"
                 Background="Transparent" 
                 BorderThickness="0" 
                 BorderBrush="#595E60" >
                <dxg:GridControl  Background="Transparent"  VerticalAlignment="Top"
                    CustomRowFilterCommand="{Binding ProductProjectRowFilterCommand }"
                    Style="{StaticResource ProjectGridControl}" 

                    AutoGenerateColumns="None"
                    SelectionMode="Row"
                    ItemsSource="{Binding ProductProjectVMObservableCollection}"
                    SelectedItem="{Binding SelectProductProjectVM}"
                    MinHeight="100"
                                      
                                      >
                    <dxg:GridControl.View >
                        <dxg:TableView   
                                SearchString="{Binding ElementName=SearchTextBox, Path=Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                IsColumnMenuEnabled ="False"
                                RowDoubleClickCommand="{Binding RowDoubleClickCommand}"                  
                                AllowMergedGrouping="True"
                                AllowMoveColumnToDropArea="False"
                            
                                            AllowColumnFiltering="False"
                            
                                AllowSorting="True"
                                AllowColumnMoving="True"
                                AllowEditing="False"
                                ShowColumnHeaders="True"
                        
                                HeaderHorizontalAlignment="Center"
                                VerticalScrollbarVisibility="Auto"
                                HorizontalScrollbarVisibility="Auto"
                                ShowGroupPanel="True"
                                ShowSearchPanelMode="Never"
                                SearchPanelNullText="Search Tasks(Ctrl + F)" 
                                SearchPanelFindMode="Always"
                                ShowIndicator="False"
                                SearchDelay="0"/>
                    </dxg:GridControl.View>

                    
                    <dxg:GridColumn  HorizontalHeaderContentAlignment="Center"  Header="{DynamicResource Text_ConstructionSerialNumber}" FieldName="ProductProjectNumber" Width="auto"   IsSmart="True" >
                        <dxg:GridColumn.EditSettings>
                            <dxe:TextEditSettings HorizontalContentAlignment="Left" VerticalContentAlignment="Center"/>
                        </dxg:GridColumn.EditSettings>
                    </dxg:GridColumn>

                    <dxg:GridColumn  HorizontalHeaderContentAlignment="Center"  Header="{DynamicResource Text_ProjectName}" FieldName="ProductProjectName" Width="auto"   IsSmart="True">
                        <dxg:GridColumn.EditSettings>
                            <dxe:TextEditSettings HorizontalContentAlignment="Left" VerticalContentAlignment="Center"/>
                        </dxg:GridColumn.EditSettings>
                    </dxg:GridColumn>

                    <dxg:GridColumn  Header="{DynamicResource Text_Form}"   FieldName="SheetStampingTypeForm" 
                                             Binding="{Binding SheetStampingTypeForm, Converter={GD_CommonControl:EnumGetNameConverter}, ConverterParameter={x:Type GD_Enum:SheetStampingTypeFormEnum}}" 
                                 Width="auto" HorizontalHeaderContentAlignment="Center"  IsSmart="True">
                        <dxg:GridColumn.EditSettings>
                            <dxe:TextEditSettings HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                        </dxg:GridColumn.EditSettings>
                    </dxg:GridColumn>

                    <dxg:GridColumn  HorizontalHeaderContentAlignment="Center"  Header="{DynamicResource Text_SavePath}"
                                             FieldName="ProductProjectPath" Width="*"   IsSmart="True">
                        <dxg:GridColumn.EditSettings>
                            <dxe:TextEditSettings HorizontalContentAlignment="Left"/>
                        </dxg:GridColumn.EditSettings>
                    </dxg:GridColumn>
                    <dxg:GridColumn  HorizontalHeaderContentAlignment="Center"  Header="{DynamicResource Text_CreateTime}" FieldName="ProductProjectCreateTime" Width="auto" AllowMoving="false"  IsSmart="True">
                        <dxg:GridColumn.EditSettings>
                            <dxe:DateEditSettings Mask="yyyy/MM/dd HH:mm"  MaskUseAsDisplayFormat="True" HorizontalContentAlignment="Center"/>
                        </dxg:GridColumn.EditSettings>
                    </dxg:GridColumn>
                    <dxg:GridColumn  HorizontalHeaderContentAlignment="Center"  Header="{DynamicResource Text_EditTime}" FieldName="ProductProjectEditTime" Width="auto" AllowMoving="false"  IsSmart="True">
                        <dxg:GridColumn.EditSettings>
                            <dxe:DateEditSettings Mask="yyyy/MM/dd HH:mm"  MaskUseAsDisplayFormat="True" HorizontalContentAlignment="Center"/>
                        </dxg:GridColumn.EditSettings>
                    </dxg:GridColumn>
                    <dxg:GridColumn  Header="{DynamicResource Text_FinishProgress}" FieldName="ProductProject.FinishProgress"
                                 Width="100" AllowMoving="false"  IsSmart="True" HorizontalHeaderContentAlignment="Center">
                        <dxg:GridColumn.CellTemplate>
                            <DataTemplate>
                                <Grid Height="auto" Margin="2,5">
                                    <ProgressBar Value="{Binding Row.ProductProjectFinishProcessing,UpdateSourceTrigger=PropertyChanged}"  
                                             BorderThickness="0" 
                                             Height="auto" Minimum="0" Maximum="100" Background="White" >
                                        <ProgressBar.Foreground>
                                            <Binding Path="Row.ProductProjectFinishProcessing" Converter="{GD_CommonControl:HundredDoubleToSolidBrushConverter}" FallbackValue="{StaticResource clr_DarkRed}"/>
                                        </ProgressBar.Foreground>
                                    </ProgressBar>

                                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal" >
                                        <TextBlock Foreground="Black"
                                        Text="{CalcB:Binding Row.ProductProjectFinishProcessing/100 ,UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:P1}}"  />
                                    </StackPanel>
                                </Grid>
                            </DataTemplate>
                        </dxg:GridColumn.CellTemplate>
                    </dxg:GridColumn>

                    

                    <dxg:GridColumn Header=""   MinWidth="50" 
                                    Width="auto"  AllowResizing="false"  AllowMoving="false"  IsSmart="True">
                        <dxg:GridColumn.HeaderStyle>
                            <Style TargetType="dxg:BaseGridHeader">
                                <Setter Property="dxg:BaseGridColumnHeader.ShowFilterButtonOnHover" Value="False" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="BorderThickness" Value="0,0,0,0" />
                            </Style>
                        </dxg:GridColumn.HeaderStyle>
                        <dxg:GridColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Button 
                                    Command="{Binding Row.ProjectEditCommand}"  Padding="5,2"  Margin="5,0"
                                        ToolTip="{DynamicResource btnEdit}"
                                        MinWidth="50">
                                        <Button.Style>
                                            <Style TargetType="Button" BasedOn="{StaticResource SiegCustomButton_Primary}">
                                                <Setter Property="Content">
                                                    <Setter.Value>
                                                        <Image Name="EditImage"
                                                            Source="{StaticResource Edit_WhiteDrawingImage }"/>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Source={x:Static GD_Singletons:StampingMachineSingleton.Instance},Path=IsBrightMode}" Value="true">
                                                        <Setter Property="Content">
                                                            <Setter.Value>
                                                                <Image Source="{StaticResource Edit_BlackDrawingImage}"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Content">
                                                            <Setter.Value>
                                                                <Image Source="{StaticResource Edit_FocusDrawingImage}"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Background" Value="#f8cbff"/>
                                                        <Setter Property="BorderBrush" Value="#d24fe8"/>
                                                    </Trigger>

                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                    <Button  MinWidth="50" Padding="5,2"   Margin="5,0" ToolTip="{DynamicResource btnDelete}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <i:InvokeCommandAction Command="{Binding Row.ProjectDeleteCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type dxg:GridControl}}}" />
                                                <i:InvokeCommandAction Command="{Binding ElementName=MainGrid ,Path=DataContext.SaveProductListSettingCommand}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <Button.Style>
                                            <Style TargetType="Button" BasedOn="{StaticResource SiegCustomButton_Primary}">
                                                <Setter Property="Content">
                                                    <Setter.Value>
                                                        <Image Name="EditImage"
                                                            Source="{StaticResource Delete_WhiteDrawingImage }"/>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Source={x:Static GD_Singletons:StampingMachineSingleton.Instance},Path=IsBrightMode}" Value="true">
                                                        <Setter Property="Content">
                                                            <Setter.Value>
                                                                <Image Source="{StaticResource Delete_BlackDrawingImage}"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Content">
                                                            <Setter.Value>
                                                                <Image Source="{StaticResource Delete_FocusDrawingImage}"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Background" Value="#ffdcdc"/>
                                                        <Setter Property="BorderBrush" Value="#ee2f2f"/>
                                                    </Trigger>

                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>



                                    </Button>
                                    <Button MinWidth="50"  Padding="5,2"   Margin="5,0"
                                            ToolTip="{DynamicResource btnFinishProject}" IsEnabled="{Binding Row.ProductProjectIsFinish, Converter={dx:BoolInverseConverter}}" Visibility="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled, Converter={dx:BooleanToVisibilityConverter}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <i:InvokeCommandAction Command="{Binding Row.ProjectFinishCommand}" />
                                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxg:GridControl},Path=DataContext.UpdateFiltrationLogicCommand}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <Button.Style>
                                            <Style TargetType="Button" BasedOn="{StaticResource SiegCustomButton_Primary}">
                                                <Setter Property="Content">
                                                    <Setter.Value>
                                                        <Image Name="EditImage"
                                                            Source="{StaticResource Done_WhiteDrawingImage }"/>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Source={x:Static GD_Singletons:StampingMachineSingleton.Instance},Path=IsBrightMode}" Value="true">
                                                        <Setter Property="Content">
                                                            <Setter.Value>
                                                                <Image Source="{StaticResource Done_BlackDrawingImage}"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Content">
                                                            <Setter.Value>
                                                                <Image Source="{StaticResource Done_FocusDrawingImage}"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Background" Value="#b4ff9a"/>
                                                        <Setter Property="BorderBrush" Value="#289c00"/>
                                                    </Trigger>

                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                    <Button MinWidth="50" Padding="5,2" Margin="5,0" ToolTip="{DynamicResource btnCancelFinish}"
                                            IsEnabled="{Binding Row.ProductProjectIsFinish}" Visibility="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled, Converter={dx:BooleanToVisibilityConverter}}" >
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <i:InvokeCommandAction Command="{Binding Row.ProjectFinishCancelCommand}" />
                                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxg:GridControl},Path=DataContext.UpdateFiltrationLogicCommand}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <Button.Style>
                                            <Style TargetType="Button" BasedOn="{StaticResource SiegCustomButton_Dark}">
                                                <Setter Property="Content">
                                                    <Setter.Value>
                                                        <Image Name="EditImage"
                                                            Source="{StaticResource Done_WhiteDrawingImage }"/>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Source={x:Static GD_Singletons:StampingMachineSingleton.Instance},Path=IsBrightMode}" Value="true">
                                                        <Setter Property="Content">
                                                            <Setter.Value>
                                                                <Image Source="{StaticResource Done_BlackDrawingImage}"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Content">
                                                            <Setter.Value>
                                                                <Image Source="{StaticResource Done_FocusDrawingImage}"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Background" Value="#b4ff9a"/>
                                                        <Setter Property="BorderBrush" Value="#289c00"/>
                                                    </Trigger>

                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                </StackPanel>
                            </DataTemplate>
                        </dxg:GridColumn.CellTemplate>
                    </dxg:GridColumn>


                    <dxg:GridColumn Header=""   MinWidth="50" 
                                    Width="auto"  AllowResizing="false"  AllowMoving="false"  IsSmart="True">
                        <dxg:GridColumn.HeaderStyle>
                            <Style TargetType="dxg:BaseGridHeader">
                                <Setter Property="dxg:BaseGridColumnHeader.ShowFilterButtonOnHover" Value="False" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="BorderThickness" Value="0,0,0,0" />
                            </Style>
                        </dxg:GridColumn.HeaderStyle>
                        <dxg:GridColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Button MinWidth="70" Height="30"   Margin="5,0" Padding="5,3,5,0"
                                            Content="{DynamicResource btnReLoad}" Style="{StaticResource SiegCustomButton_Dark}"
                                       IsEnabled="{Binding Row.FileIsNotExisted}" Visibility="{Binding  Row.FileIsNotExisted, Converter={dx:BooleanToVisibilityConverter}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <i:InvokeCommandAction
                                                    Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxg:GridControl},Path=DataContext.ReLoadProductSettingCommand}"
                                                    CommandParameter="{Binding Row}"  
                                                    />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>
                                </StackPanel>
                            </DataTemplate>
                        </dxg:GridColumn.CellTemplate>
                    </dxg:GridColumn>





                </dxg:GridControl>

            </Border>
        </Grid>
        <Grid   Visibility="{Binding ElementName=MainGrid, Path=Visibility, Converter={dx:VisibilityInverseConverter}}" 
                DataContext="{Binding SelectProductProjectVM, IsAsync=True}">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <StackPanel
                    Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,10,0,0">
                    <TextBlock Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}" Text="{Binding ProductProjectNumber}" HorizontalAlignment="Center" FontSize="20"/>
                    <TextBlock Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}" Text="{Binding ProductProjectName}" HorizontalAlignment="Center" FontSize="20" Margin="15,0"/>
                    <TextBlock Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}" Text="{Binding SheetStampingTypeForm, Converter={GD_CommonControl:EnumGetNameConverter}}" HorizontalAlignment="Center" FontSize="20"/>

                    <StackPanel Orientation="Horizontal" Margin="15,0"  Visibility="{Binding ProductProjectIsFinish, Converter={dx:BooleanToVisibilityConverter}}">
                        <TextBlock Text="[" HorizontalAlignment="Center" FontSize="20" Foreground="DarkGray" />
                        <TextBlock Text="{DynamicResource Text_FinishedProject}" HorizontalAlignment="Center" FontSize="20" Foreground="DarkGray" />
                        <TextBlock Text="]" HorizontalAlignment="Center" FontSize="20" Foreground="DarkGray" />
                    </StackPanel>

                </StackPanel>
                <Grid Grid.Row="1"  VerticalAlignment="Bottom"  Margin="10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="{DynamicResource Text_Search}" FontSize="20"  VerticalAlignment="Center"
                               Foreground="{DynamicResource PrimaryHueLightForegroundBrush}"/>
                    <TextBox  Style="{DynamicResource GD_TextBox}"    
                              Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"
                            Grid.Column="1"  Width="300"   Padding="5,1"  Height="auto"
                         materialDesign:HintAssist.Hint="Search Tasks(Ctrl + F)"
                         materialDesign:HintAssist.Foreground="Blue"
                                                     Margin="5,0" Name="ParameterSearchTextBox" />

                    <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right">
                        <StackPanel.Resources >
                            <Style TargetType="TextBlock" BasedOn="{StaticResource Body1TextBlock}">
                                <Setter Property="Foreground" Value="Black"/>
                                <Setter Property="Margin" Value="0,3"/>
                            </Style>

                            <Style TargetType="TextBox" BasedOn="{StaticResource GD_TextBox}" >

                                <Setter Property="BorderBrush" Value="{DynamicResource DarkHueDarkBrush}"/>
                                <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush"  Value="{DynamicResource DarkHueDarkBrush}"/>
                                <Setter Property="Foreground"  Value="{DynamicResource PrimaryHueDarkBrush}"/>
                                <Setter Property="FontSize" Value="16"/>
                                <Setter Property="BorderBrush" Value="Black"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="Width" Value="200"/>
                                <Setter Property="Margin" Value="0,0"/>
                                <Setter Property="Padding" Value="0,0,0,0"/>
                            </Style>
                        </StackPanel.Resources>

                        <ToggleButton IsThreeState="False" 
                                              IsChecked="{Binding IsInParameterPage, Converter={dx:BoolInverseConverter}}"
                                              Width="auto"
                                              Height="auto" Padding="20,2,20,0"  Margin="10,0"
                                              HorizontalAlignment="Center" VerticalAlignment="Center"
                                              Content="{DynamicResource btnExit}" />

                        <StackPanel IsEnabled="{Binding ProductProjectIsFinish, Converter={dx:BoolInverseConverter}}" Orientation="Horizontal">
                            <Button  Name="AddParameterToggleButton"
                                           Command="{x:Static GD_Popup:DraggablePopup.OpenPopupCommand}"  
                                          CommandParameter="{StaticResource TrueValue}"
                                           CommandTarget="{Binding ElementName=AddParameterDarggablePopup}"
                                                  Width="auto"
                                                      Height="auto" Padding="20,2,20,0" 
                                                      HorizontalAlignment="Center" VerticalAlignment="Center"
                                                      Content="{DynamicResource btnAdd}" >
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                        <i:InvokeCommandAction Command="{Binding RefreshSavedCollectionCommand}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>
                            <Button  IsEnabled="{Binding ImportProjectCommand.IsRunning ,Converter={GD_CommonControl:InvertBooleanConverter}}"
                                Name="ImportParameterToggleButton"
                                          Command="{x:Static GD_Popup:DraggablePopup.OpenPopupCommand}"  
                                          CommandParameter="{StaticResource TrueValue}"
                                           CommandTarget="{Binding ElementName=ImportParameterDarggablePopup}"
                                                  Width="auto"
                                                      Height="auto" Padding="20,2,20,0"  Margin="10,0"
                                                      HorizontalAlignment="Center" VerticalAlignment="Center"
                                                      Content="{DynamicResource btnImport}" />
                            
                        </StackPanel>


                        <GD_Popup:DraggablePopup          
                            PlacementTarget="{Binding ElementName=AddParameterToggleButton}" Placement="Relative"
                            PlacementRectangle="-90,50,0,0" 
                            AllowsTransparency="True" Margin="16"   
                            x:Name="EditParameterDarggablePopup" IsOpen="{Binding PartsParameterViewModelSelectItem.EditPartDarggableIsPopup}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Opened">
                                    <i:InvokeCommandAction  Command="{Binding ChangePartsParameterVM_ClonedParameterCommand}" PassEventArgsToCommand="True" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Border 
                                                CornerRadius="10" 
                                               Background="White" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >

                                <Grid MinWidth="100" MinHeight="100" Margin="10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                    </Grid.RowDefinitions>

                                    <TextBlock Grid.Column="1" Grid.Row="0" Text="{DynamicResource Text_EditPart}" Grid.ColumnSpan="3" Margin="0,5" FontWeight="Bold"/>

                                    <TextBlock Grid.Column="0" Grid.Row="1" Text="※" Margin="2,0" VerticalAlignment="Center" Foreground="Red"/>
                                    <TextBlock Grid.Column="0" Grid.Row="2" Text="※" Margin="2,0" VerticalAlignment="Center" Foreground="Red"     Visibility="{Binding SheetStampingTypeForm,Converter={GD_CommonControl:ObjectIsEqualToVisibilityConverter} , ConverterParameter={x:Static GD_Enum:SheetStampingTypeFormEnum.QRSheetStamping}}"/>
                                    <TextBlock Grid.Column="0" Grid.Row="3" Text="※" Margin="2,0" VerticalAlignment="Center" Foreground="Red"     Visibility="{Binding SheetStampingTypeForm,Converter={GD_CommonControl:ObjectIsEqualToVisibilityConverter} , ConverterParameter={x:Static GD_Enum:SheetStampingTypeFormEnum.QRSheetStamping}}"/>
                                    <TextBlock Grid.Column="0" Grid.Row="4" Text="※" Margin="2,0" VerticalAlignment="Center" Foreground="Red"/>
                                    <TextBlock Grid.Column="0" Grid.Row="6" Text="※" Margin="2,0" VerticalAlignment="Center" Foreground="Red"/>
                                    <TextBlock Grid.Column="0" Grid.Row="7" Text="※" Margin="2,0" VerticalAlignment="Center" Foreground="Red"/>


                                    <TextBlock Grid.Column="1" Grid.Row="1" Text="{DynamicResource Text_IronPlateString}"/>
                                    <TextBlock Grid.Column="1" Grid.Row="2" Text="{DynamicResource Text_QrCodeContent}"    Visibility="{Binding SheetStampingTypeForm,Converter={GD_CommonControl:ObjectIsEqualToVisibilityConverter} , ConverterParameter={x:Static GD_Enum:SheetStampingTypeFormEnum.QRSheetStamping}}"/>
                                    <TextBlock Grid.Column="1" Grid.Row="3" Text="{DynamicResource Text_QR_Special_IronPlateString}"    Visibility="{Binding SheetStampingTypeForm,Converter={GD_CommonControl:ObjectIsEqualToVisibilityConverter} , ConverterParameter={x:Static GD_Enum:SheetStampingTypeFormEnum.QRSheetStamping}}"/>


                                    <TextBlock Grid.Column="1" Grid.Row="4" Text="{DynamicResource Text_Parameter_A}"/>
                                    <TextBlock Grid.Column="1" Grid.Row="6" Text="{DynamicResource Text_Parameter_C}"/>
                                    <TextBlock Grid.Column="1" Grid.Row="7" Text="{DynamicResource Text_MachiningForm}" VerticalAlignment="Center"/>

                                    <TextBlock Grid.Column="2" Grid.Row="1" Text="："/>
                                    <TextBlock Grid.Column="2" Grid.Row="2" Text="："     Visibility="{Binding SheetStampingTypeForm,Converter={GD_CommonControl:ObjectIsEqualToVisibilityConverter} , ConverterParameter={x:Static GD_Enum:SheetStampingTypeFormEnum.QRSheetStamping}}"/>
                                    <TextBlock Grid.Column="2" Grid.Row="3" Text="："     Visibility="{Binding SheetStampingTypeForm,Converter={GD_CommonControl:ObjectIsEqualToVisibilityConverter} , ConverterParameter={x:Static GD_Enum:SheetStampingTypeFormEnum.QRSheetStamping}}"/>
                                    <TextBlock Grid.Column="2" Grid.Row="4" Text="："/>
                                    <TextBlock Grid.Column="2" Grid.Row="6" Text="："/>
                                    <TextBlock Grid.Column="2" Grid.Row="7" Text="：" VerticalAlignment="Center"/>


                                    <TextBox Grid.Column="3" Grid.Row="1"  Width="200" Margin="0"  
                                                 Text="{Binding EditPartsParameterVM_Cloned.ParameterA, UpdateSourceTrigger=PropertyChanged}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewKeyUp">
                                                <i:InvokeCommandAction Command="{Binding ChangePartsParameterVM_ClonedParameterCommand}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>

                                    <TextBox Grid.Column="3" Grid.Row="2"  Width="200" Margin="0"  
                                              Visibility="{Binding SheetStampingTypeForm,Converter={GD_CommonControl:ObjectIsEqualToVisibilityConverter} , ConverterParameter={x:Static GD_Enum:SheetStampingTypeFormEnum.QRSheetStamping}}"
                                                 Text="{Binding EditPartsParameterVM_Cloned.ParameterC, UpdateSourceTrigger=PropertyChanged}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewKeyUp">
                                                <i:InvokeCommandAction Command="{Binding ChangePartsParameterVM_ClonedParameterCommand}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>

                                    <TextBox Grid.Column="3" Grid.Row="3"  Width="200" Margin="0"  
                                       Visibility="{Binding SheetStampingTypeForm,Converter={GD_CommonControl:ObjectIsEqualToVisibilityConverter} , ConverterParameter={x:Static GD_Enum:SheetStampingTypeFormEnum.QRSheetStamping}}"
                                                 Text="{Binding EditPartsParameterVM_Cloned.QR_Special_Text, UpdateSourceTrigger=PropertyChanged}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewKeyUp">
                                                <i:InvokeCommandAction Command="{Binding ChangePartsParameterVM_ClonedParameterCommand}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>

                                    <TextBox Grid.Column="3" Grid.Row="4"  Width="200" Margin="0"  
                                                 Text="{Binding EditPartsParameterVM_Cloned.ParameterA, UpdateSourceTrigger=PropertyChanged}" >
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewKeyUp">
                                                <i:InvokeCommandAction Command="{Binding ChangePartsParameterVM_ClonedParameterCommand}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <!--<TextBox.InputBindings>
                                            <KeyBinding Command="{Binding Path=EditPartsParameterVM_ClonedParameter}" />
                                        </TextBox.InputBindings>-->
                                    </TextBox>

                                    
                                    <TextBox Grid.Column="3" Grid.Row="6" 
                                                 Text="{Binding  EditPartsParameterVM_Cloned.ParameterC,UpdateSourceTrigger=PropertyChanged}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewKeyUp">
                                                <i:InvokeCommandAction Command="{Binding ChangePartsParameterVM_ClonedParameterCommand}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>

                                    <ComboBox MaxDropDownHeight="275"           
                                        Margin="10,0" Padding="0" Width="200" Text="123"
                                            Grid.Column="3" Grid.Row="7" 
                                              ItemsSource="{Binding EditNumberSettingSavedCollection, UpdateSourceTrigger=PropertyChanged}"
                                              SelectedItem ="{Binding EditPartsParameterVM_Cloned.SettingBaseVM,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                        <ComboBox.Style>
                                            <Style TargetType="ComboBox" BasedOn="{StaticResource GD_WhiteComboBox}">
                                                <Setter Property="ItemTemplate">
                                                    <Setter.Value>
                                                        <DataTemplate >
                                                            <Grid>
                                                                <Grid Margin="5,0,5,5">
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition Height="auto"/>
                                                                        <RowDefinition/>
                                                                    </Grid.RowDefinitions>
                                                                    <TextBlock Text="{Binding NumberSettingMode}" Foreground="{DynamicResource DarkHueDarkBrush}"/>
                                                                    <StackPanel Grid.Row="1" Orientation="Horizontal" >
                                                                        <GD_SchematicDiagram:QRPlateRowDiagramControl     IsEnabled="False"
                                                                        DataContext="{Binding}" RedMeasurementLineVisibility="Collapsed" >
                                                                            <GD_SchematicDiagram:QRPlateRowDiagramControl.LayoutTransform>
                                                                                <TransformGroup>
                                                                                    <ScaleTransform ScaleX="2" ScaleY="2"/>
                                                                                </TransformGroup>
                                                                            </GD_SchematicDiagram:QRPlateRowDiagramControl.LayoutTransform>
                                                                        </GD_SchematicDiagram:QRPlateRowDiagramControl>
<!--
                                                                        <Grid Visibility="Collapsed"
                                                            RenderTransformOrigin="0.0,0.0" >
                                                                            <Grid.LayoutTransform>
                                                                                <ScaleTransform ScaleX="0.18" ScaleY="0.18" />
                                                                            </Grid.LayoutTransform>
                                                                            <StackPanel>
                                                                                
                                                                                <GD_SchematicDiagram:PlateRowDiagramViewUserControl DataContext="{Binding }"
                                                                                                                                 Visibility="{Binding Converter={GD_CommonControl:ObjectIsEqualToVisibilityConverter IsTypeJudge=True} , ConverterParameter={x:Type GD_ParameterSettingViewModels:NumberSettingViewModel}}"
                                                                                                                                RedMeasurementLineVisibility="Collapsed" />
                                                                                <GD_SchematicDiagram:PlateRowDiagramWithQRViewUserControl DataContext="{Binding }" 
                                                                                                                                          Visibility="{Binding Converter={GD_CommonControl:ObjectIsEqualToVisibilityConverter IsTypeJudge=True} , ConverterParameter={x:Type GD_ParameterSettingViewModels:QRSettingViewModel}}"
                                                                                                                                      RedMeasurementLineVisibility="Collapsed" />

                                                                            </StackPanel>

                                                                        </Grid>-->
                                                                    </StackPanel>
                                                                </Grid>
                                                            </Grid>
                                                        </DataTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ComboBox.Style>
                                    </ComboBox>


                                    <StackPanel  Grid.Row="8" Orientation="Horizontal" Grid.ColumnSpan="4" HorizontalAlignment="Right" Margin="0,5">
                                        <Button Content="{DynamicResource btnClose}" Padding="15,2,15,0">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <i:InvokeCommandAction Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" CommandParameter="{StaticResource FalseValue}"/>
                                                    <i:InvokeCommandAction Command="{Binding RecoverCloneByOverwritePartsParameterCommand}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>





                                        </Button>
                                        <Button Content="{DynamicResource btnSaveChange}" Padding="15,2,15,0"
                                            Command="{Binding OverwritePartsParameterByCloneCommand}"
                                            >

                                        </Button>
                                    </StackPanel>

                                    <!--     
                                    <GroupBox Header="測試用" Grid.Row="8" Width="100" Grid.ColumnSpan="3" Foreground="Red" Style="{StaticResource ParameterBaseStyleGroupBox}">
                                        <StackPanel>
                                            <TextBlock Text="{Binding EditPartsParameterVM_Cloned.FinishProgress}" Foreground="Red"/>
                                            <Slider Value="{Binding EditPartsParameterVM_Cloned.FinishProgress}" Maximum="100" Minimum="0"/>
                                           <dxe:ComboBoxEdit EditValue="{Binding EditPartsParameterVM_Cloned.MachiningStatus, UpdateSourceTrigger=PropertyChanged}" Foreground="Red" Margin="0,10">
                                                <dxmvvm:Interaction.Behaviors>
                                                    <dxmvvm:EnumItemsSourceBehavior EnumType="{x:Type GD_Enum:MachiningStatusEnum}" ImageSize="40,40" AllowImages="False" />
                                                </dxmvvm:Interaction.Behaviors>
                                            </dxe:ComboBoxEdit>
                                        </StackPanel>
                                    </GroupBox>
                                    -->

                                </Grid>
                            </Border>
                        </GD_Popup:DraggablePopup>

                        <GD_Popup:DraggablePopup 
                            PlacementTarget="{Binding ElementName=AddParameterToggleButton}" Placement="Relative"
                            PlacementRectangle="-180,50,0,0"
                            AllowsTransparency="True" Margin="16" 
                            x:Name="AddParameterDarggablePopup" IsOpen="{Binding AddParameterDarggableIsPopup}">
                            <Border
                                                CornerRadius="10"
                                               Background="White" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >

                                <Grid MinWidth="100" MinHeight="100" Margin="10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                    </Grid.RowDefinitions>

                                    <TextBlock Grid.Column="1" Grid.Row="0" Text="{DynamicResource Text_CreatePart}" Grid.ColumnSpan="3" Margin="0,5" FontWeight="Bold"/>                                
                                
                                    <TextBlock Grid.Column="0" Grid.Row="1" Text="※" Margin="2,0" VerticalAlignment="Center" Foreground="Red"/>
                                    <TextBlock Grid.Column="0" Grid.Row="2" Text="※" Margin="2,0" VerticalAlignment="Center" Foreground="Red"   Visibility="{Binding SheetStampingTypeForm,Converter={GD_CommonControl:ObjectIsEqualToVisibilityConverter} , ConverterParameter={x:Static GD_Enum:SheetStampingTypeFormEnum.QRSheetStamping}}"/>
                                    <TextBlock Grid.Column="0" Grid.Row="3" Text="※" Margin="2,0" VerticalAlignment="Center" Foreground="Red"   Visibility="{Binding SheetStampingTypeForm,Converter={GD_CommonControl:ObjectIsEqualToVisibilityConverter} , ConverterParameter={x:Static GD_Enum:SheetStampingTypeFormEnum.QRSheetStamping}}"/>
                                    <TextBlock Grid.Column="0" Grid.Row="4" Text="※" Margin="2,0" VerticalAlignment="Center" Foreground="Red"/>

                                    <TextBlock Grid.Column="1" Grid.Row="1" Text="{DynamicResource Text_Parameter_A}" Margin="0,2"/>
                                    <TextBlock Grid.Column="1" Grid.Row="2" Text="{DynamicResource Text_Parameter_C}" Margin="0,2"  Visibility="{Binding SheetStampingTypeForm,Converter={GD_CommonControl:ObjectIsEqualToVisibilityConverter} , ConverterParameter={x:Static GD_Enum:SheetStampingTypeFormEnum.QRSheetStamping}}"/>
                                    <TextBlock Grid.Column="1" Grid.Row="3" Text="{DynamicResource Text_QR_Special_IronPlateString}"  Margin="0,2"  Visibility="{Binding SheetStampingTypeForm,Converter={GD_CommonControl:ObjectIsEqualToVisibilityConverter} , ConverterParameter={x:Static GD_Enum:SheetStampingTypeFormEnum.QRSheetStamping}}"/>


                                    <TextBlock Grid.Column="1" Grid.Row="4" Text="{DynamicResource Text_MachiningForm}" Margin="0,2" VerticalAlignment="Center"/>


                                    <TextBlock Grid.Column="1" Grid.Row="5"  VerticalAlignment="Center" Margin="0,2"
                                                   Text="{DynamicResource textDashAutoWrapping}"/>
                                    <TextBlock Grid.Column="1" Grid.Row="6"  VerticalAlignment="Center" Margin="0,2"
                                                   Text="{DynamicResource textCount}"/>




                                    <TextBlock Grid.Column="2" Grid.Row="1" Text="：" />
                                    <TextBlock Grid.Column="2" Grid.Row="2" Text="：" Visibility="{Binding SheetStampingTypeForm,Converter={GD_CommonControl:ObjectIsEqualToVisibilityConverter} , ConverterParameter={x:Static GD_Enum:SheetStampingTypeFormEnum.QRSheetStamping}}"/>
                                     <TextBlock Grid.Column="2" Grid.Row="3" Text="："  Visibility="{Binding SheetStampingTypeForm,Converter={GD_CommonControl:ObjectIsEqualToVisibilityConverter} , ConverterParameter={x:Static GD_Enum:SheetStampingTypeFormEnum.QRSheetStamping}}"/>

                                    <TextBlock Grid.Column="2" Grid.Row="4" Text="：" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Column="2" Grid.Row="5" Text="：" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Column="2" Grid.Row="6" Text="：" VerticalAlignment="Center"/>







                                    <TextBox Grid.Column="3" Grid.Row="1"  Width="200" Margin="0"  
                                                 Text="{Binding AddNewPartsParameterVM_ParameterA, UpdateSourceTrigger=PropertyChanged}">

                                    </TextBox>

                                    <TextBox Grid.Column="3" Grid.Row="2"   Visibility="{Binding SheetStampingTypeForm,Converter={GD_CommonControl:ObjectIsEqualToVisibilityConverter} , ConverterParameter={x:Static GD_Enum:SheetStampingTypeFormEnum.QRSheetStamping}}"
                                                 Text="{Binding  AddNewPartsParameterVM_ParameterC,UpdateSourceTrigger=PropertyChanged}">
                                    </TextBox>

                                    <TextBox Grid.Column="3" Grid.Row="3"  Width="200" Margin="0"  
                                       Visibility="{Binding SheetStampingTypeForm,Converter={GD_CommonControl:ObjectIsEqualToVisibilityConverter} , ConverterParameter={x:Static GD_Enum:SheetStampingTypeFormEnum.QRSheetStamping}}"
                                                 Text="{Binding AddNewPartsParameterVM_QR_Special_Text, UpdateSourceTrigger=PropertyChanged}">
                                    </TextBox>
                                    



                                    <ComboBox  Name="AddNewPartsSettingBaseVMComboBox"
                                        Margin="10,0" Padding="0" Width="200" Text="123"  
                                            Grid.Column="3" Grid.Row="4"   MaxDropDownHeight="275" 
                                              ItemsSource="{Binding AddNumberSettingSavedCollection, UpdateSourceTrigger=PropertyChanged}" 
                                              SelectedItem="{Binding AddNewPartsParameterVM.SettingBaseVM ,UpdateSourceTrigger=PropertyChanged}">
                                        <ComboBox.Style>
                                            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource GD_WhiteComboBox}">
                                                <Setter Property="ItemTemplate">
                                                    <Setter.Value>
                                                        <DataTemplate >
                                                            <Grid>
                                                                <Grid Margin="5,0,5,5">
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition Height="auto"/>
                                                                        <RowDefinition/>
                                                                    </Grid.RowDefinitions>
                                                                    <TextBlock Text="{Binding NumberSettingMode}" Foreground="{DynamicResource DarkHueDarkBrush}"/>
                                                                    <GD_SchematicDiagram:QRPlateRowDiagramControl     IsEnabled="False"
                                                                        DataContext="{Binding}" RedMeasurementLineVisibility="Collapsed" >
                                                                        <GD_SchematicDiagram:QRPlateRowDiagramControl.LayoutTransform>
                                                                            <TransformGroup>
                                                                                <ScaleTransform ScaleX="2" ScaleY="2"/>
                                                                            </TransformGroup>
                                                                        </GD_SchematicDiagram:QRPlateRowDiagramControl.LayoutTransform>
                                                                    </GD_SchematicDiagram:QRPlateRowDiagramControl>
                                                                    <!--<StackPanel Grid.Row="1" Orientation="Horizontal" Visibility="Collapsed">
                                                                        <Grid 
                                                            RenderTransformOrigin="0.0,0.0" >
                                                                            <Grid.LayoutTransform>
                                                                                <ScaleTransform ScaleX="0.19" ScaleY="0.19" />
                                                                            </Grid.LayoutTransform>
                                                                            <StackPanel IsEnabled="False">
                                                                                <GD_SchematicDiagram:PlateRowDiagramViewUserControl DataContext="{Binding }"
                                                                                                                                 Visibility="{Binding Converter={GD_CommonControl:ObjectIsEqualToVisibilityConverter IsTypeJudge=True} , ConverterParameter={x:Type GD_ParameterSettingViewModels:NumberSettingViewModel}}"
                                                                                                                                RedMeasurementLineVisibility="Collapsed" />
                                                                                <GD_SchematicDiagram:PlateRowDiagramWithQRViewUserControl DataContext="{Binding }" 
                                                                                                                                          Visibility="{Binding Converter={GD_CommonControl:ObjectIsEqualToVisibilityConverter IsTypeJudge=True} , ConverterParameter={x:Type GD_ParameterSettingViewModels:QRSettingViewModel}}"
                                                                                                                                      RedMeasurementLineVisibility="Collapsed" />

                                                                            </StackPanel>

                                                                        </Grid>
                                                                    </StackPanel>-->
                                                                </Grid>
                                                            </Grid>
                                                        </DataTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ComboBox.Style>
                                    </ComboBox>
                                    
                                    
                                    <CheckBox  Style="{StaticResource SkyBlueSwitch }" Foreground="Red" Height="20" 
                                        VerticalAlignment="Center" HorizontalAlignment="Left"
                                        Grid.Row="5" Grid.Column="3" IsChecked="{Binding AddNewPartsParameterVM.SettingBaseVM.DashAutoWrapping}" IsThreeState="False"
                                              Margin="10,0"/>
                                    <TextBox  Text="{Binding AddNewPartsCount, UpdateSourceTrigger=PropertyChanged}"
                                        VerticalAlignment="Center" HorizontalAlignment="Left"
                                        Grid.Row="6" Grid.Column="3" 
                                              Margin="10,0"/>


                                    <StackPanel  Grid.Row="7" Orientation="Horizontal" Grid.ColumnSpan="4" HorizontalAlignment="Right" Margin="0,5">
                                        <Button  Padding="10,2,10,0"   Margin="5,0"
                                                                    Content="{DynamicResource btnCancel}"
                                                                  Command="{x:Static GD_Popup:DraggablePopup.ClosePopupCommand}" CommandParameter="{StaticResource FalseValue}">
                                        </Button>
                                        <Button Padding="10,2,10,0"   Margin="5,0"
                                            Content="{DynamicResource btnCreate}" Command="{Binding CreatePartCommand}">
                                            <Button.IsEnabled>
                                                <MultiBinding Converter="{GD_CommonControl:MultiValueNotContainNullToBooleanConverter}">
                                                    <Binding Path="AddNewPartsParameterVM.ParameterA"/>
                                                    <Binding ElementName="AddNewPartsSettingBaseVMComboBox" Path="SelectedItem" UpdateSourceTrigger="PropertyChanged"/>
                                                </MultiBinding>
                                            </Button.IsEnabled>
                                        </Button>
                                    </StackPanel>


                                </Grid>
                            </Border>
                        </GD_Popup:DraggablePopup>

                        <GD_Popup:DraggablePopup 
                                                        PlacementTarget="{Binding ElementName=AddParameterToggleButton}" Placement="Relative"
                      
                               PlacementRectangle="-175,50,0,0"
                            AllowsTransparency="True" Margin="16"  
                            AllowTopMost="False" x:Name="ImportParameterDarggablePopup" IsOpen="{Binding ImportParameterDarggableIsPopup}">
                            <Border
                                                CornerRadius="10"
                                               Background="White" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >


                                <Grid MinWidth="100" MinHeight="100" Margin="10">
                                 
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                    </Grid.RowDefinitions>

                                    <TextBlock  Margin="0,5"
                                        VerticalAlignment="Center" Grid.Column="1" Grid.Row="0" Text="{DynamicResource Text_CreateOrEditProject}" Grid.ColumnSpan="3"  FontWeight="Bold"/>

                                    <TextBlock  VerticalAlignment="Center" Grid.Column="0" Grid.Row="1" Text="※" Margin="2,5" Foreground="Red"/>

                                    <TextBlock  VerticalAlignment="Center" Grid.Column="1" Grid.Row="1"  Margin="0,2"
                                                Text="{DynamicResource Text_SavePath}"/>
                                    <TextBlock  VerticalAlignment="Center" Grid.Column="1" Grid.Row="2" Margin="0,2"
                                                Text="{DynamicResource btnNumberSetting}" />

                                    <TextBlock Grid.Column="1" Grid.Row="3"  VerticalAlignment="Center" Margin="0,2"
                                                   Text="{DynamicResource textDashAutoWrapping}"/>

                                    <TextBlock Grid.Column="1" Grid.Row="4" Text="{DynamicResource btnDataMatrixSetting}" Margin="0,2"
                                               VerticalAlignment="Center"/>

                                    <TextBlock Grid.Column="1" Grid.Row="5"  VerticalAlignment="Center" Margin="0,2"
                                                   Text="{DynamicResource textDashAutoWrapping}"/>

                                    <TextBlock Grid.Column="2" Grid.Row="1" Text="："  VerticalAlignment="Center"/>
                                    <TextBlock Grid.Column="2" Grid.Row="2" Text="：" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Column="2" Grid.Row="3" Text="：" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Column="2" Grid.Row="4" Text="：" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Column="2" Grid.Row="5" Text="：" VerticalAlignment="Center"/>

                                    <Grid Grid.Column="3" Grid.Row="1"  >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition  />
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBox Margin="10,0" Padding="0"    Width="200"
                                                 Text="{Binding ImportFilePath, UpdateSourceTrigger=PropertyChanged}" 
                                                 ToolTip="{Binding ImportFilePath, UpdateSourceTrigger=PropertyChanged}"
                                                 >
                                        </TextBox>

                                        <Button Grid.Column="1" Command="{Binding ImportProject_SelectPathFolderCommand}" Margin="2,0" Width="50" Height="30" MinWidth="0"  Padding="0">
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource SiegCustomButton}" >
                                                    <Setter Property="BorderThickness" Value="0"/>
                                                    <Setter Property="Content">
                                                        <Setter.Value>
                                                            <materialDesign:PackIcon Kind="Folder" Width="20" Height="20"/>
                                                        </Setter.Value>
                                                    </Setter>

                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Content">
                                                                <Setter.Value>
                                                                    <materialDesign:PackIcon Kind="FolderOpen" Width="20" Height="20"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter Property="Content">
                                                                <Setter.Value>
                                                                    <materialDesign:PackIcon Kind="FolderArrowUp"  Width="20" Height="20"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                        <Button Grid.Column="2" Command="{Binding ImportProject_SelectPathFileCommand}" Margin="2,0" Width="50" Height="30" MinWidth="0"  Padding="0">
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource SiegCustomButton}" >
                                                    <Setter Property="BorderThickness" Value="0"/>
                                                    <Setter Property="Content">
                                                        <Setter.Value>
                                                            <materialDesign:PackIcon Kind="File" Width="20" Height="20"/>
                                                        </Setter.Value>
                                                    </Setter>

                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Content">
                                                                <Setter.Value>
                                                                    <materialDesign:PackIcon Kind="FileArrowUpDown" Width="20" Height="20"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter Property="Content">
                                                                <Setter.Value>
                                                                    <materialDesign:PackIcon Kind="FolderArrowUp"  Width="20" Height="20"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                    </Grid>

                                    <ComboBox HorizontalAlignment="Left" 
                                        Margin="10,0" Padding="0" Width="310" Text="123" 
                                            Grid.Column="3" Grid.Row="2"   MaxDropDownHeight="275" Grid.ColumnSpan="2"
                                              ItemsSource="{Binding Source={x:Static GD_Singletons:StampingMachineSingleton.Instance},
                                        Path=ParameterSettingVM.NumberSettingPageVM.NumberSettingModelCollection, UpdateSourceTrigger=PropertyChanged}"
                                              SelectedItem="{Binding ImportProjectNumberSettingBaseVM ,UpdateSourceTrigger=PropertyChanged}">
                                        <ComboBox.Style>
                                            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource GD_WhiteComboBox}">
                                                <Setter Property="ItemTemplate">
                                                    <Setter.Value>
                                                        <DataTemplate >
                                                            <Grid>
                                                                <Grid Margin="5,0,5,5">
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition Height="auto"/>
                                                                        <RowDefinition/>
                                                                    </Grid.RowDefinitions>
                                                                    <TextBlock Text="{Binding NumberSettingMode}" Foreground="{DynamicResource DarkHueDarkBrush}"/>
                                                                    <StackPanel Grid.Row="1" Orientation="Vertical" >
                                                                        <!--
                                                                        <Grid 
                                                            RenderTransformOrigin="0.0,0.0" >
                                                                            <Grid.LayoutTransform>
                                                                                <ScaleTransform ScaleX="0.19" ScaleY="0.19" />
                                                                            </Grid.LayoutTransform>
                                                                            <StackPanel>
                                                                                <GD_SchematicDiagram:PlateRowDiagramViewUserControl DataContext="{Binding }" IsEnabled="False"
                                                                                                                                    RedMeasurementLineVisibility="Collapsed" />
                                                                                

                                                                            </StackPanel>

                                                                        </Grid>-->
                                                                        <GD_SchematicDiagram:QRPlateRowDiagramControl     IsEnabled="False"
                                                                        DataContext="{Binding}" RedMeasurementLineVisibility="Collapsed" >
                                                                            <GD_SchematicDiagram:QRPlateRowDiagramControl.LayoutTransform>
                                                                                <TransformGroup>
                                                                                    <ScaleTransform ScaleX="2" ScaleY="2"/>
                                                                                </TransformGroup>
                                                                            </GD_SchematicDiagram:QRPlateRowDiagramControl.LayoutTransform>
                                                                        </GD_SchematicDiagram:QRPlateRowDiagramControl>
                                                                    </StackPanel>
                                                                </Grid>
                                                            </Grid>
                                                        </DataTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ComboBox.Style>
                                    </ComboBox>

                                    <CheckBox  Style="{StaticResource SkyBlueSwitch }"  Height="20" 
                                        VerticalAlignment="Center" HorizontalAlignment="Left"
                                        Grid.Row="3" Grid.Column="3" IsChecked="{Binding ImportProjectNumberSettingBaseVM.DashAutoWrapping}" IsThreeState="False"
                                              Margin="10,0"/>

                                    <ComboBox HorizontalAlignment="Left"
                                        Margin="10,0" Padding="0" Width="310" Text="123" 
                                            Grid.Column="3" Grid.Row="4"   MaxDropDownHeight="275"  Grid.ColumnSpan="2"
                                              ItemsSource="{Binding Source={x:Static GD_Singletons:StampingMachineSingleton.Instance},
                                        Path=ParameterSettingVM.QRSettingPageVM.QRSettingModelCollection, UpdateSourceTrigger=PropertyChanged}"
                                              SelectedItem="{Binding ImportProjectQRSettingBaseVM ,UpdateSourceTrigger=PropertyChanged}">
                                        <ComboBox.Style>
                                            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource GD_WhiteComboBox}">
                                                <Setter Property="ItemTemplate">
                                                    <Setter.Value>
                                                        <DataTemplate >
                                                            <Grid>
                                                                <Grid Margin="5,0,5,5">
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition Height="auto"/>
                                                                        <RowDefinition/>
                                                                    </Grid.RowDefinitions>
                                                                    <TextBlock Text="{Binding NumberSettingMode}" Foreground="{DynamicResource DarkHueDarkBrush}"/>
                                                                    <StackPanel Grid.Row="1" Orientation="Horizontal" >
                                                                        <!--
                                                                        <Grid 
                                                            RenderTransformOrigin="0.0,0.0" >
                                                                            <Grid.LayoutTransform>
                                                                                <ScaleTransform ScaleX="0.19" ScaleY="0.19" />
                                                                            </Grid.LayoutTransform>
                                                                            <StackPanel>
                                                                                <GD_SchematicDiagram:PlateRowDiagramWithQRViewUserControl DataContext="{Binding }"  IsEnabled="False"
                                                                                                                                             RedMeasurementLineVisibility="Collapsed" />

                                                                            </StackPanel>

                                                                        </Grid>-->
                                                                        <GD_SchematicDiagram:QRPlateRowDiagramControl     IsEnabled="False"
                                                                        DataContext="{Binding}" RedMeasurementLineVisibility="Collapsed" >
                                                                            <GD_SchematicDiagram:QRPlateRowDiagramControl.LayoutTransform>
                                                                                <TransformGroup>
                                                                                    <ScaleTransform ScaleX="2" ScaleY="2"/>
                                                                                </TransformGroup>
                                                                            </GD_SchematicDiagram:QRPlateRowDiagramControl.LayoutTransform>
                                                                        </GD_SchematicDiagram:QRPlateRowDiagramControl>
                                                                    </StackPanel>
                                                                </Grid>
                                                            </Grid>
                                                        </DataTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ComboBox.Style>
                                    </ComboBox>


                                    <CheckBox  Style="{StaticResource SkyBlueSwitch }"  Height="20" 
                                        VerticalAlignment="Center" HorizontalAlignment="Left"
                                        Grid.Row="5" Grid.Column="3" IsChecked="{Binding ImportProjectQRSettingBaseVM.DashAutoWrapping}" IsThreeState="False"
                                              Margin="10,0"/>




                                    <StackPanel  Grid.Row="6" Orientation="Horizontal" Grid.ColumnSpan="4" HorizontalAlignment="Right" Margin="0,5">
                                        <Button   Padding="10,2,10,0"   Margin="5,0"
                                                                    Content="{DynamicResource btnCancel}"
                                                                    Command="{x:Static GD_Popup:DraggablePopup.ClosePopupCommand}" CommandParameter="{StaticResource FalseValue}">
                                        </Button>
                                        <Button Padding="10,2,10,0"   Margin="5,0"
                                            Content="{DynamicResource btnImport}">
                                            <Button.IsEnabled>
                                                <MultiBinding Converter="{GD_CommonControl:MultiValueNotContainNullToBooleanConverter}">
                                                    <Binding Path="ImportFilePath"/>
                                                </MultiBinding>
                                            </Button.IsEnabled>
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <i:InvokeCommandAction Command="{Binding ImportProjectCommand}" />
                                                    <i:InvokeCommandAction Command="{x:Static GD_Popup:DraggablePopup.ClosePopupCommand}" CommandParameter="{StaticResource FalseValue}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </Button>
                                    </StackPanel>



                                </Grid>
                            </Border>
                        </GD_Popup:DraggablePopup>

                        
                    </StackPanel>
                </Grid>
            </Grid>
            <Border  Name="SelectProductProjectMainBorder"  
                    Margin="10" Grid.Row="1"  
                 Background="Transparent" 
                 BorderThickness="0"  
                 BorderBrush="#595E60" >

                <dxg:GridControl x:Name="ProjectGridControl"    
                             
                                      Background="Transparent"
                                      ItemsSource="{Binding PartsParameterVMObservableCollection, Mode=TwoWay, 
                    UpdateSourceTrigger=PropertyChanged,IsAsync=True}"
                                      DataAreaBackground="Transparent" 
                                      Style="{StaticResource ProjectGridControl}"
                                      AutoGenerateColumns="None"  
                                      SelectedItem="{Binding PartsParameterViewModelSelectItem}"
                                      >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectedItemChanged">
                            <i:InvokeCommandAction Command="{Binding PartsParameterViewModelSelectedItemChangedCommand}" 
                                                   PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="SizeChanged">
                                <i:InvokeCommandAction Command="{Binding GridControlSizeChangedCommand}" 
                                                   PassEventArgsToCommand="True" />
                            </i:EventTrigger>
                    </i:Interaction.Triggers>
                    

                    <dxg:GridControl.View >
                        <dxg:TableView    
                                SearchString="{Binding ElementName=ParameterSearchTextBox, Path=Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, IsAsync=True}"

                                AllowPaging="True"
                                IsColumnMenuEnabled ="False"
                                AllowSorting="false"
                                AllowColumnFiltering="False"
                                AllowColumnMoving="False"
                                AllowEditing="False"
                                ShowColumnHeaders="True"
                                HeaderHorizontalAlignment="Center"
                                VerticalScrollbarVisibility="Auto"
                                HorizontalScrollbarVisibility="Auto"
                                ShowGroupPanel="False"
                                ShowSearchPanelMode="Never"
                                SearchPanelNullText="Search Tasks(Ctrl + F)" 
                                SearchPanelFindMode="Always"
                                ShowIndicator="False"
                                SearchDelay="0" 
                        >
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SizeChanged">
                                    <i:InvokeCommandAction Command="{Binding GridControlSizeChangedCommand}" 
                                                   PassEventArgsToCommand="True" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>



                        </dxg:TableView>
                    </dxg:GridControl.View>

                    <dxg:GridColumn FixedWidth="True"   
                            HorizontalHeaderContentAlignment="Center"  Header="{DynamicResource Text_TypeSetting_Already}" FieldName="DistributeName" Width="auto" AllowMoving="false"  IsSmart="True">
                        <dxg:GridColumn.EditSettings>
                            <dxe:TextEditSettings HorizontalContentAlignment="Left"/>
                        </dxg:GridColumn.EditSettings>
                        <dxg:GridColumn.CellTemplate>
                            <DataTemplate>
                                <Grid HorizontalAlignment="Center" Visibility="{Binding Row.DistributeName , Converter={GD_CommonControl:ObjectIsNullToVisibilityConverter}}">
                                    <Image Source="{StaticResource GreenChecked_DrawingImage}"/>
                                </Grid>
                            </DataTemplate>
                        </dxg:GridColumn.CellTemplate>
                    </dxg:GridColumn>

                    <dxg:GridColumn  HorizontalHeaderContentAlignment="Left"  Header="{DynamicResource Text_TypeSettingProject}" FieldName="DistributeName" Width="auto" AllowMoving="false"  IsSmart="True">
                        <dxg:GridColumn.EditSettings>
                            <dxe:TextEditSettings HorizontalContentAlignment="Left"/>
                        </dxg:GridColumn.EditSettings>
                    </dxg:GridColumn>





                    <dxg:GridColumn  HorizontalHeaderContentAlignment="Left"  Header="{DynamicResource Text_Parameter_A}" FieldName="ParameterA" Width="auto" AllowMoving="false"  IsSmart="True">
                        <dxg:GridColumn.EditSettings>
                            <dxe:TextEditSettings HorizontalContentAlignment="Left"/>
                        </dxg:GridColumn.EditSettings>
                    </dxg:GridColumn>


                    <dxg:GridColumn  HorizontalHeaderContentAlignment="Left"  Header="{DynamicResource Text_Parameter_C_DataMartix}" FieldName="ParameterC" Width="auto" AllowMoving="false"  IsSmart="True">
                        <dxg:GridColumn.EditSettings>
                            <dxe:TextEditSettings HorizontalContentAlignment="Left"/>
                        </dxg:GridColumn.EditSettings>
                    </dxg:GridColumn>

                    <dxg:GridColumn  HorizontalHeaderContentAlignment="Left"  Header="{DynamicResource Text_QR_Special_IronPlateString}" FieldName="QR_Special_Text" Width="auto" AllowMoving="false"  IsSmart="True">
                        <dxg:GridColumn.EditSettings>
                            <dxe:TextEditSettings HorizontalContentAlignment="Left"/>
                        </dxg:GridColumn.EditSettings>
                    </dxg:GridColumn>

                    <dxg:GridColumn  
                            HorizontalHeaderContentAlignment="Left"  Header="{DynamicResource Text_MachiningForm}" FieldName="SettingBaseVM.NumberSettingMode"  Width="auto" AllowMoving="false"  IsSmart="True">
                        <dxg:GridColumn.EditSettings>
                            <dxe:TextEditSettings HorizontalContentAlignment="Left"/>
                        </dxg:GridColumn.EditSettings>
                    </dxg:GridColumn>

                    <dxg:GridColumn  
                            HorizontalHeaderContentAlignment="Left"   Width="auto" AllowMoving="false"  IsSmart="True">
                        <dxg:GridColumn.EditSettings>
                            <dxe:TextEditSettings HorizontalContentAlignment="Left"/>
                        </dxg:GridColumn.EditSettings>
                        <dxg:GridColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <ToggleButton Padding="0" Margin="1" x:Name="MachiningFormTButton">
                                        <ToggleButton.Style>
                                            <Style TargetType="ToggleButton" BasedOn="{StaticResource GD_MainToggleButton}">
                                                <Setter Property="Width" Value="auto"/>
                                                <Setter Property="Height" Value="auto"/>
                                                <Setter Property="BorderThickness" Value="0"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="ToggleButton">
                                                            <Grid>
                                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="IsChecked" Value="True"/>
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Foreground" Value="Black"/>
                                                        <Setter Property="Background" Value="{StaticResource ToggleButtonBackgroundSkyBlueBrush}"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                        <Grid>
                                            <GD_SchematicDiagram:QRPlateRowDiagramControl   
                            DataContext="{Binding Row.SettingBaseVM}" RedMeasurementLineVisibility="Collapsed" >
                                            </GD_SchematicDiagram:QRPlateRowDiagramControl>
                                        </Grid>
                                    </ToggleButton>

                                    <GD_Popup:NonTopmostPopup StaysOpen="True" Width="400" 
                                                                        PopupAnimation="Scroll"   FlowDirection="LeftToRight"
                                                                        Placement="Bottom"   
                                                                        PlacementTarget="{Binding ElementName=MachiningFormTButton}"
                                                                        HorizontalAlignment="Center" 
                                                                        IsOpen="{Binding ElementName=MachiningFormTButton, Path=IsChecked, Mode=TwoWay}">

                                        <Grid>
                                            <Viewbox>
                                            <GD_SchematicDiagram:QRPlateRowDiagramControl     
                            DataContext="{Binding Row.SettingBaseVM}" RedMeasurementLineVisibility="Collapsed" >
                                                </GD_SchematicDiagram:QRPlateRowDiagramControl>
                                            </Viewbox>
                                        </Grid>
                                    </GD_Popup:NonTopmostPopup>
                                </Grid>

                            </DataTemplate>
                        </dxg:GridColumn.CellTemplate>
                    </dxg:GridColumn>


                    <dxg:GridColumn  Header="{DynamicResource Text_FinishProgress}" FieldName="ProductProject.FinishProgress"
                                 Width="100" AllowMoving="false"  IsSmart="True" HorizontalHeaderContentAlignment="Center">
                        <dxg:GridColumn.CellTemplate>
                            <DataTemplate>
                                <Grid Height="auto" Margin="2,5">
                                    <ProgressBar Value="{Binding Row.FinishProgress,UpdateSourceTrigger=PropertyChanged}"  
                                             BorderThickness="0" 
                                             Height="auto" Minimum="0" Maximum="100" Background="White" >
                                        <ProgressBar.Foreground>
                                            <Binding Path="Row.FinishProgress" Converter="{GD_CommonControl:HundredDoubleToSolidBrushConverter}" FallbackValue="{StaticResource clr_DarkRed}"/>
                                        </ProgressBar.Foreground>
                                    </ProgressBar>

                                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal" >
                                        <TextBlock Foreground="Black" Padding="0,2,0,0"
                                        Text="{CalcB:Binding Row.FinishProgress/100 ,UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:P1}}"  />
                                    </StackPanel>
                                </Grid>
                            </DataTemplate>
                        </dxg:GridColumn.CellTemplate>
                    </dxg:GridColumn>






                    <dxg:GridColumn  HorizontalHeaderContentAlignment="Center"  Header="" FieldName="ProductProject.EditTime" Width="auto"  AllowResizing="false"  AllowMoving="false" IsSmart="True">
                        <dxg:GridColumn.HeaderStyle>
                            <Style TargetType="dxg:BaseGridHeader">
                                <Setter Property="dxg:BaseGridColumnHeader.ShowFilterButtonOnHover" Value="False" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="BorderThickness" Value="0,0,0,0" />
                            </Style>
                        </dxg:GridColumn.HeaderStyle>
                        <dxg:GridColumn.CellTemplate>
                            <DataTemplate>
                                <Button ToolTip="{DynamicResource btnEdit}"     Margin="5,0"
                                        IsEnabled="{Binding ElementName=ProjectGridControl, Path=DataContext.ProductProjectIsFinish, Converter={GD_CommonControl:InvertBooleanConverter}}"
                                        Command="{Binding Row.ProjectEditCommand}" Height="30" MinWidth="50">

                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource SiegCustomButton_Primary}">
                                            <Setter Property="Content">
                                                <Setter.Value>
                                                    <Image Name="EditImage"
                                                            Source="{StaticResource Edit_WhiteDrawingImage }"/>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Source={x:Static GD_Singletons:StampingMachineSingleton.Instance},Path=IsBrightMode}" Value="true">
                                                    <Setter Property="Content">
                                                        <Setter.Value>
                                                            <Image Source="{StaticResource Edit_BlackDrawingImage}"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Content">
                                                        <Setter.Value>
                                                            <Image Source="{StaticResource Edit_FocusDrawingImage}"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="Background" Value="#f8cbff"/>
                                                    <Setter Property="BorderBrush" Value="#d24fe8"/>
                                                </Trigger>

                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </DataTemplate>
                        </dxg:GridColumn.CellTemplate>
                    </dxg:GridColumn>

                    <!--https://www.grapecity.com/blogs/using-mvvm-to-remove-rows-from-wpf-datagrid-->
                    <!--刪除指令-->
                    <dxg:GridColumn 
                        Header="" FieldName="ProductProject.EditTime" Width="auto"  AllowResizing="false"  AllowMoving="false"  IsSmart="True">
                        <dxg:GridColumn.HeaderStyle>
                            <Style TargetType="dxg:BaseGridHeader">
                                <Setter Property="dxg:BaseGridColumnHeader.ShowFilterButtonOnHover" Value="False" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="BorderThickness" Value="0,0,0,0" />
                            </Style>
                        </dxg:GridColumn.HeaderStyle>
                        <dxg:GridColumn.CellTemplate>
                            <DataTemplate>
                                <Button Height="30" MinWidth="50" Margin="5,0"
                                        IsEnabled="{Binding ElementName=ProjectGridControl, Path=DataContext.ProductProjectIsFinish, Converter={GD_CommonControl:InvertBooleanConverter}}"
                                        ToolTip="{DynamicResource btnDelete}" Command="{Binding Row.ProjectDeleteCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type dxg:GridControl}}}" >
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource SiegCustomButton_Primary}">
                                            <Setter Property="Content">
                                                <Setter.Value>
                                                    <Image Name="EditImage"
                                                            Source="{StaticResource Delete_WhiteDrawingImage }"/>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Source={x:Static GD_Singletons:StampingMachineSingleton.Instance},Path=IsBrightMode}" Value="true">
                                                    <Setter Property="Content">
                                                        <Setter.Value>
                                                            <Image Source="{StaticResource Delete_BlackDrawingImage}"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Content">
                                                        <Setter.Value>
                                                            <Image Source="{StaticResource Delete_FocusDrawingImage}"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="Background" Value="#ffdcdc"/>
                                                    <Setter Property="BorderBrush" Value="#ee2f2f"/>
                                                </Trigger>

                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>

                                </Button>
                            </DataTemplate>
                        </dxg:GridColumn.CellTemplate>
                    </dxg:GridColumn>





                </dxg:GridControl>

            </Border>


        </Grid>
    </Grid>
    
</UserControl>
