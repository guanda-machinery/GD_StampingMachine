<UserControl x:Class="GD_StampingMachine.UserControls.CylinderUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                          xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                       xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
             xmlns:local="clr-namespace:GD_StampingMachine.UserControls" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" xmlns:GD_Common="clr-namespace:GD_CommonLibrary;assembly=GD_CommonLibrary"
             mc:Ignorable="d" Name="cylinderUserControl" >
    <Grid DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}">
            <materialDesign:ColorZone CornerRadius="2" Padding="1">
            <Grid>
                <Grid.Resources>
                    <Style TargetType="materialDesign:PackIcon" x:Key="CylinderIsSingalPackIconStyle">
                        <Setter Property="Foreground" Value="{Binding CylinderIsSingalPackIconForeground}"/>
                        <Setter Property="Width" Value="20"/>
                        <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Width}"/>
                        <Setter Property="Kind" Value="{Binding CylinderIsSingalPackIcon}"/>
                    </Style>
                    <Style TargetType="RadioButton" BasedOn="{StaticResource Sieg_CylinderToggleButton}">
                        <Setter Property="Height" Value="auto"/>
                        <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ActualHeight}"/>
                    </Style>
                </Grid.Resources>               
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <StackPanel Visibility="{Binding CylinderUpIsActived, Converter={dx:BooleanToVisibilityConverter}}" 
                             Margin="2,0"  Grid.Column="0" Grid.Row="0" d:Visibility="Visible" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <StackPanel Visibility="{Binding CylinderIsUpSingal_IsTriggered, Converter={dx:BooleanToVisibilityConverter}, ConverterParameter={StaticResource HiddenOnFalse}}">
                        <materialDesign:PackIcon Style="{StaticResource CylinderIsSingalPackIconStyle}"/>
                    </StackPanel>
                </StackPanel>
                <StackPanel Visibility="{Binding CylinderMiddleIsActived, Converter={dx:BooleanToVisibilityConverter}}"
                    Grid.Column="0" Grid.Row="1"      HorizontalAlignment="Center" VerticalAlignment="Center">
                    <StackPanel Visibility="{Binding CylinderIsMiddleSingal_IsTriggered, Converter={dx:BooleanToVisibilityConverter}, ConverterParameter={StaticResource HiddenOnFalse}}">
                        <materialDesign:PackIcon Style="{StaticResource CylinderIsSingalPackIconStyle}"/>
                    </StackPanel>
                </StackPanel>
                <StackPanel  Visibility="{Binding CylinderDownIsActived, Converter={dx:BooleanToVisibilityConverter}}"
                    Grid.Column="0" Grid.Row="2"      HorizontalAlignment="Center" VerticalAlignment="Center">
                    <StackPanel Visibility="{Binding CylinderIsDownSingal_IsTriggered, Converter={dx:BooleanToVisibilityConverter}, ConverterParameter={StaticResource HiddenOnFalse}}">
                        <materialDesign:PackIcon Style="{StaticResource CylinderIsSingalPackIconStyle}"/>
                    </StackPanel>
                </StackPanel>

                <RadioButton Name="UpRadioButton" 
                    IsChecked="{Binding CylinderUp_IsChecked}" IsThreeState="False" IsEnabled="{Binding CylinderUp_IsEnabled}"
                    Grid.Column="1" Grid.Row="0"  Visibility="{Binding CylinderUpIsActived, Converter={dx:BooleanToVisibilityConverter}}"
                             Command="{Binding CylinderUpCommand}" CommandParameter="{Binding CylinderUpCommandParameter}"
               
                             Content="{materialDesign:PackIcon Kind=ArrowTopBoldBoxOutline, Size=30}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewMouseDown">
                            <i:InvokeCommandAction Command="{Binding CylinderUpPreviewMouseDownCommand}" CommandParameter="{Binding CylinderUpPreviewMouseDownCommandParameter}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewMouseUp">
                            <i:InvokeCommandAction Command="{Binding CylinderUpPreviewMouseUpCommand}" CommandParameter="{Binding CylinderUpPreviewMouseUpCommandParameter}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </RadioButton>
                <RadioButton Name="MiddleRadioButton"
                    IsChecked="{Binding CylinderMiddle_IsChecked}" IsThreeState="False"   IsEnabled="{Binding CylinderMiddle_IsEnabled}"
                    Grid.Column="1" Grid.Row="1"  Visibility="{Binding CylinderMiddleIsActived, Converter={dx:BooleanToVisibilityConverter}}"
                             Command="{Binding CylinderMiddleCommand}"  CommandParameter="{Binding CylinderMiddleCommandParameter}"
                              
                                             Content="{materialDesign:PackIcon Kind=CheckboxBlankOutline, Size=30}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewMouseDown">
                            <i:InvokeCommandAction Command="{Binding CylinderMiddlePreviewMouseDownCommand}" CommandParameter="{Binding CylinderMiddlePreviewMouseDownCommandParameter}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewMouseUp">
                            <i:InvokeCommandAction Command="{Binding CylinderMiddlePreviewMouseUpCommand}" CommandParameter="{Binding CylinderMiddlePreviewMouseUpCommandParameter}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </RadioButton>
                <RadioButton Name="DownRadioButton"
                    IsChecked="{Binding CylinderDown_IsChecked}" IsThreeState="False"  IsEnabled="{Binding CylinderDown_IsEnabled}"
                    Grid.Column="1" Grid.Row="2" Visibility="{Binding CylinderDownIsActived, Converter={dx:BooleanToVisibilityConverter}}"
                             Command="{Binding CylinderDownCommand}"  CommandParameter="{Binding CylinderDownCommandParameter}"
              
                                              Content="{materialDesign:PackIcon Kind=ArrowBottomBoldBoxOutline, Size=30}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewMouseDown">
                            <i:InvokeCommandAction Command="{Binding CylinderDownPreviewMouseDownCommand}" CommandParameter="{Binding CylinderDownPreviewMouseDownCommandParameter}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewMouseUp">
                            <i:InvokeCommandAction Command="{Binding CylinderDownPreviewMouseUpCommandParameter}" CommandParameter="{Binding CylinderDownPreviewMouseUpCommandParameter}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </RadioButton>
            </Grid>
        </materialDesign:ColorZone>
    </Grid>
</UserControl>
