<UserControl x:Class="GD_StampingMachine.UserControls.ParamaterSettingUserControl"
                                       xmlns:dd="urn:gong-wpf-dragdrop" 
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:GD_UserControls="clr-namespace:GD_StampingMachine.UserControls"
             xmlns:GD_SchematicDiagram="clr-namespace:GD_StampingMachine.UserControls.NumberSettingSchematicDiagram"
             xmlns:GD_ViewModels="clr-namespace:GD_StampingMachine.ViewModels"
            xmlns:ParameterSetting="clr-namespace:GD_StampingMachine.ViewModels.ParameterSetting"
             
             xmlns:GD_CommonControl="clr-namespace:GD_CommonControlLibrary;assembly=GD_CommonControlLibrary"
             xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
             d:DataContext="{d:DesignInstance Type=GD_ViewModels:ParameterSettingViewModel}"

             xmlns:GD_Singletons="clr-namespace:GD_StampingMachine.Singletons" 
             
             
              xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" 
             xmlns:GD_Enum="clr-namespace:GD_StampingMachine.GD_Enum;assembly=GD_StampingMachine.GD_Enum" 
             xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" 
             
             xmlns:GD_Method="clr-namespace:GD_StampingMachine.Method" xmlns:i="http://schemas.microsoft.com/xaml/behaviors" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" 
             xmlns:GD_ValidationRules="clr-namespace:GD_CommonControlLibrary.ValidationRules;assembly=GD_CommonControlLibrary" 
             xmlns:CalcB="clr-namespace:CalcBinding;assembly=CalcBinding" xmlns:sys="clr-namespace:System;assembly=mscorlib" 
             xmlns:gd_stampingmachine="clr-namespace:GD_StampingMachine"
             xmlns:GD_Popup="clr-namespace:GD_CommonControlLibrary.GD_Popup;assembly=GD_CommonControlLibrary"
             mc:Ignorable="d" >
    <Grid  >
        <Grid.Resources>
            <Style TargetType="TextBlock" BasedOn="{StaticResource Body1TextBlock}" >
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>


            <Style TargetType="TextBox"  BasedOn="{StaticResource GD_TextBox}" >
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Width" Value="250"/>
                <Setter Property="Margin" Value="10,0"/>
                <Setter Property="Padding" Value="0"/>
            </Style>



        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Border    HorizontalAlignment="Center" Padding="0,0,0,8"
            BorderThickness="0,0,0,1" BorderBrush="{DynamicResource PrimaryHueDarkForegroundBrush}">
            <ItemsControl 
                Style="{StaticResource StampingToolbarItemsControl}"
                dd:DragDrop.IsDragSource ="True"
                dd:DragDrop.IsDropTarget ="False"
                Margin="30,10,30,0">

                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>

                <GD_UserControls:FunctionToggleUserControl 
                    x:Name="TbtnNumberSetting" 
                    IsChecked="{Binding TbtnNumberSettingIsChecked , Mode=TwoWay}" >
                    <GD_UserControls:FunctionToggleUserControl.Style>
                        <Style TargetType="GD_UserControls:FunctionToggleUserControl" BasedOn="{StaticResource FunctionToggleUserControl_ParameterSetting}">
                            <Setter Property="ControlTitleText" Value="{DynamicResource btnNumberSetting}"      />
                            <Setter Property="ImageSource" Value="{StaticResource MainIcon_16_Number_DrawingImage_Mono}"      />
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="ImageSource" Value="{StaticResource MainIcon_16_Number_DrawingImage_Blue}"/>
                                </Trigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Source={x:Static GD_Singletons:StampingMachineSingleton.Instance},Path=IsBrightMode}" Value="false" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self} ,Path=IsChecked}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="ImageSource" Value="{StaticResource MainIcon_16_Number_DrawingImage_Mono_Dark}"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Source={x:Static GD_Singletons:StampingMachineSingleton.Instance},Path=IsBrightMode}" Value="false" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self} ,Path=IsChecked}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="ImageSource" Value="{StaticResource MainIcon_16_Number_DrawingImage_Blue_Dark}"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </GD_UserControls:FunctionToggleUserControl.Style>
                </GD_UserControls:FunctionToggleUserControl>

                <GD_UserControls:FunctionToggleUserControl 
                                        x:Name="TbtnQRSetting" 
                                        IsChecked="{Binding TbtnQRSettingIsChecked, Mode=TwoWay}">
                    <GD_UserControls:FunctionToggleUserControl.Style>
                        <Style TargetType="GD_UserControls:FunctionToggleUserControl" BasedOn="{StaticResource FunctionToggleUserControl_ParameterSetting}">
                            <Setter Property="ControlTitleText" Value="{DynamicResource btnQRSetting}"      />
                            <Setter Property="ImageSource" Value="{StaticResource MainIcon_17_QRIcon_DrawingImage_Mono}"      />
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="ImageSource" Value="{StaticResource MainIcon_17_QRIcon_DrawingImage_Blue}"/>
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Source={x:Static GD_Singletons:StampingMachineSingleton.Instance},Path=IsBrightMode}" Value="false" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self} ,Path=IsChecked}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="ImageSource" Value="{StaticResource MainIcon_17_QRIcon_DrawingImage_Mono_Dark}"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Source={x:Static GD_Singletons:StampingMachineSingleton.Instance},Path=IsBrightMode}" Value="false" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self} ,Path=IsChecked}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="ImageSource" Value="{StaticResource MainIcon_17_QRIcon_DrawingImage_Blue_Dark}"/>
                                </MultiDataTrigger>


                            </Style.Triggers>
                        </Style>
                    </GD_UserControls:FunctionToggleUserControl.Style>
                </GD_UserControls:FunctionToggleUserControl>

                <GD_UserControls:FunctionToggleUserControl
                                        x:Name="TbtnAxisSetting" 
                    IsChecked="{Binding TbtnAxisSettingSettingIsChecked, Mode=TwoWay}">
                    <GD_UserControls:FunctionToggleUserControl.Style>
                        <Style TargetType="GD_UserControls:FunctionToggleUserControl" BasedOn="{StaticResource FunctionToggleUserControl_ParameterSetting}">
                            <Setter Property="ControlTitleText" Value="{DynamicResource btnAxisSetting}"      />
                            <Setter Property="ImageSource" Value="{StaticResource MainIcon_18_3Axial_DrawingImage_Mono}"      />
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="ImageSource" Value="{StaticResource MainIcon_18_3Axial_DrawingImage_Blue}"/>
                                </Trigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Source={x:Static GD_Singletons:StampingMachineSingleton.Instance},Path=IsBrightMode}" Value="false" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self} ,Path=IsChecked}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="ImageSource" Value="{StaticResource MainIcon_18_3Axial_DrawingImage_Mono_Dark}"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Source={x:Static GD_Singletons:StampingMachineSingleton.Instance},Path=IsBrightMode}" Value="false" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self} ,Path=IsChecked}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="ImageSource" Value="{StaticResource MainIcon_18_3Axial_DrawingImage_Blue_Dark}"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </GD_UserControls:FunctionToggleUserControl.Style>
                </GD_UserControls:FunctionToggleUserControl>

                <GD_UserControls:FunctionToggleUserControl
                    x:Name="TbtnTimimgSetting" 
                    IsChecked="{Binding TbtnTimimgSettingIsChecked , Mode=TwoWay}">
                    <GD_UserControls:FunctionToggleUserControl.Style>
                        <Style TargetType="GD_UserControls:FunctionToggleUserControl" BasedOn="{StaticResource FunctionToggleUserControl_ParameterSetting}">
                            <Setter Property="ControlTitleText" Value="{DynamicResource btnTimimgSetting}"      />
                            <Setter Property="ImageSource" Value="{StaticResource MainIcon_19_Stopwatch_DrawingImage_Mono}"      />
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="ImageSource" Value="{StaticResource MainIcon_19_Stopwatch_DrawingImage_Blue}"/>
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Source={x:Static GD_Singletons:StampingMachineSingleton.Instance},Path=IsBrightMode}" Value="false" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self} ,Path=IsChecked}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="ImageSource" Value="{StaticResource MainIcon_19_Stopwatch_DrawingImage_Mono_Dark}"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Source={x:Static GD_Singletons:StampingMachineSingleton.Instance},Path=IsBrightMode}" Value="false" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self} ,Path=IsChecked}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="ImageSource" Value="{StaticResource MainIcon_19_Stopwatch_DrawingImage_Blue_Dark}"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </GD_UserControls:FunctionToggleUserControl.Style>
                </GD_UserControls:FunctionToggleUserControl>

                <GD_UserControls:FunctionToggleUserControl
                    x:Name="TbtnSegregationSetting" 
                    IsChecked="{Binding TbtnSegregationSettingIsChecked, Mode=TwoWay}"           >
                    <GD_UserControls:FunctionToggleUserControl.Style>
                        <Style TargetType="GD_UserControls:FunctionToggleUserControl" BasedOn="{StaticResource FunctionToggleUserControl_ParameterSetting}">
                            <Setter Property="ControlTitleText" Value="{DynamicResource btnSeparateSetting}"      />
                            <Setter Property="ImageSource" Value="{StaticResource MainIcon_20_Shunt_DrawingImage_Mono}"      />
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="ImageSource" Value="{StaticResource MainIcon_20_Shunt_DrawingImage_Blue}"/>
                                </Trigger>

                                <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Source={x:Static GD_Singletons:StampingMachineSingleton.Instance},Path=IsBrightMode}" Value="false" />
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self} ,Path=IsChecked}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                    <Setter Property="ImageSource" Value="{StaticResource MainIcon_20_Shunt_DrawingImage_Mono_Dark}"/>
                                    </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Source={x:Static GD_Singletons:StampingMachineSingleton.Instance},Path=IsBrightMode}" Value="false" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self} ,Path=IsChecked}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="ImageSource" Value="{StaticResource MainIcon_20_Shunt_DrawingImage_Blue_Dark}"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </GD_UserControls:FunctionToggleUserControl.Style>
                </GD_UserControls:FunctionToggleUserControl>

                <GD_UserControls:FunctionToggleUserControl 
                    x:Name="TbtnInputOutput" 
                    IsChecked="{Binding  TbtnInputOutputIsChecked, Mode=TwoWay}">

                    <GD_UserControls:FunctionToggleUserControl.Style>
                        <Style TargetType="GD_UserControls:FunctionToggleUserControl" BasedOn="{StaticResource FunctionToggleUserControl_ParameterSetting}">
                            <Setter Property="ControlTitleText" Value="{DynamicResource btnIOTable}"      />
                            <Setter Property="ImageSource" Value="{StaticResource MainIcon_21_IO_DrawingImage_Mono}"      />
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="ImageSource" Value="{StaticResource MainIcon_21_IO_DrawingImage_Blue}"/>
                                </Trigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Source={x:Static GD_Singletons:StampingMachineSingleton.Instance},Path=IsBrightMode}" Value="false" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self} ,Path=IsChecked}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="ImageSource" Value="{StaticResource MainIcon_21_IO_DrawingImage_Mono_Dark}"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Source={x:Static GD_Singletons:StampingMachineSingleton.Instance},Path=IsBrightMode}" Value="false" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self} ,Path=IsChecked}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="ImageSource" Value="{StaticResource MainIcon_21_IO_DrawingImage_Blue_Dark}"/>
                                </MultiDataTrigger>

                            </Style.Triggers>
                        </Style>
                    </GD_UserControls:FunctionToggleUserControl.Style>
                </GD_UserControls:FunctionToggleUserControl>

                <GD_UserControls:FunctionToggleUserControl
                    x:Name="TbtnSeEngineeringMode" 
                    IsChecked="{Binding TbtnSeEngineeringModeIsChecked, Mode=TwoWay}" >
                    <GD_UserControls:FunctionToggleUserControl.Style>
                        <Style TargetType="GD_UserControls:FunctionToggleUserControl" BasedOn="{StaticResource FunctionToggleUserControl_ParameterSetting}">
                            <Setter Property="ControlTitleText" Value="{DynamicResource btnSeEngineeringMode}"      />
                            <Setter Property="ImageSource" Value="{StaticResource MainIcon_22_Engineering_DrawingImage_Mono}"      />
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="ImageSource" Value="{StaticResource MainIcon_22_Engineering_DrawingImage_Blue}"/>
                                </Trigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Source={x:Static GD_Singletons:StampingMachineSingleton.Instance},Path=IsBrightMode}" Value="false" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self} ,Path=IsChecked}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="ImageSource" Value="{StaticResource MainIcon_22_Engineering_DrawingImage_Mono_Dark}"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Source={x:Static GD_Singletons:StampingMachineSingleton.Instance},Path=IsBrightMode}" Value="false" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self} ,Path=IsChecked}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="ImageSource" Value="{StaticResource MainIcon_22_Engineering_DrawingImage_Blue_Dark}"/>
                                </MultiDataTrigger>

                            </Style.Triggers>
                            
                        </Style>
                    </GD_UserControls:FunctionToggleUserControl.Style>
                </GD_UserControls:FunctionToggleUserControl>

            </ItemsControl>
        </Border>
        
        
        <ScrollViewer Name="MainScrollViewer" 
            VerticalAlignment="Stretch" Grid.Row="1"  
                      VerticalContentAlignment="Center"
                      HorizontalScrollBarVisibility="Auto"  VerticalScrollBarVisibility="Auto">
            <TabControl>
                <TabItem  IsSelected="{Binding ElementName=TbtnNumberSetting, Path=IsChecked}"  DataContext="{Binding NumberSettingPageVM}">
                    <StackPanel HorizontalAlignment="Center">
                        <Grid  Margin="20" Width="700">
                            <GD_SchematicDiagram:QRPlateRowDiagramControl  
                            DataContext="{Binding NumberSettingVM}" RedMeasurementLineVisibility="Visible" >

                            </GD_SchematicDiagram:QRPlateRowDiagramControl>
                        </Grid>

                        <Grid HorizontalAlignment="Center" Margin="20,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>

                            <StackPanel Grid.Column="0" Margin="5,0,20,0">
                            <GroupBox 
                                Header="{DynamicResource textMode}" >
                                <Grid HorizontalAlignment="Left">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="80"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <StackPanel Orientation="Horizontal" >
                                        <TextBlock Text="{DynamicResource textCurrentMode}"/>
                                        <TextBlock Text="："/>
                                    </StackPanel>

                                    <ComboBox  Name="NumberSettingModeComboBox"   Width="250"
                                        Grid.Column="1" materialDesign:HintAssist.Hint="{DynamicResource textSelectMode}"  
                                              DisplayMemberPath="NumberSettingMode"
                                              ItemsSource="{Binding NumberSettingModelCollection}" 
                                                 SelectedItem="{Binding NumberSettingModelCollectionSelected, UpdateSourceTrigger=PropertyChanged}">
                                      <!--  <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={ GD_ValueConverters:EnumGetNameConverter}}"></TextBlock>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>-->
                                    </ComboBox>

                                </Grid>

                            </GroupBox>

                                <GroupBox   Header="{DynamicResource textIronFontMarginSetting}"
                                      
                                       >
                                    <Grid HorizontalAlignment="Left">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="80"/>
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="0"/>
                                            <RowDefinition Height="0"/>
                                            <RowDefinition Height="0"/>
                                            <RowDefinition Height="0"/>
                                            <RowDefinition Height="0"/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <StackPanel Orientation="Horizontal" Margin="0,10" >
                                            <TextBlock Text="A"/>
                                            <TextBlock Text="："/>
                                        </StackPanel>
                                        <TextBox Grid.Column="1"  materialDesign:HintAssist.Hint="{DynamicResource textInputMargin}"
                                             Text="{Binding NumberSettingVM.IronPlateMarginVM.A_Margin, UpdateSourceTrigger=PropertyChanged}"/>
                                        <TextBlock Text="mm" Grid.Row="0" Grid.Column="1" HorizontalAlignment="Right" Margin="10,0"/>

                                        <StackPanel  Grid.Row="1" Orientation="Horizontal" Margin="0,10" >
                                            <TextBlock Text="B"/>
                                            <TextBlock Text="："/>
                                        </StackPanel>
                                        <TextBox Grid.Row="1"  Grid.Column="1" materialDesign:HintAssist.Hint="{DynamicResource textInputMargin}"  
                                             Text="{Binding NumberSettingVM.IronPlateMarginVM.B_Margin, UpdateSourceTrigger=PropertyChanged}"/>
                                        <TextBlock Text="mm" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Right" Margin="10,0"/>

                                        <StackPanel  Grid.Row="2" Orientation="Horizontal" Margin="0,10" >
                                            <TextBlock Text="C"/>
                                            <TextBlock Text="："/>
                                        </StackPanel>
                                        <TextBox  Grid.Row="2"  Grid.Column="1" materialDesign:HintAssist.Hint="{DynamicResource textInputMargin}" 
                                              Text="{Binding NumberSettingVM.IronPlateMarginVM.C_Margin, UpdateSourceTrigger=PropertyChanged}"/>
                                        <TextBlock Text="mm" Grid.Row="2" Grid.Column="1" HorizontalAlignment="Right" Margin="10,0"/>

                                        <StackPanel  Grid.Row="3" Orientation="Horizontal" Margin="0,10" >
                                            <TextBlock Text="D"/>
                                            <TextBlock Text="："/>
                                        </StackPanel>
                                        <TextBox   Grid.Row="3" Grid.Column="1" materialDesign:HintAssist.Hint="{DynamicResource textInputMargin}"
                                               Text="{Binding NumberSettingVM.IronPlateMarginVM.D_Margin, UpdateSourceTrigger=PropertyChanged}"  />
                                        <TextBlock Text="mm" Grid.Row="3" Grid.Column="1" HorizontalAlignment="Right" Margin="10,0"/>

                                        <StackPanel  Grid.Row="4" Orientation="Horizontal" Margin="0,10" >
                                            <TextBlock Text="E"/>
                                            <TextBlock Text="："/>
                                        </StackPanel>
                                        <TextBox  Grid.Row="4"  Grid.Column="1" materialDesign:HintAssist.Hint="{DynamicResource textInputMargin}" 
                                              Text="{Binding NumberSettingVM.IronPlateMarginVM.E_Margin, UpdateSourceTrigger=PropertyChanged}"/>
                                        <TextBlock Text="mm" Grid.Row="4" Grid.Column="1" HorizontalAlignment="Right" Margin="10,0"/>



                                        <StackPanel  Grid.Row="5" Orientation="Horizontal" Margin="0,10" >
                                            <TextBlock Text="XAxisPos1"/>
                                            <TextBlock Text="："/>
                                        </StackPanel>
                                        <TextBox  Grid.Row="5"  Grid.Column="1" materialDesign:HintAssist.Hint="{DynamicResource textInputMargin}" >
                                            <TextBox.Text>
                                                <Binding Path="NumberSettingVM.StampingMarginPosVM.rXAxisPos1" UpdateSourceTrigger="PropertyChanged">
                                                    <Binding.ValidationRules>
                                                        <GD_ValidationRules:CheckNumberRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                        <TextBlock Text="mm" Grid.Row="5" Grid.Column="1" HorizontalAlignment="Right" Margin="10,0"/>

                                        <StackPanel  Grid.Row="6" Orientation="Horizontal" Margin="0,10" >
                                            <TextBlock Text="YAxisPos1"/>
                                            <TextBlock Text="："/>
                                        </StackPanel>
                                        <TextBox  Grid.Row="6"  Grid.Column="1" materialDesign:HintAssist.Hint="{DynamicResource textInputMargin}" >
                                            <TextBox.Text>
                                                <Binding Path="NumberSettingVM.StampingMarginPosVM.rYAxisPos1" UpdateSourceTrigger="PropertyChanged">
                                                    <Binding.ValidationRules>
                                                        <GD_ValidationRules:CheckNumberRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                        <TextBlock Text="mm" Grid.Row="6" Grid.Column="1" HorizontalAlignment="Right" Margin="10,0"/>

                                        <StackPanel  Grid.Row="7" Orientation="Horizontal" Margin="0,10" >
                                            <TextBlock Text="XAxisPos2"/>
                                            <TextBlock Text="："/>
                                        </StackPanel>
                                        <TextBox  Grid.Row="7"  Grid.Column="1" materialDesign:HintAssist.Hint="{DynamicResource textInputMargin}" >
                                            <TextBox.Text>
                                                <Binding Path="NumberSettingVM.StampingMarginPosVM.rXAxisPos2" UpdateSourceTrigger="PropertyChanged">
                                                    <Binding.ValidationRules>
                                                        <GD_ValidationRules:CheckNumberRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                        <TextBlock Text="mm" Grid.Row="7" Grid.Column="1" HorizontalAlignment="Right" Margin="10,0"/>

                                        <StackPanel  Grid.Row="8" Orientation="Horizontal" Margin="0,10" >
                                            <TextBlock Text="YAxisPos2"/>
                                            <TextBlock Text="："/>
                                        </StackPanel>
                                        <TextBox  Grid.Row="8"  Grid.Column="1" materialDesign:HintAssist.Hint="{DynamicResource textInputMargin}" >
                                            <TextBox.Text>
                                                <Binding Path="NumberSettingVM.StampingMarginPosVM.rYAxisPos2" UpdateSourceTrigger="PropertyChanged">
                                                    <Binding.ValidationRules>
                                                        <GD_ValidationRules:CheckNumberRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                        <TextBlock Text="mm" Grid.Row="8" Grid.Column="1" HorizontalAlignment="Right" Margin="10,0"/>



                                    </Grid>
                                </GroupBox>
                            </StackPanel>

                            <StackPanel Grid.Column="1"  Margin="5,0">


                                <GroupBox  
                                      Header="{DynamicResource textIronPlateMarginSetting}">
                                    <Grid HorizontalAlignment="Left">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="80"/>
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <!--   <StackPanel Orientation="Horizontal" Margin="0,10" >
                                        <TextBlock Text="{DynamicResource textCurrentMode}"/>
                                        <TextBlock Text="："/>
                                    </StackPanel>
                                    <TextBox  Grid.Column="1" Text="{Binding NumberSetting.NumberSettingName}">
                                    </TextBox>-->
                                        <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="0,10" >
                                            <TextBlock Text="{DynamicResource textCurrentMode}"/>
                                            <TextBlock Text="："/>
                                        </StackPanel>
                                        <TextBox Grid.Row="1"  Grid.Column="1" Text="{Binding NumberSettingVM.NumberSettingMode, UpdateSourceTrigger=PropertyChanged}">
                                        </TextBox>
                                        <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="0,10" >
                                            <TextBlock Text="{DynamicResource textSingleRowNumber}"/>
                                            <TextBlock Text="："/>
                                        </StackPanel>
                                        <ComboBox Grid.Row="2"  Grid.Column="1" materialDesign:HintAssist.Hint="{DynamicResource textSelectCount}" 
                                              SelectedValue="{Binding NumberSettingVM.SequenceCount ,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding SequenceCountCollection}">

                                        </ComboBox>
                                        <StackPanel Grid.Row="3" Orientation="Horizontal" Margin="0,10" >
                                            <TextBlock Text="{DynamicResource textSpecialSequence}"/>
                                            <TextBlock Text="："/>
                                        </StackPanel>
                                        <ComboBox  Name="SpecialSequenceComboBox" Style="{StaticResource GD_ComboBox_WithIconPack}"
                                        Grid.Row="3" Grid.Column="1" materialDesign:HintAssist.Hint="{DynamicResource textSelectSequence}"  
                                                                       ItemsSource="{Binding SpecialSequenceCollection}"
                                                                       SelectedValue="{Binding NumberSettingVM.SpecialSequence, UpdateSourceTrigger=PropertyChanged}">

                                        </ComboBox>
                                        <StackPanel Grid.Row="4" Orientation="Horizontal" Margin="0,10" >
                                            <TextBlock Text="{DynamicResource textHorizontalAlignment}"/>
                                            <TextBlock Text="："/>
                                        </StackPanel>
                                        <ComboBox Style="{StaticResource GD_ComboBox_WithIconPack}"
                                        Grid.Row="4" Grid.Column="1" materialDesign:HintAssist.Hint="{DynamicResource textSelectAlignment}"  
                                                                       SelectedValue="{Binding NumberSettingVM.HorizontalAlign}"
                                        ItemsSource="{Binding HorizontalAlignmentCollection}">

                                        </ComboBox>
                                        <StackPanel Grid.Row="5" Orientation="Horizontal" Margin="0,10">
                                            <TextBlock Text="{DynamicResource textVerticalAlignment}"/>
                                            <TextBlock Text="："/>
                                        </StackPanel>
                                        <ComboBox  Style="{StaticResource GD_ComboBox_WithIconPack}"
                                        Grid.Row="5" Grid.Column="1" materialDesign:HintAssist.Hint="{DynamicResource textSelectAlignment}"  
                                        SelectedValue="{Binding NumberSettingVM.VerticalAlign}"
                                        ItemsSource="{Binding VerticalAlignmentCollection}"
                                        >





                                        </ComboBox>



                                    </Grid>




                                </GroupBox>


                                <StackPanel  HorizontalAlignment="Right"
                                    Grid.Row="0" Grid.Column="1" Grid.RowSpan="3" Margin="50,0" VerticalAlignment="Bottom">

                                    <Button Visibility="Collapsed" Padding="5,3,5,5"
                                        HorizontalAlignment="Left" IsEnabled="{Binding ElementName=NumberSettingModeComboBox, Path=SelectedItem, Converter={GD_CommonControl:ObjectIsNullToBooleanConverter Invert=True}, UpdateSourceTrigger=PropertyChanged}"
                                    Content="{DynamicResource btnLoadSetting}" Margin="10" Command="{Binding LoadSettingCommand}"/>

                                <Button Padding="5,3,5,0"
                                        HorizontalAlignment="Left" IsEnabled="{Binding ElementName=NumberSettingModeComboBox, Path=SelectedItem, Converter={GD_CommonControl:ObjectIsNullToBooleanConverter Invert=True}, UpdateSourceTrigger=PropertyChanged}"
                                         Content="{DynamicResource btnDeleteSetting}"  Margin="10" Command="{Binding DeleteSettingCommand}"/>

                                <Button Padding="5,3,5,0" HorizontalAlignment="Left" Content="{DynamicResource btnRecoverSetting}"  Margin="10" Command="{Binding RecoverSettingCommand}"/>
                                <Button Padding="5,3,5,0" HorizontalAlignment="Left" Content="{DynamicResource btnSaveSetting}"  
                                        IsEnabled="{Binding NumberSettingVM.NumberSettingMode, Converter={GD_CommonControl:ObjectIsNullToBooleanConverter Invert=True}, UpdateSourceTrigger=PropertyChanged}"
                                        Margin="10" Command="{Binding SaveSettingCommand}" Cursor="Hand"/>
                            </StackPanel>
                            </StackPanel>
                        </Grid>
                    </StackPanel>
                </TabItem>
                <TabItem  IsSelected="{Binding ElementName=TbtnQRSetting, Path=IsChecked}" DataContext="{Binding QRSettingPageVM}" Cursor="Hand">
                    <Grid HorizontalAlignment="Center" Margin="20,0">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <StackPanel >
                            <Grid  Margin="20">

                                <GD_SchematicDiagram:QRPlateRowDiagramControl  Width="700"
                            DataContext="{Binding QRSettingVM}" RedMeasurementLineVisibility="Visible" >


                                </GD_SchematicDiagram:QRPlateRowDiagramControl>
                            </Grid>
                        </StackPanel>


                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <StackPanel Grid.Row="0" Margin="0,0,20,0">
                                <GroupBox Header="{DynamicResource textMode}">
                                    <Grid HorizontalAlignment="Left">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="80"/>
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>
                                        <StackPanel Orientation="Horizontal" Margin="0,10" >
                                            <TextBlock Text="{DynamicResource textCurrentMode}"/>
                                            <TextBlock Text="："/>
                                        </StackPanel>
                                        <ComboBox Name="QRNumberSettingModeComboBox" Width="250"
                                            Grid.Column="1" materialDesign:HintAssist.Hint="{DynamicResource textSelectMode}" 
                                                  ItemsSource="{Binding QRSettingModelCollection}" DisplayMemberPath="NumberSettingMode"
                                                                      SelectedItem="{Binding QRSettingModelCollectionSelected, UpdateSourceTrigger=PropertyChanged}">
                                            <!--<ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Converter={ GD_ValueConverters:EnumGetNameConverter}}"></TextBlock>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>-->
                                        </ComboBox>
                                    </Grid>
                                </GroupBox>
                                <GroupBox 
Header="{DynamicResource textIronPlateMarginSetting}">
                                    <Grid HorizontalAlignment="Left">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="80"/>
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <StackPanel Orientation="Horizontal" Margin="0,10" >
                                            <TextBlock Text="{DynamicResource textCurrentMode}"/>
                                            <TextBlock Text="："/>
                                        </StackPanel>
                                        <TextBox   Grid.Column="1" Text="{Binding QRSettingVM.NumberSettingMode, UpdateSourceTrigger=PropertyChanged}">
                                        </TextBox>
                                        <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="0,10" >
                                            <TextBlock Text="{DynamicResource textSingleRowNumber}"/>
                                            <TextBlock Text="："/>
                                        </StackPanel>
                                        <ComboBox Grid.Row="1"  Grid.Column="1" materialDesign:HintAssist.Hint="{DynamicResource textSelectCount}" 
                                                  SelectedValue="{Binding QRSettingVM.SequenceCount}" ItemsSource="{Binding SequenceCountCollection}">

                                        </ComboBox>

                                        <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="0,10" >
                                            <TextBlock Text="{DynamicResource textSpecialSequence}"/>
                                            <TextBlock Text="："/>
                                        </StackPanel>
                                        <ComboBox  Style="{StaticResource GD_ComboBox_WithIconPack}"
                                            Grid.Row="2" Grid.Column="1" materialDesign:HintAssist.Hint="{DynamicResource textSelectSequence}"  
                                                                       ItemsSource="{Binding SpecialSequenceCollection}"
                                                                       SelectedValue="{Binding QRSettingVM.SpecialSequence}">

                                        </ComboBox>

                                        <StackPanel Grid.Row="3" Orientation="Horizontal" Margin="0,10" >
                                            <TextBlock Text="{DynamicResource textHorizontalAlignment}"/>
                                            <TextBlock Text="："/>
                                        </StackPanel>
                                        <ComboBox  Style="{StaticResource GD_ComboBox_WithIconPack}"
                                        Grid.Row="3" Grid.Column="1" materialDesign:HintAssist.Hint="{DynamicResource textSelectAlignment}"  
                                                                       SelectedValue="{Binding QRSettingVM.HorizontalAlign}"
                                        ItemsSource="{Binding HorizontalAlignmentCollection}">
                                        </ComboBox>
                                        <StackPanel Grid.Row="4" Orientation="Horizontal" Margin="0,10">
                                            <TextBlock Text="{DynamicResource textVerticalAlignment}"/>
                                            <TextBlock Text="："/>
                                        </StackPanel>
                                        <ComboBox  Style="{StaticResource GD_ComboBox_WithIconPack}"
                                        Grid.Row="4" Grid.Column="1" materialDesign:HintAssist.Hint="{DynamicResource textSelectAlignment}"  
                                                                       SelectedValue="{Binding QRSettingVM.VerticalAlign}"
                                        ItemsSource="{Binding VerticalAlignmentCollection}">
                                        </ComboBox>
                                        <StackPanel Grid.Row="5" Orientation="Horizontal" Margin="0,10" Visibility="Collapsed">
                                            <TextBlock Text="{DynamicResource textAlignmentMode}"/>
                                            <TextBlock Text="："/>
                                        </StackPanel>






                                    </Grid>




                                </GroupBox>
                            </StackPanel>
                            <Grid Grid.Column="1" Margin="10,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <GroupBox Grid.Row="0" Header="{DynamicResource Text_CodeSetting}">
                                    <Grid HorizontalAlignment="Left">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition MinWidth="80"/>
                                            <ColumnDefinition Width="250"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <StackPanel Orientation="Horizontal" Margin="0,10" >
                                            <TextBlock Text="{DynamicResource Text_CharacterCount}"/>
                                            <TextBlock Text="："/>
                                        </StackPanel>
                                        <ComboBox 
                                            Grid.Column="1" materialDesign:HintAssist.Hint="{DynamicResource textSelectMode}"  ItemsSource="{Binding CharactersCountCollection}" 
                                                                      SelectedValue="{Binding QRSettingVM.CharactersCount, UpdateSourceTrigger=PropertyChanged}">
                                        </ComboBox>


                                        <StackPanel Orientation="Horizontal" Grid.Row="1" Margin="0,10" >
                                            <TextBlock Text="{DynamicResource Text_CharacterForm}"/>
                                            <TextBlock Text="："/>
                                        </StackPanel>
                                        <ComboBox 
                                            Grid.Column="1" Grid.Row="1" materialDesign:HintAssist.Hint="{DynamicResource textSelectMode}"  ItemsSource="{Binding CharactersFormEnumCollection}" 
                                                                      SelectedValue="{Binding QRSettingVM.CharactersForm, UpdateSourceTrigger=PropertyChanged}">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Converter={ GD_CommonControl:EnumGetNameConverter}}"></TextBlock>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                    </Grid>
                                </GroupBox>
                                <GroupBox Grid.Row="1" VerticalAlignment="Bottom" Header="{DynamicResource Text_DataMartix}">
                                    <Grid HorizontalAlignment="Left">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="80"/>
                                            <ColumnDefinition Width="300"/>
                                        </Grid.ColumnDefinitions>
                                        <StackPanel Orientation="Horizontal" >
                                            <TextBlock Text="{DynamicResource Text_ModelSize}"/>
                                            <TextBlock Text="："/>
                                        </StackPanel>
                                        <ComboBox Grid.Column="1" materialDesign:HintAssist.Hint="{DynamicResource textSelectMode}" 
                                                  ItemsSource="{Binding ModelSizeCollection}" 
                                                                      SelectedItem="{Binding QRSettingVM.ModelSize, UpdateSourceTrigger=PropertyChanged}">

                                        </ComboBox>
                                    </Grid>
                                </GroupBox>
                            </Grid>
                            <GroupBox Grid.Row="1" Grid.ColumnSpan="2" Header="{DynamicResource textIronFontMarginSetting}">
                                <StackPanel Orientation="Horizontal">
                                    <Grid HorizontalAlignment="Left">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="80"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="10"/>
                                            <ColumnDefinition Width="80"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="0"/>
                                            <RowDefinition Height="0"/>
                                            <RowDefinition Height="0"/>
                                            <RowDefinition Height="0"/>
                                            <RowDefinition  Height="0"/>
                                            <RowDefinition />
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <StackPanel Orientation="Horizontal" Margin="0,10" >
                                            <TextBlock Text="A"/>
                                        
                                            <TextBlock Text="："/>
                                        </StackPanel>
                                        <TextBox Grid.Column="1"  materialDesign:HintAssist.Hint="{DynamicResource textInputMargin}" Text="{Binding QRSettingVM.IronPlateMarginVM.A_Margin}"/>
                                        <TextBlock Text="mm" Grid.Row="0" Grid.Column="1" HorizontalAlignment="Right" Margin="10,0"/>

                                        <StackPanel  Grid.Row="1" Orientation="Horizontal" Margin="0,10" >
                                            <TextBlock Text="B"/>
                                            <TextBlock Text="："/>
                                        </StackPanel>
                                        <TextBox Grid.Row="1"  Grid.Column="1" materialDesign:HintAssist.Hint="{DynamicResource textInputMargin}"  Text="{Binding  QRSettingVM.IronPlateMarginVM.B_Margin}"/>
                                        <TextBlock Text="mm" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Right" Margin="10,0"/>

                                        <StackPanel  Grid.Row="2" Orientation="Horizontal" Margin="0,10" >
                                            <TextBlock Text="C"/>
                                               <TextBlock Text="："/>
                                        </StackPanel>
                                        <TextBox  Grid.Row="2"  Grid.Column="1" materialDesign:HintAssist.Hint="{DynamicResource textInputMargin}" Text="{Binding QRSettingVM.IronPlateMarginVM.C_Margin}"/>
                                        <TextBlock Text="mm" Grid.Row="2" Grid.Column="1" HorizontalAlignment="Right" Margin="10,0"/>

                                        <StackPanel  Grid.Row="3" Orientation="Horizontal" Margin="0,10" >
                                            <TextBlock Text="D"/>
                                               <TextBlock Text="："/>
                                        </StackPanel>
                                        <TextBox   Grid.Row="3" Grid.Column="1" materialDesign:HintAssist.Hint="{DynamicResource textInputMargin}"  Text="{Binding QRSettingVM.IronPlateMarginVM.D_Margin}"  />
                                        <TextBlock Text="mm" Grid.Row="3" Grid.Column="1" HorizontalAlignment="Right" Margin="10,0"/>

                                        <StackPanel  Grid.Row="4" Orientation="Horizontal" Margin="0,10" >
                                            <TextBlock Text="E"/>
                                            <TextBlock Text="："/>
                                        </StackPanel>
                                        <TextBox  Grid.Row="4"  Grid.Column="1" materialDesign:HintAssist.Hint="{DynamicResource textInputMargin}"  Text="{Binding QRSettingVM.IronPlateMarginVM.E_Margin}"/>
                                        <TextBlock Text="mm" Grid.Row="4" Grid.Column="1" HorizontalAlignment="Right" Margin="10,0"/>

                                        <StackPanel  Grid.Row="0" Grid.Column="3" Orientation="Horizontal" Margin="0,10" >
                                            <TextBlock Text="F"/>
                                              <TextBlock Text="："/>
                                        </StackPanel>

                                        <TextBox Grid.Column="4"  materialDesign:HintAssist.Hint="{DynamicResource textInputMargin}" Text="{Binding QRSettingVM.IronPlateMarginVM.F_Margin}"/>
                                        <TextBlock Text="mm" Grid.Row="0" Grid.Column="4" HorizontalAlignment="Right" Margin="10,0"/>

                                        <StackPanel Grid.Column="3"  Grid.Row="1" Orientation="Horizontal" Margin="0,10" >
                                            <TextBlock Text="G"/>
                                           <TextBlock Text="："/>
                                        </StackPanel>
                                        <TextBox Grid.Row="1"  Grid.Column="4" materialDesign:HintAssist.Hint="{DynamicResource textInputMargin}"  Text="{Binding  QRSettingVM.IronPlateMarginVM.G_Margin}"/>
                                        <TextBlock Text="mm" Grid.Row="1" Grid.Column="4" HorizontalAlignment="Right" Margin="10,0"/>

                                        <StackPanel Grid.Column="3" Grid.Row="2" Orientation="Horizontal" Margin="0,10" >
                                            <TextBlock Text="H"/>
                                         <TextBlock Text="："/>
                                        </StackPanel>
                                        <TextBox  Grid.Row="2"  Grid.Column="4" materialDesign:HintAssist.Hint="{DynamicResource textInputMargin}" Text="{Binding QRSettingVM.IronPlateMarginVM.H_Margin}"/>
                                        <TextBlock Text="mm" Grid.Row="2" Grid.Column="4" HorizontalAlignment="Right" Margin="10,0"/>

                                        <StackPanel Grid.Column="3" Grid.Row="3" Orientation="Horizontal" Margin="0,10" >
                                            <TextBlock Text="I"/>
                                           <TextBlock Text="："/>
                                        </StackPanel>
                                        <TextBox   Grid.Row="3" Grid.Column="4" materialDesign:HintAssist.Hint="{DynamicResource textInputMargin}"  Text="{Binding  QRSettingVM.IronPlateMarginVM.I_Margin}"  />
                                        <TextBlock Text="mm" Grid.Row="3" Grid.Column="4" HorizontalAlignment="Right" Margin="10,0"/>

                                        
                                        
                                        <StackPanel  Grid.Row="5" Orientation="Horizontal" Margin="0,10" >
                                            <TextBlock Text="XAxisPos1"/>
                                            <TextBlock Text="："/>
                                        </StackPanel>
                                        <TextBox  Grid.Row="5"  Grid.Column="1" materialDesign:HintAssist.Hint="{DynamicResource textInputMargin}">
                                            <TextBox.Text>
                                                <Binding Path="QRSettingVM.StampingMarginPosVM.rXAxisPos1" UpdateSourceTrigger="PropertyChanged">
                                                    <Binding.ValidationRules>
                                                        <GD_ValidationRules:CheckNumberRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                        <TextBlock Text="mm" Grid.Row="5" Grid.Column="1" HorizontalAlignment="Right" Margin="10,0"/>

                                        <StackPanel  Grid.Row="6" Orientation="Horizontal" Margin="0,10" >
                                            <TextBlock Text="YAxisPos1"/>
                                            <TextBlock Text="："/>
                                        </StackPanel>
                                        <TextBox  Grid.Row="6"  Grid.Column="1" materialDesign:HintAssist.Hint="{DynamicResource textInputMargin}">
                                            <TextBox.Text>
                                                <Binding Path="QRSettingVM.StampingMarginPosVM.rYAxisPos1" UpdateSourceTrigger="PropertyChanged">
                                                    <Binding.ValidationRules>
                                                        <GD_ValidationRules:CheckNumberRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                        <TextBlock Text="mm" Grid.Row="6" Grid.Column="1" HorizontalAlignment="Right" Margin="10,0"/>

                                        <StackPanel  Grid.Row="7" Orientation="Horizontal" Margin="0,10" >
                                            <TextBlock Text="XAxisPos2"/>
                                            <TextBlock Text="："/>
                                        </StackPanel>
                                        <TextBox  Grid.Row="7"  Grid.Column="1" materialDesign:HintAssist.Hint="{DynamicResource textInputMargin}">
                                            <TextBox.Text>
                                                <Binding Path="QRSettingVM.StampingMarginPosVM.rXAxisPos2" UpdateSourceTrigger="PropertyChanged">
                                                    <Binding.ValidationRules>
                                                        <GD_ValidationRules:CheckNumberRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                        <TextBlock Text="mm" Grid.Row="7" Grid.Column="1" HorizontalAlignment="Right" Margin="10,0"/>

                                        <StackPanel  Grid.Row="8" Orientation="Horizontal" Margin="0,10" >
                                            <TextBlock Text="YAxisPos2"/>
                                            <TextBlock Text="："/>
                                        </StackPanel>
                                        <TextBox  Grid.Row="8"  Grid.Column="1" materialDesign:HintAssist.Hint="{DynamicResource textInputMargin}">
                                            <TextBox.Text>
                                                <Binding Path="QRSettingVM.StampingMarginPosVM.rYAxisPos2" UpdateSourceTrigger="PropertyChanged">
                                                    <Binding.ValidationRules>
                                                        <GD_ValidationRules:CheckNumberRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                        <TextBlock Text="mm" Grid.Row="8" Grid.Column="1" HorizontalAlignment="Right" Margin="10,0"/>







                                        <StackPanel Grid.Row="5" Grid.RowSpan="5"  Grid.Column="5"  Margin="10,0" VerticalAlignment="Bottom">
                                            <Button Visibility="Collapsed"
                                                 IsEnabled="{Binding ElementName=QRNumberSettingModeComboBox, Path=SelectedItem, Converter={GD_CommonControl:ObjectIsNullToBooleanConverter Invert=True}, UpdateSourceTrigger=PropertyChanged}"
                                                Content="{DynamicResource btnLoadSetting}" Margin="10" Command="{Binding LoadSettingCommand}"/>
                                            <Button HorizontalAlignment="Left"   Padding="5,3,5,0"
                                                    IsEnabled="{Binding ElementName=QRNumberSettingModeComboBox, Path=SelectedItem, Converter={GD_CommonControl:ObjectIsNullToBooleanConverter Invert=True}, UpdateSourceTrigger=PropertyChanged}"
                                         Content="{DynamicResource btnDeleteSetting}"  Margin="10" Command="{Binding DeleteSettingCommand}"/>
                                            <Button  Padding="5,3,5,0" Content="{DynamicResource btnRecoverSetting}"  Margin="10" Command="{Binding RecoverSettingCommand}"/>
                                            <Button  Padding="5,3,5,0" Content="{DynamicResource btnSaveSetting}"  IsEnabled="{Binding QRSettingVM.NumberSettingMode, Converter={GD_CommonControl:ObjectIsNullToBooleanConverter Invert=True}}"
                                                    Margin="10" Command="{Binding SaveSettingCommand}"/>
                                        </StackPanel>
                                    </Grid>
                                </StackPanel>
                            </GroupBox>
                        </Grid>


                    </Grid>
                </TabItem>
                <TabItem Header="123"   IsSelected="{Binding ElementName=TbtnAxisSetting, Path=IsChecked}" DataContext="{Binding AxisSettingVM}">
                    <TabItem.Resources>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource Body1TextBlock}">
                            <Setter Property="FontSize" Value="16"/>
                        </Style>
                        <Style TargetType="GroupBox" BasedOn="{StaticResource UnderLineStyleGroupBox}">
                            <Setter Property="Padding" Value="20"/>
                        </Style>
                    </TabItem.Resources>
                    <Grid HorizontalAlignment="Center" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MaxWidth="450"/>
                            <ColumnDefinition MaxWidth="450"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <GroupBox Grid.Column="0" Header="{DynamicResource Text_FeedAxisDirectionSetting}" Margin="10"  HorizontalContentAlignment="Stretch">
                            <Grid VerticalAlignment="Top">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" >
                                    <TextBlock Text="{DynamicResource Text_XAxisSpeed}"/>
                                    <TextBlock Text="："/>
                                </StackPanel>
                                <GD_UserControls:TriggerSliderUserControl Grid.Column="1" 
                                                                          DataContext="{Binding Source={x:Static GD_Singletons:StampMachineDataSingleton.Instance}}"
                                                                          MainSilderValue="{Binding FeedingVelocity , Mode=TwoWay}" 
                                                                          MainSilderValueChanged="{Binding FeedingVelocityChangedCommand}"/>
                            </Grid>
                        </GroupBox>
                        <GroupBox Grid.Column="0" Grid.Row="1" Header="{DynamicResource Text_RouletteAxisSetting}" Margin="10"  HorizontalContentAlignment="Stretch">
                            <Grid VerticalAlignment="Top" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center"  Margin="0,0,0,10" >
                                    <TextBlock Text="{DynamicResource Text_YAxisSpeed}"/>
                                    <TextBlock Text="："/>
                                </StackPanel>
                                <GD_UserControls:TriggerSliderUserControl Grid.Column="1"         
                                                                          DataContext="{Binding Source={x:Static GD_Singletons:StampMachineDataSingleton.Instance}}"
                                                                          MainSilderValue="{Binding EngravingFeeding , Mode=TwoWay}" 
                                                                          MainSilderValueChanged="{Binding EngravingFeedingVelocityChangedCommand}" Margin="0,0,0,10" />

                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Grid.Row="1" Margin="0,10">
                                    <TextBlock Text="{DynamicResource Text_FontDepth}" />
                                    <TextBlock Text="："/>
                                </StackPanel>
                                <GD_UserControls:TriggerSliderUserControl IsEnabled="False" 
                                    Grid.Column="1" MainSilderValue="{Binding FontDepth , Mode=TwoWay}" Grid.Row="1" Margin="0,10"/>

                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Grid.Row="2" Margin="0,10">
                                    <TextBlock Text="{DynamicResource Text_RouletteSpeed}"/>
                                    <TextBlock Text="："/>
                                </StackPanel>
                                <GD_UserControls:TriggerSliderUserControl Grid.Column="1" 
                                                                          DataContext="{Binding Source={x:Static GD_Singletons:StampMachineDataSingleton.Instance}}"
                                                                          MainSilderValue="{Binding RotateVelocity , Mode=TwoWay}" 
                                                                          MainSilderValueChanged="{Binding RotateVelocityChangedCommand}"
                                                                          Grid.Row="2" Margin="0,10"/>

                            </Grid>
                        </GroupBox>
                        <GroupBox IsEnabled="False"
                            Grid.Column="0" Grid.Row="2" Header="{DynamicResource Text_ShearingModelSetting}" Margin="10" >
                            <Grid VerticalAlignment="Top">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="0,0,0,10" >
                                    <TextBlock Text="{DynamicResource Text_ZAxisPressure}"/>
                                    <TextBlock Text="："/>
                                </StackPanel>
                                <GD_UserControls:TriggerSliderUserControl Grid.Column="1" MainSilderValue="{Binding ZAxisPressure, Mode=TwoWay}" Margin="0,0,0,10" />


                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Row="1" Margin="0,10" >
                                    <TextBlock Text="{DynamicResource Text_ZAxisOrigin}"/>
                                    <TextBlock Text="："/>
                                </StackPanel>
                                <TextBox Grid.Column="1" Text="{Binding ZAxisOrigin}" materialDesign:HintAssist.Hint="{DynamicResource Text_PEnterDistance}" Grid.Row="1" Margin="0,10"/>
                                <TextBlock Text="mm" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Right" Margin="0,10" />

                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Grid.Row="2" >
                                    <TextBlock Text="{DynamicResource Text_ZAxisPreparationPoint}"/>
                                    <TextBlock Text="："/>
                                </StackPanel>
                                <TextBox Grid.Column="1" Grid.Row="2" Text="{Binding ZAxisPreparationPoint}" materialDesign:HintAssist.Hint="{DynamicResource Text_PEnterDistance}" Margin="0,10"/>
                                <TextBlock Text="mm" Grid.Row="2" Grid.Column="1" HorizontalAlignment="Right" Margin="0,10"/>


                            </Grid>
                        </GroupBox>


                        <GroupBox Grid.Column="1" Header="{DynamicResource Text_FeedAxisDirectionSetting}" Margin="10" >
                            <Grid VerticalAlignment="Top">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" >
                                    <TextBlock Text="{DynamicResource Text_FeedDistance}"/>
                                    <TextBlock Text="："/>
                                </StackPanel>
                                <TextBox Grid.Column="1"  materialDesign:HintAssist.Hint="{DynamicResource Text_PEnterDistance}" Text="{Binding FeedDistance}"/>
                                <TextBlock  Grid.Column="1" Text="mm"  HorizontalAlignment="Right" Margin="10,0" />
                            </Grid>
                        </GroupBox>
                    </Grid>
                </TabItem>
                <TabItem Header="123"   IsSelected="{Binding ElementName=TbtnTimimgSetting, Path=IsChecked}" DataContext="{Binding TimingSettingVM}">
                    <Grid HorizontalAlignment="Center">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <GroupBox Header="{DynamicResource Text_TimingSetting}" Margin="10" Visibility="Collapsed">
                            <Grid HorizontalAlignment="Left">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="80"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <StackPanel Orientation="Horizontal" Margin="0,10" >
                                    <TextBlock Text="{DynamicResource Text_SettingName}"/>
                                    <TextBlock Text="："/>
                                </StackPanel>
                                <TextBox   Grid.Column="1" materialDesign:HintAssist.Hint="{DynamicResource Text_PEnterName}" Padding="3,0"
                                                                   Text="{Binding TimingSetting.SettingName}">
                                </TextBox>
                                <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="0,10" >
                                    <TextBlock Text="{DynamicResource Text_RestTime}"/>
                                    <TextBlock Text="："/>
                                </StackPanel>


                                <materialDesign:TimePicker Grid.Row="1"  Grid.Column="1" 
                                                           materialDesign:HintAssist.Hint="{DynamicResource Text_PSelectTime}" 
                                                          SelectedTime="{Binding TimingSetting.RestTime, UpdateSourceTrigger=PropertyChanged}"                     />

                                <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="0,10" >
                                    <TextBlock Text="{DynamicResource Text_OpenTime}"/>
                                    <TextBlock Text="："/>
                                </StackPanel>

                                <materialDesign:TimePicker Grid.Row="2" Grid.Column="1" materialDesign:HintAssist.Hint="{DynamicResource Text_PSelectTime}"
                                                                    SelectedTime="{Binding TimingSetting.OpenTime}"             />

                                <StackPanel Grid.Row="3" Orientation="Horizontal" Margin="0,10" >
                                    <TextBlock Text="{DynamicResource Text_RepeatCount}"/>
                                    <TextBlock Text="："/>
                                </StackPanel>
                                <ComboBox  Grid.Row="3" Grid.Column="1" materialDesign:HintAssist.Hint=""   Padding="10,0"

                                                                       ItemsSource="{Binding CharactersCountCollection}"
                                                                       SelectedValue="{Binding TimingSetting.RepeatCount}">


                                </ComboBox>

                            </Grid>




                        </GroupBox>

                        <GroupBox  VerticalContentAlignment="Stretch"
                            Grid.Row="1" Header="{DynamicResource Text_TimingSetting}" Margin="10" Padding="5">
                            <StackPanel Orientation="Horizontal">
                                <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <StackPanel>
                                    <StackPanel.Resources>
                                        <Style TargetType="{x:Type Expander}">
                                            <Setter Property="Background" Value="{DynamicResource MaterialDesign.Brush.Background}" />
                                            <Setter Property="BorderThickness" Value="0" />
                                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}" />
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />

                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Expander}">
                                                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                                            <VisualStateManager.VisualStateGroups>
                                                                <VisualStateGroup x:Name="ExpansionStates">

                                                                    <VisualStateGroup.Transitions>
                                                                        <VisualTransition To="Expanded">
                                                                            <Storyboard>
                                                                                <DoubleAnimation Storyboard.TargetName="ContentPanel"
                                       Storyboard.TargetProperty="Opacity"
                                       From="0"
                                       To="1"
                                       Duration="{DynamicResource ExpandDuration}" />
                                                                                <DoubleAnimation Storyboard.TargetName="ContentSiteScaleTransform"
                                       Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
                                       From="0"
                                       To="1"
                                       Duration="{DynamicResource ExpandDuration}">
                                                                                    <DoubleAnimation.EasingFunction>
                                                                                        <CubicEase EasingMode="EaseInOut" />
                                                                                    </DoubleAnimation.EasingFunction>
                                                                                </DoubleAnimation>
                                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content"
                                                     Storyboard.TargetProperty="Visibility"
                                                     Duration="0:0:0">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0%" Value="{x:Static Visibility.Visible}" />
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualTransition>

                                                                        <VisualTransition To="Collapsed">
                                                                            <Storyboard>
                                                                                <DoubleAnimation Storyboard.TargetName="ContentPanel"
                                       Storyboard.TargetProperty="Opacity"
                                       From="1"
                                       To="0"
                                       Duration="{DynamicResource CollapseDuration}" />
                                                                                <DoubleAnimation Storyboard.TargetName="ContentSiteScaleTransform"
                                       Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
                                       From="1"
                                       To="0"
                                       Duration="{DynamicResource CollapseDuration}">
                                                                                    <DoubleAnimation.EasingFunction>
                                                                                        <CubicEase EasingMode="EaseInOut" />
                                                                                    </DoubleAnimation.EasingFunction>
                                                                                </DoubleAnimation>
                                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content"
                                                     Storyboard.TargetProperty="Visibility"
                                                     Duration="{DynamicResource CollapseDuration}">
                                                                                    <DiscreteObjectKeyFrame KeyTime="100%" Value="{x:Static Visibility.Collapsed}" />
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualTransition>
                                                                    </VisualStateGroup.Transitions>

                                                                    <VisualState x:Name="Expanded">
                                                                        <Storyboard>
                                                                            <DoubleAnimation Storyboard.TargetName="ContentPanel"
                                     Storyboard.TargetProperty="Opacity"
                                     To="1"
                                     Duration="0" />
                                                                            <DoubleAnimation Storyboard.TargetName="ContentSiteScaleTransform"
                                     Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
                                     To="1"
                                     Duration="0" />
                                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content"
                                                   Storyboard.TargetProperty="Visibility"
                                                   Duration="0">
                                                                                <DiscreteObjectKeyFrame KeyTime="0%" Value="{x:Static Visibility.Visible}" />
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>

                                                                    <VisualState x:Name="Collapsed">
                                                                        <Storyboard>
                                                                            <DoubleAnimation Storyboard.TargetName="ContentPanel"
                                     Storyboard.TargetProperty="Opacity"
                                     To="0"
                                     Duration="0" />
                                                                            <DoubleAnimation Storyboard.TargetName="ContentSiteScaleTransform"
                                     Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
                                     To="0"
                                     Duration="0" />
                                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content"
                                                   Storyboard.TargetProperty="Visibility"
                                                   Duration="0">
                                                                                <DiscreteObjectKeyFrame KeyTime="100%" Value="{x:Static Visibility.Collapsed}" />
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>

                                                                </VisualStateGroup>
                                                            </VisualStateManager.VisualStateGroups>
                                                            <DockPanel Background="{TemplateBinding Background}">
                                                                <Border Name="ContentSite">
                                                                    <Border.LayoutTransform>
                                                                        <TransformGroup>
                                                                            <ScaleTransform x:Name="ContentSiteScaleTransform" />
                                                                            <RotateTransform Angle="{Binding Path=ExpandDirection, RelativeSource={RelativeSource AncestorType=Expander}, Converter={GD_CommonControl:ExpanderRotateAngleConverter}}" />
                                                                        </TransformGroup>
                                                                    </Border.LayoutTransform>

                                                                    <Grid Name="ContentPanel"
                      Margin="{TemplateBinding Padding}"
                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                                        <Grid.LayoutTransform>
                                                                            <RotateTransform Angle="{Binding Path=ExpandDirection, RelativeSource={RelativeSource AncestorType=Expander}, Converter={GD_CommonControl:ExpanderRotateAngleConverter}, ConverterParameter=-1}" />
                                                                        </Grid.LayoutTransform>

                                                                        <ContentPresenter Name="PART_Content"
                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                    Focusable="False"
                                    Visibility="Collapsed" />

                                                                    </Grid>
                                                                </Border>
                                                            </DockPanel>
                                                        </Border>

                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="VerticalContentAlignment" Value="Top" />
                                        </Style>
                                        <Style x:Key="TimingButton"
                                            TargetType="{x:Type Button}" BasedOn="{StaticResource SiegCustomButton}">
                                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                            <Setter Property="VerticalAlignment" Value="Stretch"/>
                                            <Setter Property="Height" Value="auto"/>
                                        </Style>
                                        <Style TargetType="{x:Type Button}"
                                        BasedOn="{StaticResource TimingButton}">
                                        </Style>

                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
                                            <Setter Property="FontWeight" Value="Bold"/>
                                            <Setter Property="FontSize" Value="20"/>
                                        </Style>
                                    </StackPanel.Resources>
                                    <materialDesign:DrawerHost Name="TimingControlDrawerHost"  
                                        IsBottomDrawerOpen="{Binding IsBottomDrawerOpen}"  
                                                               Background="Transparent"
                                                               BottomDrawerBackground="Transparent"
                                        TopDrawerCloseOnClickAway="true">
                                        <materialDesign:DrawerHost.BottomDrawerContent>
                                            <Grid>
                                                <Thumb>
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="DragCompleted">
                                                            <i:InvokeCommandAction Command="{Binding OnThumb_DragCompletedCommand}" PassEventArgsToCommand="True"/>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                    <Thumb.Template>
                                                        <ControlTemplate>
                                                            <Border  
                                                                Background="{DynamicResource PrimaryHueDarkBrush}" CornerRadius="0" HorizontalAlignment="Stretch" />
                                                        </ControlTemplate>
                                                    </Thumb.Template>
                                                </Thumb>
                                                <StackPanel Orientation="Vertical">
                                                    <Grid Margin="10,5" >
                                                        <Button HorizontalAlignment="Left"
                                                          Background="Transparent"
                                                            FontSize="16" 
                                                            Content="{DynamicResource btnCancel}" Foreground="Orange" FontWeight="Bold" BorderThickness="0"
                                                            >
                                                            <i:Interaction.Triggers>
                                                                <i:EventTrigger EventName="Click">
                                                                    <i:InvokeCommandAction Command="{x:Static materialDesign:DrawerHost.CloseDrawerCommand}"  CommandParameter="{x:Static Dock.Bottom}"/>
                                                                </i:EventTrigger>
                                                            </i:Interaction.Triggers>


                                                        </Button>
                                                        <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                                            <Button Visibility="{Binding IsNewTimingControl, Converter={dx:BooleanToVisibilityConverter}}"
                                                          Background="Transparent"
                                                            FontSize="16" 
                                                            Content="{DynamicResource btnSave}" Foreground="Orange" FontWeight="Bold" BorderThickness="0"
                                                            >
                                                                <i:Interaction.Triggers>
                                                                    <i:EventTrigger EventName="Click">
                                                                        <i:InvokeCommandAction Command="{Binding SaveNewTimingControlCommand}"/>
                                                                        <i:InvokeCommandAction Command="{x:Static materialDesign:DrawerHost.CloseDrawerCommand}"  CommandParameter="{x:Static Dock.Bottom}"/>
                                                                    </i:EventTrigger>
                                                                </i:Interaction.Triggers>


                                                            </Button>
                                                            <Button Visibility="{Binding IsNewTimingControl, Converter={dx:BooleanToVisibilityConverter Invert=True}}"
                                                          Background="Transparent"
                                                            FontSize="16" 
                                                            Content="{DynamicResource btnFinish}" Foreground="Orange" FontWeight="Bold" BorderThickness="0"
                                                            >
                                                                <i:Interaction.Triggers>
                                                                    <i:EventTrigger EventName="Click">
                                                                        <i:InvokeCommandAction Command="{Binding FinishTimingControlChangedCommand}"/>
                                                                        <i:InvokeCommandAction Command="{x:Static materialDesign:DrawerHost.CloseDrawerCommand}"  CommandParameter="{x:Static Dock.Bottom}"/>
                                                                    </i:EventTrigger>
                                                                </i:Interaction.Triggers>


                                                            </Button>
                                                        </StackPanel>
                                                    </Grid>
                                                    <Grid DataContext="{Binding TimingControlVMSelectedClone}">
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                        </Grid.RowDefinitions>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition/>
                                                            <ColumnDefinition/>

                                                        </Grid.ColumnDefinitions>
                                                        <Grid Grid.Column="0" HorizontalAlignment="Right" Margin="5">
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition/>
                                                                <RowDefinition/>
                                                                <RowDefinition/>
                                                                <RowDefinition/>
                                                            </Grid.RowDefinitions>
                                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" >
                                                                    <materialDesign:PackIcon Width="25" Height="25" Margin="5,0"
                                                                    Kind="TimerStart" Foreground="#40c4ff" VerticalAlignment="Center"/>
                                                                <TextBlock Padding="0,4,0,0"
                                                                    Text="{DynamicResource Text_RestTime}" FontSize="18" 
                                                                           VerticalAlignment="Center" Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}" />
                                                            </StackPanel>
                                                            
                                                            
                                                      <!--      <TextBox Width="auto"
                                                    Grid.Row="1" HorizontalAlignment="Center"  FontSize="18" 
                                                Text="{Binding RestTime, StringFormat='HH:mm' ,UpdateSourceTrigger=PropertyChanged}" />-->

                                                            <materialDesign:TimePicker
                                                                Grid.Row="1"   MinWidth="120"  Style="{StaticResource MaterialDesignTimePicker}" Padding="0,3,0,0"
                                                           materialDesign:HintAssist.Hint="{DynamicResource Text_PSelectTime}" 
                                                           WithSeconds="False"  SelectedTimeFormat="Long" Is24Hours="True"
                                                           SelectedTime="{Binding RestTime}">
                                                            </materialDesign:TimePicker>



                                                        </Grid>
                                                        <Grid Grid.Column="1" HorizontalAlignment="Left" Margin="5">
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition/>
                                                                <RowDefinition/>
                                                            </Grid.RowDefinitions>
                                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                                                    
                                                                <materialDesign:PackIcon Width="25" Height="25" Margin="5,0"
                                                                    Kind="TimerStop" Foreground="#40c4ff" VerticalAlignment="Center"/>
                                                                <TextBlock Padding="0,4,0,0" 
                                                                    Text="{DynamicResource Text_OpenTime}" FontSize="18" VerticalAlignment="Center" Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}" />
                                                            </StackPanel>
                                                           <!-- <TextBox Width="auto"
                                                Grid.Row="1" HorizontalAlignment="Center" FontSize="18" 
                                                Text="{Binding OpenTime, StringFormat='HH:mm', UpdateSourceTrigger=PropertyChanged}" />-->

                                                            <materialDesign:TimePicker Grid.Row="1"   MinWidth="120" Style="{StaticResource MaterialDesignTimePicker}"  Padding="0,3,0,0"
                                                           materialDesign:HintAssist.Hint="{DynamicResource Text_PSelectTime}" 
                                                           WithSeconds="False"  SelectedTimeFormat="Long" Is24Hours="True"
                                                           SelectedTime="{Binding OpenTime}">
                                                            </materialDesign:TimePicker>




                                                        </Grid>
                                                        <GD_CommonControl:CircularRangeSlider 
                                            Grid.ColumnSpan="2"
                                            Grid.Row="1"
                                            Name="CRangeSlider" Width="300" Height="300"
                                                                       Minimum="0"
                                                                       Maximum="24"
                                                                       Radius="130"
                                                                       LargeCalibration="24"
                                                                       SmallCalibration="96"
                                                Start="{Binding RestTime , Converter={GD_CommonControl:DateTimeToHourConverter}}"
                                                End="{Binding OpenTime, Converter={GD_CommonControl:DateTimeToHourConverter}}"
                                                
                                            >
                                                            <GD_CommonControl:CircularRangeSlider.Style>
                                                                <Style TargetType="{x:Type GD_CommonControl:CircularRangeSlider}" >
                                                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                                    <Setter Property="Background" Value="Transparent"/>
                                                                    <Setter Property="Template" >
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type GD_CommonControl:CircularRangeSlider}">
                                                                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                    Background="{TemplateBinding Background}" 
                                                                    Width="{TemplateBinding Width}"
                                                                    Height="{TemplateBinding Height}"
                                                                    Padding="{TemplateBinding Padding}"
                                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                                                    <Grid>
                                                                                        <Viewbox Margin="5">
                                                                                            <Grid Width="300" Height="300">
                                                                                                <Grid Width="200" Height="200">
                                                                                                    <Border Background="DimGray"  CornerRadius="100">
                                                                                                    </Border>

                                                                                                    <ListBox Margin="-12"
                                                                                        ItemsSource="{Binding RelativeSource={RelativeSource  Mode=TemplatedParent},Path=LargeCalibration, Converter={GD_CommonControl:IntToCollectionConverter}}">
                                                                                                        <ListBox.ItemContainerStyle>
                                                                                                            <Style TargetType="ListBoxItem">
                                                                                                                <Setter Property="Height" Value="12"/>
                                                                                                                <Setter Property="Width" Value="3"/>
                                                                                                                <Setter Property="BorderBrush" Value="#f0f0f0"/>
                                                                                                                <Setter Property="Background" Value="#f0f0f0"/>
                                                                                                                <Setter Property="Template">
                                                                                                                    <Setter.Value>
                                                                                                                        <ControlTemplate TargetType="ListBoxItem" >
                                                                                                                            <Border x:Name="RadiaListBoxItemBorder" RenderTransformOrigin="0.5,0.5">
                                                                                                                                <Grid>
                                                                                                                                    <Border BorderThickness="0" BorderBrush="{TemplateBinding BorderBrush }" Width="auto" Height="auto"
                                                        Background="{TemplateBinding Background }"  >
                                                                                                                                    </Border>
                                                                                                                                </Grid>
                                                                                                                            </Border>
                                                                                                                        </ControlTemplate>
                                                                                                                    </Setter.Value>
                                                                                                                </Setter>
                                                                                                            </Style>
                                                                                                        </ListBox.ItemContainerStyle>
                                                                                                        <ListBox.ItemsPanel>
                                                                                                            <ItemsPanelTemplate>
                                                                                                                <GD_CommonControl:RadialPanel
                                                                                                    RotationDirection="Clockwise"
                                        StartAngle="0"  RoundAngle="360"
                                        ItemRotateAngle="90"  />
                                                                                                            </ItemsPanelTemplate>
                                                                                                        </ListBox.ItemsPanel>
                                                                                                    </ListBox>

                                                                                                    <ListBox Margin="-16"
                                                                                        ItemsSource="{Binding RelativeSource={RelativeSource  Mode=TemplatedParent},Path=SmallCalibration, Converter={GD_CommonControl:IntToCollectionConverter}}">
                                                                                                        <ListBox.ItemContainerStyle>
                                                                                                            <Style TargetType="ListBoxItem">
                                                                                                                <Setter Property="Height" Value="6"/>
                                                                                                                <Setter Property="Width" Value="1.5"/>
                                                                                                                <Setter Property="BorderBrush" Value="#f0f0f0"/>
                                                                                                                <Setter Property="Background" Value="#f0f0f0"/>
                                                                                                                <Setter Property="Template">
                                                                                                                    <Setter.Value>
                                                                                                                        <ControlTemplate TargetType="ListBoxItem" >
                                                                                                                            <Border x:Name="RadiaListBoxItemBorder" RenderTransformOrigin="0.5,0.5">
                                                                                                                                <Grid>
                                                                                                                                    <Border BorderThickness="0" BorderBrush="{TemplateBinding BorderBrush }" Width="auto" Height="auto"
                                                                                                                            Background="{TemplateBinding Background }"  >
                                                                                                                                    </Border>
                                                                                                                                </Grid>
                                                                                                                            </Border>
                                                                                                                        </ControlTemplate>
                                                                                                                    </Setter.Value>
                                                                                                                </Setter>
                                                                                                            </Style>
                                                                                                        </ListBox.ItemContainerStyle>
                                                                                                        <ListBox.ItemsPanel>
                                                                                                            <ItemsPanelTemplate>
                                                                                                                <GD_CommonControl:RadialPanel
                                                                                                    RotationDirection="Clockwise"
                                        StartAngle="0"  RoundAngle="360"
                                        ItemRotateAngle="90"  />
                                                                                                            </ItemsPanelTemplate>
                                                                                                        </ListBox.ItemsPanel>
                                                                                                    </ListBox>
                                                                                                    <ListBox    Margin="12"
                                                                                                   >
                                                                                                        <ListBox.ItemsSource>
                                                                                                            <x:Array Type="{x:Type sys:Double}">
                                                                                                                <sys:Double>0</sys:Double>
                                                                                                                <sys:Double>2</sys:Double>
                                                                                                                <sys:Double>4</sys:Double>
                                                                                                                <sys:Double>6</sys:Double>
                                                                                                                <sys:Double>8</sys:Double>
                                                                                                                <sys:Double>10</sys:Double>
                                                                                                                <sys:Double>12</sys:Double>
                                                                                                                <sys:Double>14</sys:Double>
                                                                                                                <sys:Double>16</sys:Double>
                                                                                                                <sys:Double>18</sys:Double>
                                                                                                                <sys:Double>20</sys:Double>
                                                                                                                <sys:Double>22</sys:Double>
                                                                                                                <!-- 添加更多的项目 -->
                                                                                                            </x:Array>
                                                                                                        </ListBox.ItemsSource>

                                                                                                        <ListBox.ItemContainerStyle>
                                                                                                            <Style TargetType="ListBoxItem">

                                                                                                                <Setter Property="Height" Value="auto"/>
                                                                                                                <Setter Property="BorderBrush" Value="#f0f0f0"/>
                                                                                                                <Setter Property="Background" Value="#f0f0f0"/>
                                                                                                                <Setter Property="Template">
                                                                                                                    <Setter.Value>
                                                                                                                        <ControlTemplate TargetType="ListBoxItem" >
                                                                                                                            <Border x:Name="RadiaListBoxItemBorder" RenderTransformOrigin="0.5,0.5" >
                                                                                                                                <Grid>
                                                                                                                                    <TextBlock Text="{Binding}" Foreground="White" FontSize="20" Margin="0,0"/>
                                                                                                                                </Grid>
                                                                                                                            </Border>
                                                                                                                        </ControlTemplate>
                                                                                                                    </Setter.Value>
                                                                                                                </Setter>
                                                                                                            </Style>
                                                                                                        </ListBox.ItemContainerStyle>
                                                                                                        <ListBox.ItemsPanel>
                                                                                                            <ItemsPanelTemplate>
                                                                                                                <GD_CommonControl:RadialPanel
                                                                                                    RotationDirection="Clockwise"
                                                                                                    StartAngle="-90"  RoundAngle="360"
                                        ItemRotateAngle="0"  />
                                                                                                            </ItemsPanelTemplate>
                                                                                                        </ListBox.ItemsPanel>
                                                                                                    </ListBox>
                                                                                                </Grid>



                                                                                                <Canvas   Name="PART_SliderContainer">
                                                                                                    <Ellipse Fill="Transparent"  Width="300" Height="300" Canvas.Left="0" Canvas.Top="0"  Opacity="1"
                                                                                         Stroke="Black" StrokeThickness="40"/>
                                                                                                    <Canvas Name="PART_Arc"  Cursor="Hand"
                                                                                        Canvas.Top="150" Canvas.Left="150">
                                                                                                        <Path Stroke="DimGray" StrokeThickness="30" Margin="0"  StrokeStartLineCap="Round" StrokeEndLineCap="Round">
                                                                                                            <Path.Data>
                                                                                                                <PathGeometry>
                                                                                                                    <PathFigure StartPoint="{Binding RelativeSource={RelativeSource  Mode=TemplatedParent},Path=ArcStart}">
                                                                                                                        <ArcSegment Point="{Binding RelativeSource={RelativeSource  Mode=TemplatedParent},Path=ArcEnd}" 
                                                                                                            Size="130,130" 
                                                                                                            RotationAngle="0" IsLargeArc="{Binding RelativeSource={RelativeSource  Mode=TemplatedParent},Path=IsLargeArc}" SweepDirection="Clockwise"/>
                                                                                                                    </PathFigure>
                                                                                                                </PathGeometry>
                                                                                                            </Path.Data>
                                                                                                        </Path>
                                                                                                        <Path Stroke="Black" StrokeThickness="0,15" Margin="0" StrokeDashArray="0.3" >
                                                                                                            <Path.Data>
                                                                                                                <PathGeometry>
                                                                                                                    <PathFigure StartPoint="{Binding RelativeSource={RelativeSource  Mode=TemplatedParent},Path=ArcStart}">
                                                                                                                        <ArcSegment Point="{Binding RelativeSource={RelativeSource  Mode=TemplatedParent},Path=ArcEnd}" 
                                                                    Size="130,130" 
                                                                    RotationAngle="0" IsLargeArc="{Binding RelativeSource={RelativeSource  Mode=TemplatedParent},Path=IsLargeArc}" SweepDirection="Clockwise"/>
                                                                                                                    </PathFigure>
                                                                                                                </PathGeometry>
                                                                                                            </Path.Data>
                                                                                                        </Path>

                                                                                                    </Canvas>
                                                                                                    <ContentControl Width="150" Height="150" Cursor="Hand"
                                        Name="PART_StartCanvas" Canvas.Left="150"  >
                                                                                                        <ContentControl.Content>
                                                                                                            <Canvas>
                                                                                                                <Grid Width="30" Height="30" Canvas.Left="-15" Canvas.Top="5"   >
                                                                                                                    <Border Background="DimGray" CornerRadius="15" >
                                                                                                                        <Grid>
                                                                                                                            <Grid.LayoutTransform>
                                                                                                                                <RotateTransform Angle="{CalcB:Binding RelativeSource={RelativeSource  Mode=TemplatedParent},Path=-ArcAngleStart}"/>
                                                                                                                            </Grid.LayoutTransform>
                                                                                                                            <materialDesign:PackIcon HorizontalAlignment="Center" VerticalAlignment="Center"
                                                                                                        Kind="TimerStart" Width="25" Height="25" Foreground="LightGray">

                                                                                                                            </materialDesign:PackIcon>
                                                                                                                        </Grid>
                                                                                                                        <Border.Triggers>
                                                                                                                            <EventTrigger RoutedEvent="MouseDown">
                                                                                                                                <EventTrigger.Actions>
                                                                                                                                    <BeginStoryboard>
                                                                                                                                        <Storyboard Duration="00:00:01">
                                                                                                                                            <ColorAnimation Storyboard.TargetProperty="Background.Color" 
                                                        Duration="0:0:0.100" To="DarkGray" />
                                                                                                                                        </Storyboard>
                                                                                                                                    </BeginStoryboard>
                                                                                                                                </EventTrigger.Actions>
                                                                                                                            </EventTrigger>
                                                                                                                            <EventTrigger RoutedEvent="MouseUp">
                                                                                                                                <EventTrigger.Actions>
                                                                                                                                    <BeginStoryboard>
                                                                                                                                        <Storyboard Duration="00:00:01">
                                                                                                                                            <ColorAnimation Storyboard.TargetProperty="Background.Color" 
                                                        Duration="0:0:0.100" To="DimGray" />
                                                                                                                                        </Storyboard>
                                                                                                                                    </BeginStoryboard>
                                                                                                                                </EventTrigger.Actions>
                                                                                                                            </EventTrigger>
                                                                                                                            <EventTrigger RoutedEvent="MouseLeave">
                                                                                                                                <EventTrigger.Actions>
                                                                                                                                    <BeginStoryboard>
                                                                                                                                        <Storyboard Duration="00:00:01">
                                                                                                                                            <ColorAnimation Storyboard.TargetProperty="Background.Color" 
                                                        Duration="0:0:0.100" To="DimGray" />
                                                                                                                                        </Storyboard>
                                                                                                                                    </BeginStoryboard>
                                                                                                                                </EventTrigger.Actions>
                                                                                                                            </EventTrigger>
                                                                                                                        </Border.Triggers>
                                                                                                                    </Border>

                                                                                                                </Grid>
                                                                                                            </Canvas>
                                                                                                        </ContentControl.Content>
                                                                                                        <ContentControl.RenderTransform>
                                                                                                            <RotateTransform CenterX="0" CenterY="150" >
                                                                                                                <RotateTransform.Angle>
                                                                                                                    <MultiBinding Converter="{GD_CommonControl:ValueAngleConverter}">
                                                                                                                        <Binding RelativeSource="{RelativeSource  Mode=TemplatedParent}" Path="Start"/>
                                                                                                                        <Binding RelativeSource="{RelativeSource  Mode=TemplatedParent}" Path="Minimum"/>
                                                                                                                        <Binding RelativeSource="{RelativeSource  Mode=TemplatedParent}" Path="Maximum"/>
                                                                                                                    </MultiBinding>
                                                                                                                </RotateTransform.Angle>
                                                                                                            </RotateTransform>
                                                                                                        </ContentControl.RenderTransform>

                                                                                                    </ContentControl>
                                                                                                    <ContentControl Width="150" Height="150"  Cursor="Hand"
                                        Name="PART_EndCanvas" Canvas.Left="150"  >
                                                                                                        <ContentControl.Content>
                                                                                                            <Canvas>
                                                                                                                <Grid Width="30" Height="30" Canvas.Left="-15" Canvas.Top="5"   >

                                                                                                                        <Border Background="Black" CornerRadius="15" >
                                                                                                                            <Grid>
                                                                                                                                <Grid.LayoutTransform>
                                                                                                                                    <RotateTransform Angle="{CalcB:Binding RelativeSource={RelativeSource  Mode=TemplatedParent},Path=-ArcAngleEnd}"/>
                                                                                                                                </Grid.LayoutTransform>
                                                                                                                                <materialDesign:PackIcon HorizontalAlignment="Center" VerticalAlignment="Center"
                                                                                                        Kind="TimerStop" Width="25" Height="25" Foreground="LightGray">
                                                                                                                                </materialDesign:PackIcon>
                                                                                                                            </Grid>
                                                                                                                            <Border.Triggers>
                                                                                                                                <EventTrigger RoutedEvent="MouseDown">
                                                                                                                                    <EventTrigger.Actions>
                                                                                                                                        <BeginStoryboard>
                                                                                                                                            <Storyboard Duration="00:00:01">
                                                                                                                                                <ColorAnimation Storyboard.TargetProperty="Background.Color" 
                                                        Duration="0:0:0.100" To="DarkGray" />
                                                                                                                                            </Storyboard>
                                                                                                                                        </BeginStoryboard>
                                                                                                                                    </EventTrigger.Actions>
                                                                                                                                </EventTrigger>
                                                                                                                                <EventTrigger RoutedEvent="MouseUp">
                                                                                                                                    <EventTrigger.Actions>
                                                                                                                                        <BeginStoryboard>
                                                                                                                                            <Storyboard Duration="00:00:01">
                                                                                                                                                <ColorAnimation Storyboard.TargetProperty="Background.Color" 
                                                        Duration="0:0:0.100" To="DimGray" />
                                                                                                                                            </Storyboard>
                                                                                                                                        </BeginStoryboard>
                                                                                                                                    </EventTrigger.Actions>
                                                                                                                                </EventTrigger>
                                                                                                                                <EventTrigger RoutedEvent="MouseLeave">
                                                                                                                                    <EventTrigger.Actions>
                                                                                                                                        <BeginStoryboard>
                                                                                                                                            <Storyboard Duration="00:00:01">
                                                                                                                                                <ColorAnimation Storyboard.TargetProperty="Background.Color" 
                                                        Duration="0:0:0.100" To="DimGray" />
                                                                                                                                            </Storyboard>
                                                                                                                                        </BeginStoryboard>
                                                                                                                                    </EventTrigger.Actions>
                                                                                                                                </EventTrigger>
                                                                                                                            </Border.Triggers>
                                                                                                                        </Border>
                                                                                                                    </Grid>
                                                                                                            </Canvas>
                                                                                                        </ContentControl.Content>

                                                                                                        <ContentControl.RenderTransform>
                                                                                                            <RotateTransform CenterX="0" CenterY="150" >
                                                                                                                <RotateTransform.Angle>
                                                                                                                    <MultiBinding Converter="{GD_CommonControl:ValueAngleConverter}">
                                                                                                                        <Binding RelativeSource="{RelativeSource  Mode=TemplatedParent}" Path="End"/>
                                                                                                                        <Binding RelativeSource="{RelativeSource  Mode=TemplatedParent}" Path="Minimum"/>
                                                                                                                        <Binding RelativeSource="{RelativeSource  Mode=TemplatedParent}" Path="Maximum"/>
                                                                                                                    </MultiBinding>
                                                                                                                </RotateTransform.Angle>
                                                                                                            </RotateTransform>
                                                                                                        </ContentControl.RenderTransform>

                                                                                                    </ContentControl>
                                                                                                </Canvas>






                                                                                            </Grid>
                                                                                        </Viewbox>
                                                                                    </Grid>
                                                                                </Border>

                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </GD_CommonControl:CircularRangeSlider.Style>
                                                        </GD_CommonControl:CircularRangeSlider>
                                                        <Grid Grid.Row="2" Grid.ColumnSpan="2" Margin="0,10">
                                                            <TextBlock 
                                                HorizontalAlignment="Center">
                                                                <TextBlock.Text>
                                                                    <MultiBinding Converter="{GD_CommonControl:DateTimeDiffToDateTimeMultiConverter}" >
                                                                        <Binding Path="RestTime"/>
                                                                        <Binding Path="OpenTime"/>
                                                                    </MultiBinding>
                                                                </TextBlock.Text>
                                                            </TextBlock>


                                                        </Grid>


                                                            <StackPanel       Grid.Row="3" Grid.ColumnSpan="2">

                                                                <ItemsControl 
                                                             ItemsSource="{Binding DayOfWeekWorkVMObservableCollection}" >
                                                                    <ItemsControl.ItemTemplate>
                                                                        <DataTemplate>
                                                                            <ToggleButton  
                                                                                IsChecked="{Binding IsWork}" 
                                                    Foreground="White" 
                                                    Content="{Binding DayOfWeek, Converter={GD_CommonControl:DayOfWeekConverter}, UpdateSourceTrigger=PropertyChanged}">
                                                                                <ToggleButton.Style>
                                                                                    <Style TargetType="ToggleButton" 
                                                               BasedOn="{StaticResource SiegCustomButton}">
                                                                                        <Setter Property="Margin" Value="0"/>
                                                                                        <Setter Property="Width" Value="50"/>
                                                                                        <Setter Property="Height" Value="50"/>
                                                                                        <Setter Property="Padding" Value="0,0"/>
                                                                                        <Setter Property="Background" Value="Gray"/>

                                                                                        <Setter Property="Template">
                                                                                            <Setter.Value>
                                                                                                <ControlTemplate TargetType="ToggleButton">
                                                                                                    <Grid>
                                                                                                        <Border
                                                                                                            Background="{TemplateBinding Background}"        
                                                                                    Margin="0" 
                                                                                    CornerRadius="5"
                                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                                    Padding="{TemplateBinding Padding}"
                                                                                    BorderBrush="{TemplateBinding BorderBrush}">
                                                                                                            <Grid>
                                                                                                                <Grid.ColumnDefinitions>
                                                                                                                    <ColumnDefinition/>
                                                                                                                </Grid.ColumnDefinitions>
                                                                                                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                            </Grid>
                                                                                                        </Border>


                                                                                                    </Grid>
                                                                                                    <ControlTemplate.Triggers>
                                                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                                                            <Setter Property="Background" Value="LightSkyBlue"/>
                                                                                                            <Setter Property="Foreground" Value="Black"/>
                                                                                                        </Trigger>
                                                                                                        <Trigger Property="IsPressed" Value="True">
                                                                                                            <Setter Property="Background" Value="Orange"/>
                                                                                                            <Setter Property="Foreground" Value="Black"/>
                                                                                                        </Trigger>

                                                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                                                            <Setter Property="Opacity" Value="0.3"/>
                                                                                                        </Trigger>
                                                                                                        <!--
                                                                                                        <Trigger Property="IsChecked" Value="False">
                                                                                                            <Setter TargetName="TickBorder" Property="Opacity" Value="0.0"/>
                                                                                                        </Trigger>-->
                                                                                                    </ControlTemplate.Triggers>
                                                                                                </ControlTemplate>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </ToggleButton.Style>
                                                                            </ToggleButton>
                                                                        </DataTemplate>
                                                                    </ItemsControl.ItemTemplate>
                                                                    <ItemsControl.ItemsPanel>
                                                                        <ItemsPanelTemplate>
                                                                            <StackPanel Orientation="Horizontal"/>
                                                                        </ItemsPanelTemplate>
                                                                    </ItemsControl.ItemsPanel>
                                                                </ItemsControl>

                                                                <Grid>
                                                                    <ToggleButton x:Name="DayOfWeekWorkVMObservableCollectionToggleButton" IsChecked="{Binding DayOfWeekWorkVMObservableCollectionDropDownListlsShow}"
                                                                HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"  Width="auto" IsThreeState="False"
                                                              >
                                                                        <Grid>
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition/>
                                                                                <ColumnDefinition/>
                                                                            </Grid.ColumnDefinitions>
                                                                            <TextBlock Text="{DynamicResource Text_Repeat}" Margin="10,0"></TextBlock>
                                                                            <TextBlock  Grid.Column="1" HorizontalAlignment="Right"  Margin="10,0"
                                                                        Text="{Binding DayOfWeekWorkVMObservableCollection, Converter={gd_stampingmachine:DayOfWeekWorkVMObservableCollectionConverter}}"  
                                                                                               Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
                                                                        </Grid>
                                                                    </ToggleButton>
                                                                    <GD_Popup:DraggablePopup 
                                    PopupAnimation="Fade"   FlowDirection="LeftToRight" StaysOpen="False"
                                    Placement="Bottom" 
                                                                IsOpen="{Binding DayOfWeekWorkVMObservableCollectionDropDownListlsShow}"
                                    PlacementTarget="{Binding ElementName=DayOfWeekWorkVMObservableCollectionToggleButton}"
                                                          HorizontalAlignment="Center" >
                                                                        <ItemsControl 
                                                             ItemsSource="{Binding DayOfWeekWorkVMObservableCollection}" >
                                                                            <ItemsControl.ItemTemplate>
                                                                                <DataTemplate>
                                                                                    <ToggleButton  IsChecked="{Binding IsWork}" 
                                                    Foreground="White" Content="{Binding DayOfWeek, Converter={GD_CommonControl:DayOfWeekConverter}, UpdateSourceTrigger=PropertyChanged}">
                                                                                        <ToggleButton.Style>
                                                                                            <Style TargetType="ToggleButton" 
                                                               BasedOn="{StaticResource SiegCustomButton}">
                                                                                                <Setter Property="Margin" Value="0"/>
                                                                                                <Setter Property="Padding" Value="5,0"/>
                                                                                                <Setter Property="Background" Value="Gray"/>

                                                                                                <Setter Property="Template">
                                                                                                    <Setter.Value>
                                                                                                        <ControlTemplate TargetType="ToggleButton">
                                                                                                            <Grid>
                                                                                                                <Border Background="{TemplateBinding Background}"        
                                                                                    Margin="0" 
                                                                                    CornerRadius="5"
                                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                                    Padding="{TemplateBinding Padding}"
                                                                                    BorderBrush="{TemplateBinding BorderBrush}">
                                                                                                                    <Grid>
                                                                                                                        <Grid.ColumnDefinitions>
                                                                                                                            <ColumnDefinition/>
                                                                                                                            <ColumnDefinition Width="auto"/>
                                                                                                                        </Grid.ColumnDefinitions>
                                                                                                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                                        <Border Grid.Column="1" Margin="5" Name="TickBorder"
                                                                                            >
                                                                                                                            <materialDesign:PackIcon Kind="Tick"  
                                                                                                                 Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border} ,Path=ActualHeight}" 
                                                                                                                 Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border} ,Path=ActualHeight}" 
                                                                                            Foreground="Orange">

                                                                                                                            </materialDesign:PackIcon>
                                                                                                                        </Border>
                                                                                                                    </Grid>
                                                                                                                </Border>


                                                                                                            </Grid>
                                                                                                            <ControlTemplate.Triggers>
                                                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                                                    <Setter Property="Background" Value="LightSkyBlue"/>
                                                                                                                    <Setter Property="Foreground" Value="Black"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsPressed" Value="True">
                                                                                                                    <Setter Property="Background" Value="Orange"/>
                                                                                                                    <Setter Property="Foreground" Value="Black"/>
                                                                                                                </Trigger>

                                                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                                                    <Setter Property="Opacity" Value="0.3"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsChecked" Value="False">
                                                                                                                    <Setter TargetName="TickBorder" Property="Opacity" Value="0.0"/>
                                                                                                                </Trigger>
                                                                                                            </ControlTemplate.Triggers>
                                                                                                        </ControlTemplate>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>


                                                                                        </ToggleButton.Style>
                                                                                    </ToggleButton>
                                                                                </DataTemplate>
                                                                            </ItemsControl.ItemTemplate>
                                                                        </ItemsControl>
                                                                    </GD_Popup:DraggablePopup>
                                                                </Grid>
                                                            </StackPanel>



                                                    </Grid>
                                                </StackPanel>
                                            </Grid>
                                        </materialDesign:DrawerHost.BottomDrawerContent>
                                        <materialDesign:DrawerHost.Content>
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="auto"/>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>
                                                <Grid>
                                                    <Grid HorizontalAlignment="Left">

                                                        <ToggleButton 
                                                            IsChecked="{Binding EditButtonIsChecked}" 
                                                                      Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsChecked , Converter={dx:BooleanToVisibilityConverter Invert=True}}"
                                        Command="{Binding EditTimingControlCommand}" Background="Transparent" BorderThickness="0" FontWeight="Bold"
                                            Foreground="Orange"
                                              Content="{DynamicResource btnEdit}"/>

                                                        <ToggleButton IsChecked="{Binding EditButtonIsChecked, Converter={GD_CommonControl:InvertBooleanConverter}}" 
                                                                      Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsChecked , Converter={dx:BooleanToVisibilityConverter  Invert=True}}"
                                            Command="{Binding FinishEditTimingControlCommand}" Background="Transparent"  BorderThickness="0" Foreground="Orange"  FontWeight="Bold"
                                              Content="{DynamicResource btnFinish}" />

                                                    </Grid>

                                                    <Button HorizontalAlignment="Right"
                                        Foreground="Orange" Background="Transparent" BorderThickness="0"
                                              Content="{materialDesign:PackIcon Kind=Plus}" Command="{Binding AddNewTimingControlCommand}"/>
                                                </Grid>
                                                    <ListBox  Grid.Row="1" MaxHeight="500"  
                                                    Name="TimingControlVMCollectionListBox"   
                                                     ItemsSource="{Binding TimingControlVMCollectionCloned}"
                                                     SelectedItem="{Binding TimingControlVMSelected}">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="SelectionChanged">
                                                            <i:InvokeCommandAction 
Command="{Binding TimingControlVMCollectionListBox_SelectionChangedCommand}" PassEventArgsToCommand="True"/>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>


                                                    <ListBox.ItemsPanel>
                                                        <ItemsPanelTemplate>
                                                            <StackPanel Orientation="Vertical"/>
                                                        </ItemsPanelTemplate>
                                                    </ListBox.ItemsPanel>
                                                    <ListBox.ItemContainerStyle>
                                                        <Style TargetType="ListBoxItem">
                                                            <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                                            <Setter Property="Cursor" Value="Hand"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="ListBoxItem">
                                                                        <Border 
                                                                            Background="{TemplateBinding Background}">
                                                                            <Grid  
                                                                d:DataContext="{d:DesignInstance Type=ParameterSetting:TimingControlViewModel}">
                                                                                <Grid.ColumnDefinitions>
                                                                                    <ColumnDefinition Width="auto"/>
                                                                                    <ColumnDefinition MinWidth="300"/>
                                                                                    <ColumnDefinition Width="auto"/>
                                                                                    <ColumnDefinition Width="auto"/>
                                                                                </Grid.ColumnDefinitions>
                                                                                <Expander 
                                        IsExpanded="{Binding IsEdit}"
                                        Background="Transparent" ExpandDirection="Right" >

                                                                                    <Expander 
                                                                                    IsExpanded="{Binding IsDeleteButtonTrigger, Converter={GD_CommonControl:InvertBooleanConverter}}"
                                        Background="Transparent" ExpandDirection="Right" >
                                                                                        <ToggleButton IsChecked="{Binding IsDeleteButtonTrigger}"
                                                                                x:Name="PrepareDeleteButton" Background="Transparent">
                                                                                            <materialDesign:PackIcon 
                                                Kind="MinusCircle"  Foreground="Red" Width="30" Height="30"/>
                                                                                        </ToggleButton>
                                                                                    </Expander>

                                                                                </Expander>

                                                                                <Grid Grid.Column="1" Grid.ColumnSpan="2">
                                                                                    <Thumb  Background="Transparent" Opacity="0.5" >
                                                                                        <i:Interaction.Triggers>
                                                                                            <i:EventTrigger EventName="DragDelta">
                                                                                                <i:InvokeCommandAction Command="{Binding OnThumbDragDeltaCommand}" PassEventArgsToCommand="True"/>
                                                                                            </i:EventTrigger>
                                                                                            <i:EventTrigger EventName="PreviewMouseDown">
                                                                                                <i:InvokeCommandAction Command="{Binding OnThumbMouseDownCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}}"  />
                                                                                            </i:EventTrigger>
                                                                                            <i:EventTrigger EventName="PreviewMouseUp">
                                                                                                <i:InvokeCommandAction Command="{Binding OnThumbMouseUpCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}}"  />
                                                                                            </i:EventTrigger>

                                                                                        </i:Interaction.Triggers>
                                                                                        <Thumb.Template>
                                                                                            <ControlTemplate>
                                                                                                <Grid>
                                                                                                    <Grid.ColumnDefinitions>
                                                                                                        <ColumnDefinition/>
                                                                                                        <ColumnDefinition Width="auto"/>
                                                                                                    </Grid.ColumnDefinitions>
                                                                                            <Grid Grid.Column="0" Margin="5,0" >
                                                                                                <Grid.Style>
                                                                                                    <Style TargetType="{x:Type Grid}" >
                                                                                                        <Setter Property="Opacity" Value="1"/>
                                                                                                        <Style.Triggers>
                                                                                                            <DataTrigger Binding="{Binding Path=IsEnable}" Value="false">
                                                                                                                <Setter Property="Opacity" Value="0.5"/>
                                                                                                            </DataTrigger>
                                                                                                        </Style.Triggers>
                                                                                                    </Style>
                                                                                                </Grid.Style>
                                                                                                <StackPanel 
                                                                            Margin="10,5">
                                                                                                    <Grid>
                                                                                                        <Grid.ColumnDefinitions>
                                                                                                            <ColumnDefinition  Width="auto"/>
                                                                                                            <ColumnDefinition Width="auto"/>
                                                                                                            <ColumnDefinition  Width="auto"/>
                                                                                                        </Grid.ColumnDefinitions>

                                                                                                        <TextBlock 
                                                                Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"
                                                 Text="{Binding RestTime, StringFormat='HH:mm'}"
                                                FontSize="50"/>
                                                                                                        <TextBlock  Grid.Column="1"
                                                                Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"
                                                 Text="-"
                                                FontSize="50"/>


                                                                                                        <TextBlock  Grid.Column="2"
                                                                Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"
                                                 Text="{Binding OpenTime, StringFormat='HH:mm'}"
                                                FontSize="50"/>
                                                                                                    </Grid>
                                                                                                    <TextBlock  Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}">
                                                                                                        <TextBlock.Text>
                                                                                                            <MultiBinding Converter="{GD_CommonControl:DateTimeDiffToDateTimeMultiConverter}" >
                                                                                                                <Binding Path="RestTime"/>
                                                                                                                <Binding Path="OpenTime"/>
                                                                                                            </MultiBinding>
                                                                                                        </TextBlock.Text>
                                                                                                    </TextBlock>
                                                                                                    <TextBlock Text="{Binding DayOfWeekWorkVMObservableCollection, Converter={gd_stampingmachine:DayOfWeekWorkVMObservableCollectionConverter}}"  
                                                                                               Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
                                                                                                </StackPanel>
                                                                                                    </Grid>
                                                                                                    
                                                                                                </Grid>
                                                                                            </ControlTemplate>
                                                                                        </Thumb.Template>
                                                                                    </Thumb>
                                                                                </Grid>

                                                                                <Expander Grid.Column="2" 
                                        Background="Transparent" ExpandDirection="Right" >
                                                                                    <Expander.IsExpanded>
                                                                                        <MultiBinding Converter="{GD_CommonControl:MultiBooleanArrayAndParameterArrayToBooleanConverter}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                                                                                            <MultiBinding.Bindings>
                                                                                                <Binding Path="IsDeleteButtonTrigger" ConverterParameter=""/>
                                                                                                <Binding Path="IsEdit"/>
                                                                                            </MultiBinding.Bindings>
                                                                                            <MultiBinding.ConverterParameter>
                                                                                                <x:Array Type="{x:Type sys:Boolean}">
                                                                                                    <sys:Boolean>false</sys:Boolean>
                                                                                                    <sys:Boolean>false</sys:Boolean>
                                                                                                </x:Array>
                                                                                            </MultiBinding.ConverterParameter>
                                                                                        </MultiBinding>
                                                                                    </Expander.IsExpanded>
                                                                                    <CheckBox  IsThreeState="False" IsChecked="{Binding IsEnable}" Margin="10,0"
                                            Style="{StaticResource GreenSwitch}" />

                                                                                </Expander>



                                                                                <Expander Grid.Column="3" ExpandDirection="Left"
                                        IsExpanded="{Binding IsDeleteButtonTrigger}">
                                                                                    <Button Command="{Binding DeleteCommand}" CommandParameter="{Binding ElementName=TimingControlVMCollectionListBox}"
                                                                        
                                                                        Background="Red"  
                                                    Content="{DynamicResource btnDelete}"  Foreground="White" FontSize="16"
                                                    Padding="10,0"/>

                                                                                </Expander>
                                                                            </Grid>
                                                                        </Border>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Style.Triggers>
                                                                <Trigger Property="IsSelected" Value="True">
                                                                    <Setter Property="Background" Value="{DynamicResource  PrimaryHueMidBrush}"/>
                                                                </Trigger>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Background" Value="{DynamicResource PrimaryHueDarkBrush}"/>
                                                                </Trigger>

                                                            </Style.Triggers>
                                                        </Style>
                                                    </ListBox.ItemContainerStyle>

                                                </ListBox>
                                            </Grid>
                                        </materialDesign:DrawerHost.Content>
                                    </materialDesign:DrawerHost>
                                </StackPanel>


                                </Grid>
                                <StackPanel IsEnabled="{Binding IsBottomDrawerOpen ,Converter={GD_CommonControl:InvertBooleanConverter}}"
                                    Grid.Row="0" Grid.RowSpan="2" Grid.Column="1"   Margin="10,0" VerticalAlignment="Bottom" HorizontalAlignment="Left">
                                    <Button  Padding="5,3,5,0"
                                Content="{DynamicResource btnLoadSetting}" Margin="10" Command="{Binding LoadSettingCommand}"/>
                                    <Button  Padding="5,3,5,0"
                                Content="{DynamicResource btnRecoverSetting}"  Margin="10" Command="{Binding RecoverSettingCommand}"/>
                                    <Button  Padding="5,3,5,0"
                                Content="{DynamicResource btnSaveSetting}"  Margin="10" Command="{Binding SaveSettingCommand}"/>
                                </StackPanel>
                            </StackPanel>
                        </GroupBox>
                        
                        
                        
                        
                    </Grid>
                </TabItem>
                <TabItem Header="123"   IsSelected="{Binding ElementName=TbtnSegregationSetting, Path=IsChecked}" DataContext="{Binding SeparateSettingVM}">
                    <StackPanel Orientation="Horizontal"  HorizontalAlignment="Center"
                                VerticalAlignment="Top">
                        <GroupBox Header="{DynamicResource Text_Separate}" Margin="10"  Padding="20">
                            <StackPanel Orientation="Horizontal">
                                
                        <StackPanel>

                                    <Grid Margin="0,0,0,16">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.Resources>
                                            <Style TargetType="ToggleButton" BasedOn="{StaticResource SiegToggleButton_UnderLine}">
                                                <Setter Property="Cursor" Value="Hand"/>
                                            </Style>
                                        </Grid.Resources>
                                        <ToggleButton  Grid.Column="0" HorizontalAlignment="Stretch" Width="auto"
                                            Name="IsSingleSettingToggleButton" Style="{StaticResource GD_ToggleButton_Gray}" Margin="0,0,2,0"
                                            Content="{DynamicResource Text_SingleSetting}" Foreground="{DynamicResource PrimaryHueLightForegroundBrush}"
                                                     IsChecked="{Binding SettingType , Converter={GD_CommonControl:ObjectIsEqualToBooleanConverter},ConverterParameter={x:Static GD_Enum:SettingTypeEnum.SingleSetting}}"
                                                      />
                                        <ToggleButton Grid.Column="1" HorizontalAlignment="Stretch" Width="auto"
                                            Name="IsUnifiedSettingToggleButton" Style="{StaticResource GD_ToggleButton_Gray}" Margin="2,0,0,0"
                                            Content="{DynamicResource Text_UnifiedSetting}" Foreground="{DynamicResource PrimaryHueLightForegroundBrush}"
                                                     IsChecked="{Binding SettingType , Converter={GD_CommonControl:ObjectIsEqualToBooleanConverter},ConverterParameter={x:Static GD_Enum:SettingTypeEnum.UnifiedSetting}}"
                                                     />
                                    </Grid>

                                    <Grid Grid.Row="1"  Margin="0,8,0,0" 
                                      Visibility="{Binding SettingType, Converter={GD_CommonControl:ObjectIsEqualToVisibilityConverter} , ConverterParameter={x:Static GD_Enum:SettingTypeEnum.UnifiedSetting}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="150"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{DynamicResource Text_Box_AllSetting}"  />
                                    <GD_UserControls:TriggerSliderUserControl
                                        Width="250"  Maximum="500"  
                                    Grid.Row="0" Grid.Column="1"  MainSilderValueChanged="{Binding SingleSetting_SeparateBoxValueChanged}"
                                    MainSilderValue="{Binding SingleSetting_SeparateBoxValue, Mode=TwoWay}"/>
                                </Grid>
                            
                                <CheckBox Margin="0.5,10" VerticalAlignment="Center"
                                                                Style="{StaticResource MaterialDesignUserForegroundCheckBox}" HorizontalAlignment="Left" IsChecked="True"
                                                                      Command="{Binding SetAllSeparateBoxIsEnabled}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" 
                                          Content="{DynamicResource Text_Box_AllSetting}" Foreground="{DynamicResource PrimaryHueMidForegroundBrush}" FontSize="16" >
                                    
                                </CheckBox>
                                <ListBox Grid.Row="1" Grid.ColumnSpan="2"  SelectionMode="Multiple" 
                                     ScrollViewer.VerticalScrollBarVisibility="Auto"  ClipToBounds="True" 
                                     ItemsSource="{Binding SeparateBoxVMObservableCollectionClone ,UpdateSourceTrigger=PropertyChanged}"
                                     >
                                    <ListBox.ItemContainerStyle>
                                        <Style TargetType="ListBoxItem">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                        <Grid Margin="0,5">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="150"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <CheckBox Margin="0,5" VerticalAlignment="Center"
                                                                Style="{StaticResource MaterialDesignUserForegroundCheckBox}" HorizontalAlignment="Left" 
                                                                     Foreground="{DynamicResource PrimaryHueLightForegroundBrush}"
                                                                      IsChecked="{Binding BoxIsEnabled}">
                                                            <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="0,-3,0,0" >
                                                                    <TextBlock Text="{DynamicResource Text_Box}" Foreground="{DynamicResource PrimaryHueMidForegroundBrush}" FontSize="16"/>
                                                                <TextBlock  Text="{Binding BoxIndex}" VerticalAlignment="Center" 
                                                                            FontSize="16" Margin="2,0" TextAlignment="Right" Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                                                                </StackPanel>
                                                            </CheckBox>
                                                            <Grid Grid.Column="1" IsEnabled="{Binding BoxIsEnabled}">
                                                                <GD_UserControls:TriggerSliderUserControl  Maximum="500"
                                                                IsEnabled="{Binding ElementName=IsSingleSettingToggleButton, Path=IsChecked}"
                                                             MainSilderValue="{Binding BoxSliderValue , Mode=TwoWay , UpdateSourceTrigger=PropertyChanged}" Width="250" />
                                                            </Grid>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ListBox.ItemContainerStyle>

                                    <ListBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Vertical" />
                                        </ItemsPanelTemplate>
                                    </ListBox.ItemsPanel>

                                </ListBox>

                                </StackPanel>

                                <StackPanel Grid.Row="0" Grid.RowSpan="5" Grid.Column="5"  Margin="10,0" VerticalAlignment="Bottom">
                                    <Button  Padding="5,3,5,0" Content="{DynamicResource btnLoadSetting}" Margin="10" Command="{Binding LoadSettingCommand}" />
                                    <Button  Padding="5,3,5,0" Content="{DynamicResource btnRecoverSetting}"  Margin="10" Command="{Binding RecoverSettingCommand}" Visibility="Collapsed"/>
                                    <Button  Padding="5,3,5,0" Content="{DynamicResource btnSaveSetting}"  Margin="10" Command="{Binding SaveSettingCommand}"/>
                                </StackPanel>
                            </StackPanel>
                        </GroupBox>
                    </StackPanel>
                </TabItem>
                <TabItem Header="123"   IsSelected="{Binding ElementName=TbtnInputOutput, Path=IsChecked}" DataContext="{Binding InputOutputVM}">
                    <Grid Name="IO_MainGrid" HorizontalAlignment="Center">
                        <dxg:GridControl 
                                Style="{StaticResource ProjectGridControl}"  
                                    Background="Transparent"
                                                  AutoGenerateColumns="None"
                                                  SelectionMode="Row"
                                                  ItemsSource="{Binding Source={x:Static GD_Singletons:StampMachineDataSingleton.Instance}, Path=IO_TableObservableCollection}"
                                    MaxHeight="{Binding ElementName=IO_MainGrid, Path=ActualHeight}"    >

                            <dxg:GridControl.View >
                                <dxg:TableView  
                                IsColumnMenuEnabled ="False"
                                AllowSorting="false"
                                AllowColumnFiltering="False"
                                AllowColumnMoving="False"
                                AllowEditing="True"
                                ShowColumnHeaders="True"
                                HeaderHorizontalAlignment="Center"
                                                                
                                VerticalScrollbarVisibility="Auto"
                                HorizontalScrollbarVisibility="Auto"
                                ShowHorizontalLines="False"
                                ShowVerticalLines="False"
                                ShowGroupPanel="False"
                                ShowSearchPanelMode="Never"
                                SearchPanelNullText="Search Tasks(Ctrl + F)" 
                                SearchPanelFindMode="Always"
                                ShowIndicator="False"
                                SearchDelay="0">
                                    <dxg:TableView.RowStyle>
                                        <Style TargetType="{x:Type dxg:RowControl}" >
                                            <Setter Property="Cursor" Value="Hand"/>
                                            <Setter Property="Height" Value="40"/>
                                            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
                                            <Setter Property="Background" Value="Transparent" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                                                    <Setter Property="Background" Value="DeepSkyBlue" />
                                                    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
                                                </DataTrigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="DodgerBlue"/>
                                                </Trigger>
                                                <DataTrigger Binding="{Binding Row.NodeID}" Value="">
                                                    <Setter Property="Opacity" Value="0.3" />
                                                </DataTrigger>

                                                <DataTrigger Binding="{Binding Row.NodeID}" Value="{x:Null}">
                                                    <Setter Property="Opacity" Value="0.3" />
                                                </DataTrigger>



                                            </Style.Triggers>
                                        </Style>
                                    </dxg:TableView.RowStyle>
                                </dxg:TableView>
                            </dxg:GridControl.View>










                            <dxg:GridColumn 
                                                    FieldName="Info"  Width="auto" AllowMoving="false"  IsSmart="True">
                                <dxg:GridColumn.EditSettings>
                                    <dxe:TextEditSettings HorizontalContentAlignment="Left"/>
                                </dxg:GridColumn.EditSettings>
                            </dxg:GridColumn>


                            <dxg:GridColumn HorizontalHeaderContentAlignment="Center"
                                                        FieldName="BondingCableTerminal">
                            </dxg:GridColumn>

                            <dxg:GridColumn HorizontalHeaderContentAlignment="Center"
                                                        FieldName="KEBA_Definition">
                            </dxg:GridColumn>

                            <dxg:GridColumn HorizontalHeaderContentAlignment="Center"
                                                        FieldName="SensorType">
                            </dxg:GridColumn>

                            <dxg:GridColumn HorizontalHeaderContentAlignment="Center" AllowEditing="false"
                                                        FieldName="IO_Value">
                            </dxg:GridColumn>
                            
                            <dxg:GridColumn HorizontalHeaderContentAlignment="Center" Width="auto"
                                                        FieldName="NodeID">
                            </dxg:GridColumn>

                        </dxg:GridControl>
                    </Grid>
                    
                    
                    
                </TabItem>
                <TabItem Header="123"   IsSelected="{Binding ElementName=TbtnSeEngineeringMode, Path=IsChecked}" DataContext="{Binding EngineerSettingVM}">
                    <StackPanel HorizontalAlignment="Center" >
                        <GroupBox Grid.Row="1" Header="{DynamicResource Text_lubricationSystem}" Margin="10"  VerticalAlignment="Top" >
                        <Grid HorizontalAlignment="Left">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="80"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0,10" >
                                <TextBlock Text="{DynamicResource Text_CycleTime}"/>
                                <TextBlock Text="："/>
                            </StackPanel>
                            <materialDesign:TimePicker Grid.Row="0"  Grid.Column="1"  Width="300"   VerticalContentAlignment="Bottom" VerticalAlignment="Top"
                                                           materialDesign:HintAssist.Hint="{DynamicResource Text_PSelectTime}" 
                                                           WithSeconds="True" 
                                                           SelectedTime="{Binding CycleTimeTimePicker}">

                            </materialDesign:TimePicker>

                            <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="0,10" >
                                <TextBlock Text="{DynamicResource Text_Intervals}"/>
                                <TextBlock Text="："/>
                            </StackPanel>
                                <materialDesign:TimePicker  Grid.Row="1" Grid.Column="1"  Width="300"   VerticalContentAlignment="Bottom" VerticalAlignment="Top"
                                                            materialDesign:HintAssist.Hint="{DynamicResource Text_PSelectTime}" 
                                                            WithSeconds="True"
                                                             SelectedTime="{Binding IntervalsTimePicker}"
                                                            >


                            </materialDesign:TimePicker>
                        </Grid>
                    </GroupBox>
                        <GroupBox Grid.Row="1" Header="OPCUA test" Margin="10"  VerticalAlignment="Top" >
                            <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">

                                <GD_UserControls:FunctionToggleUserControl     Visibility="Collapsed"         
                                   Command="{Binding OpcuaFormBrowseServerOpenCommand}"
                                    IsChecked="{Binding OpcuaFormBrowseServerOpenCommand.IsRunning, Mode=OneWay,Converter={dx:BoolInverseConverter}}"
                                    ProgressVisibility="{Binding OpcuaFormBrowseServerOpenCommand.IsRunning,Mode=OneWay, Converter={dx:BooleanToVisibilityConverter}}"
                                    ControlTitleText="OPCUA"                 
                                    PackIconKind="Gear"
                                    >
                                </GD_UserControls:FunctionToggleUserControl>


                                <Button  Content="Opcua StartScan" Margin="5" Padding="5,3,5,0"
                                    IsEnabled="{Binding StampMachineData.IsScaning, Converter={dx:BoolInverseConverter}}"
                                    Command="{Binding OpcuaStartScanCommand}"/>
                                <Button Content="Opcua StopScan"  Margin="5" Padding="5,3,5,0"
                                    IsEnabled="{Binding StampMachineData.IsScaning}"
                                    Command="{Binding OpcuaStopScanCommand}"/>

                            </StackPanel>
                        </GroupBox>
                    </StackPanel>
                </TabItem>
            </TabControl>
        </ScrollViewer>
    </Grid>
</UserControl>
