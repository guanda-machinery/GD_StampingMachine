<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"                           
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" 
                    xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:local="clr-namespace:GD_StampingMachine"
                    xmlns:GD_Common="clr-namespace:GD_CommonLibrary;assembly=GD_CommonLibrary">

    <Style TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignComboBox}" x:Key="GD_ComboBox">

        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueLightForegroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
        <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="{DynamicResource PrimaryHueDarkForegroundBrush}" />

        <Setter Property="FontSize" Value="16"/>
        <Setter Property="BorderThickness" Value="0,0,0,1.5"/>
        <Setter Property="Width" Value="auto"/>
        <Setter Property="Margin" Value="10,0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="materialDesign:ColorZoneAssist.Mode" Value="PrimaryMid"/>
        <Setter Property="materialDesign:HintAssist.Hint" Value="Default"/>
        <Setter Property="materialDesign:HintAssist.HintOpacity" Value=".2"/>
        <Setter Property="IsEditable" Value="False"/>
    </Style>
    <Style TargetType="ComboBox" BasedOn="{StaticResource GD_ComboBox}"/>

    <Style TargetType="ComboBox" BasedOn="{StaticResource GD_ComboBox}" x:Key="GD_WhiteComboBox">
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="Black" />
        <Setter Property="materialDesign:ColorZoneAssist.Mode" Value="Custom"/>
        <Setter Property="materialDesign:ColorZoneAssist.Background" Value="White"/>
        <Setter Property="materialDesign:ColorZoneAssist.Foreground" Value="Black"/>
    </Style>

    <Style TargetType="{x:Type dxe:ComboBoxEdit}"  x:Key="GD_ComboBoxEdit">
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="Black" />
        <Setter Property="materialDesign:ColorZoneAssist.Mode" Value="Custom"/>
        <Setter Property="materialDesign:ColorZoneAssist.Background" Value="White"/>
        <Setter Property="materialDesign:ColorZoneAssist.Foreground" Value="Black"/>
    </Style>



    



    <Style TargetType="ComboBox" BasedOn="{StaticResource GD_ComboBox}" x:Key="GD_ComboBox_WithIconPack">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid >
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <materialDesign:PackIcon Kind="{Binding Converter={local:EnumToPackIconKindConverter}}" Width="20" Height="20" Margin="0,0,5,0" />
                        <TextBlock Grid.Column="1" Text="{Binding Converter={GD_Common:EnumGetNameConverter}}"></TextBlock>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <ControlTemplate x:Key="WhiteComboBoxToggleButtonNoBorder" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border
                x:Name="Border"
                Grid.ColumnSpan="2"
                Background="Transparent"
                BorderBrush="{StaticResource solidclr_White}"
                BorderThickness="0,0,0,1" />
            <Path
                x:Name="Arrow"
                Grid.Column="1"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                Fill="{StaticResource solidclr_CreamyWhite}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="Arrow" Property="Data" Value="M0,4 L0,6 L4,2 L8,6 L8,4 L4,0 z" />
                <Setter TargetName="Border" Property="Visibility" Value="Collapsed" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style
        x:Key="GD_White_ComboBox"
        BasedOn="{StaticResource MaterialDesignFloatingHintComboBox}"
        TargetType="ComboBox">
        <Setter Property="Foreground" Value="{StaticResource solidclr_DimGray}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="30" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter
                            Name="ContentSite"
                            Margin="0,6"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            IsHitTestVisible="False" />
                        <ToggleButton
                            HorizontalAlignment="Stretch"
                            Name="ToggleButton"
                            Grid.ColumnSpan="2"
                            ClickMode="Press"
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Template="{StaticResource WhiteComboBoxToggleButtonNoBorder}" />
                        <Popup
                            Name="Popup"
                            AllowsTransparency="True"
                            Focusable="False"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            Placement="Bottom"
                            PopupAnimation="Slide">
                            <Grid
                                Name="DropDown"
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                SnapsToDevicePixels="True">
                                <Border
                                    x:Name="DropDownBorder"
                                    Background="{StaticResource solidclr_CreamyGray}"
                                    BorderBrush="{StaticResource solidclr_SilverGray}"
                                    BorderThickness="1" />
                                <dxlc:ScrollBox SnapsToDevicePixels="True">
                                    <dxlc:ScrollBox.VerticalScrollBarStyle>
                                        <Style BasedOn="{StaticResource VerticalScrollBar_STD}" TargetType="ScrollBar" />
                                    </dxlc:ScrollBox.VerticalScrollBarStyle>
                                    <dxlc:ScrollBox.HorizontalScrollBarStyle>
                                        <Style BasedOn="{StaticResource HorizontalScrollBar_STD}" TargetType="ScrollBar" />
                                    </dxlc:ScrollBox.HorizontalScrollBarStyle>
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </dxlc:ScrollBox>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
</ResourceDictionary>