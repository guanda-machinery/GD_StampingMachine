<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"      
                    xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:GD_Common="clr-namespace:GD_CommonLibrary;assembly=GD_CommonLibrary">

        <Style  x:Key="ProjectGridControlCellStyle" TargetType="dxg:LightweightCellEditor" BasedOn="{StaticResource {dxgt:GridRowThemeKey ResourceKey=LightweightCellStyle}}">
            <Setter Property="TextBlock.FontSize" Value="16"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Opacity" Value="1"/>
        <Style.Triggers>
            <Trigger Property="dxg:DataViewBase.IsFocusedCell" Value="True" >
                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.9"/>
            </Trigger>
        </Style.Triggers>
    </Style>



    <Style  x:Key="ProjectGridControlGroupRowControlStyle" TargetType="dxg:GroupRowControl">
        <Setter Property="Background" Value="DimGray" />
        <Style.Triggers>

            <DataTrigger Binding="{Binding GroupLevel}" Value="1">
                <Setter Property="Background" Value="Gray" />
            </DataTrigger>
            <DataTrigger Binding="{Binding GroupLevel}" Value="2">
                <Setter Property="Background" Value="DarkGray" />
            </DataTrigger>
            <DataTrigger Binding="{Binding GroupLevel}" Value="3">
                <Setter Property="Background" Value="LightSlateGray" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                <Setter Property="Background" Value="OrangeRed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsFocused}" Value="True">
                <Setter Property="Background" Value="OrangeRed"/>
            </DataTrigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Orange"/>
            </Trigger>
            <!--      <DataTrigger Value="Selected"
                         Binding="{Binding SelectionState}">
                                    <Setter Property="Background" Value="#FFFFDC00" />
                                    <Setter Property="Foreground" Value="Black" />
                                    <Setter Property="FontWeight" Value="SemiBold" />
                                </DataTrigger>-->


        </Style.Triggers>
    </Style>


    <Style x:Key="ProjectGridControl" TargetType="dxg:GridControl">

        <Setter Property="SelectionMode" Value="Row"/>
        <Setter Property="AutoGenerateColumns" Value="None"/>
        <Setter Property="ShowBorder" Value="False"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Opacity" Value="1"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.7"/>
            </Trigger>
        </Style.Triggers>
        <Style.Resources>



            <Style TargetType="dxg:TableView">
                <Setter Property="FadeSelectionOnLostFocus" Value="False"/>
                <Setter Property="CellStyle" Value="{StaticResource ProjectGridControlCellStyle}"/>
                <Setter Property="RowStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type dxg:RowControl}" >
                            <Setter Property="Cursor" Value="Hand"/>
                            <Setter Property="Height" Value="40"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
                            <Setter Property="Background" Value="Transparent" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                                    <Setter Property="Background" Value="DeepSkyBlue" />
                                    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
                                </DataTrigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="DodgerBlue"/>
                                </Trigger>
                                <DataTrigger Binding="{Binding Row.IsFinish}" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource PrimaryHueDarkBrush}" />
                                </DataTrigger>
                                
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=IsSelected}" Value="True" />
                                        <Condition Binding="{Binding Row.IsFinish}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" Value="DarkGreen" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                                        <Condition Binding="{Binding Row.IsFinish}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" Value="ForestGreen" />
                                </MultiDataTrigger>


                            </Style.Triggers>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="GroupRowStyle" Value="{StaticResource ProjectGridControlGroupRowControlStyle}"/>
                <Setter Property="RuntimeLocalizationStrings">
                    <Setter.Value>
                        <dxg:GridRuntimeStringCollection>
                            <dxg:RuntimeStringIdInfo Id="GridGroupPanelText" Value="Group Panel"/>
                            <dxg:RuntimeStringIdInfo Id="ColumnChooserCaption" Value="Hidden Columns"/>
                        </dxg:GridRuntimeStringCollection>
                    </Setter.Value>
                </Setter>

                <Setter Property="ColumnHeaderContentStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type ContentControl}">
                            <Setter Property="FontSize" Value="14" />
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}" />
                        </Style>
                    </Setter.Value>
                </Setter>

            </Style>
            <Style TargetType="dxg:GridColumn">
                <Setter Property="HeaderStyle">
                    <Setter.Value>
                        <Style TargetType="dxg:BaseGridHeader">
                            <Setter Property="dxg:BaseGridColumnHeader.ShowFilterButtonOnHover" Value="False" />
                            <Setter Property="BorderBrush" Value="#858585" />
                            <Setter Property="BorderThickness" Value="0,0,1,0" />
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="dxg:FitColumnHeader">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate/>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="dxg:IndicatorColumnHeader">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0"/>
            </Style>
            <Style TargetType="dxg:GroupPanelControl">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type dxg:GroupPanelControl}">
                            <dx:MeasurePixelSnapper>
                                <Border x:Name="GroupPanelBorder" Background="Gray" 
                                       
                                        BorderBrush="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=GroupPanelBorderBrush}}" 
                                        BorderThickness="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=GroupPanelBorderThickness}}">
                                    <Grid Margin="10" >

                                        <TextBlock x:Name="PART_GroupPanelDragText" Foreground="White" FontSize="16">
                                            <TextBlock.Text>
                                                <Binding Path="View.LocalizationDescriptor" RelativeSource="{RelativeSource TemplatedParent}" ConverterParameter="GridGroupPanelText">
                                                    <Binding.Converter>
                                                        <dxg:DynamicLocalizationStringValueConvertor />
                                                    </Binding.Converter>
                                                </Binding>
                                            </TextBlock.Text>
                                        </TextBlock>

                                        <dxg:GroupPanelContainer VerticalAlignment="Stretch"
                                            View="{Binding Path=View, RelativeSource={RelativeSource TemplatedParent}}">
                                            <dxg:GroupPanelContainer.Resources>
                                                <Style TargetType="dx:DXBorder" x:Name="PART_BorderSeparator">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </Style>
                                            </dxg:GroupPanelContainer.Resources>

                                        </dxg:GroupPanelContainer>
                                    </Grid>
                                </Border>
                            </dx:MeasurePixelSnapper>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="dxe:PagerControl">
                <Style.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkBrush}"/>
                    </Style>
                </Style.Resources>
                <Setter Property="ShowFirstPageButton" Value="False"/>
                <Setter Property="ShowLastPageButton" Value="False"/>
                <Setter Property="HorizontalAlignment" Value="Stretch" />
            </Style>
        </Style.Resources>
    </Style>

    <Style x:Key="ProductProjectGridControl" TargetType="dxg:GridControl" BasedOn="{StaticResource ProjectGridControl}">
        <Style.Resources>
            <Style TargetType="dxg:TableView">
                <Setter Property="FadeSelectionOnLostFocus" Value="False"/>
                <Setter Property="CellStyle">
                    <Setter.Value>
                        <Style TargetType="dxg:LightweightCellEditor" BasedOn="{StaticResource {dxgt:GridRowThemeKey ResourceKey=LightweightCellStyle}}">
                            <Setter Property="TextBlock.FontSize" Value="16"/>
                            <Setter Property="HorizontalAlignment" Value="Left"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Style.Triggers>
                                <Trigger Property="dxg:DataViewBase.IsFocusedCell" Value="True" >
                                    <Setter Property="Foreground" Value="Black"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="RowStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type dxg:RowControl}">
                            <Setter Property="Height" Value="40"/>
                            <Setter Property="Foreground" Value="Black"/>
                            <Setter Property="Background" Value="Transparent" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                                    <Setter Property="Background" Value="DeepSkyBlue" />
                                    <Setter Property="Foreground" Value="Black" />
                                </DataTrigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="DodgerBlue"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="GroupRowStyle">
                    <Setter.Value>
                        <Style TargetType="dxg:GroupRowControl">
                            <Setter Property="Background" Value="DimGray" />
                            <Style.Triggers>

                                <DataTrigger Binding="{Binding GroupLevel}" Value="1">
                                    <Setter Property="Background" Value="Gray" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding GroupLevel}" Value="2">
                                    <Setter Property="Background" Value="DarkGray" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding GroupLevel}" Value="3">
                                    <Setter Property="Background" Value="LightSlateGray" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                                    <Setter Property="Background" Value="OrangeRed"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsFocused}" Value="True">
                                    <Setter Property="Background" Value="OrangeRed"/>
                                </DataTrigger>

                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="Orange"/>
                                </Trigger>
                                <!--      <DataTrigger Value="Selected"
                         Binding="{Binding SelectionState}">
                                    <Setter Property="Background" Value="#FFFFDC00" />
                                    <Setter Property="Foreground" Value="Black" />
                                    <Setter Property="FontWeight" Value="SemiBold" />
                                </DataTrigger>-->


                            </Style.Triggers>
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
    </Style>
    
    
    
    
    
    
        <Style x:Key="AlarmGridControl" TargetType="dxg:GridControl">
            <Style.Resources>
                <Style TargetType="dxg:TableView">
                    <Setter Property="CellStyle">
                        <Setter.Value>
                            <Style TargetType="dxg:LightweightCellEditor" BasedOn="{StaticResource {dxgt:GridRowThemeKey ResourceKey=LightweightCellStyle}}">
                                <Setter Property="TextBlock.FontSize" Value="14"/>
                                <Style.Triggers>
                                    <Trigger Property="dxg:DataViewBase.IsFocusedCell" Value="True" >
                                        <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Foreground" Value="{Binding Row.IsAlert , Converter={GD_Common:BooleanToBrushesConverter} ,ConverterParameter={StaticResource solidclr_Red}}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="RowStyle">
                        <Setter.Value>
                            <Style TargetType="{x:Type dxg:RowControl}">
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
                                <Style.Triggers>
                                <DataTrigger Binding="{Binding Row.IsAlert}" Value="true">
                                    <Setter Property="Foreground" Value="Red"/>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                                        <Setter Property="Background" Value="DimGray" />
                                        </DataTrigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#67b32c" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Style.Resources>
        </Style>



</ResourceDictionary>